/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e,t,n,r,a={219:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(354),a=n.n(r),l=n(314),o=n.n(l)()(a());o.push([e.id,".styles__container___Mzk5M {\n    width: 100%;\n    height: 100%;\n    max-width: 1270px;\n    margin: 0 auto;\n    padding: 0 20px;\n    box-sizing: border-box;\n}\n\n.styles__loader___D1Tbr {\n    display: flex;\n    flex: 1;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n}\n","",{version:3,sources:["webpack://./src/components/App/styles.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,YAAY;IACZ,iBAAiB;IACjB,cAAc;IACd,eAAe;IACf,sBAAsB;AAC1B;;AAEA;IACI,aAAa;IACb,OAAO;IACP,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;AAChB",sourcesContent:[".container {\n    width: 100%;\n    height: 100%;\n    max-width: 1270px;\n    margin: 0 auto;\n    padding: 0 20px;\n    box-sizing: border-box;\n}\n\n.loader {\n    display: flex;\n    flex: 1;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n}\n"],sourceRoot:""}]),o.locals={container:"styles__container___Mzk5M",loader:"styles__loader___D1Tbr"};const i=o},292:(e,t,n)=>{"use strict";n.d(t,{A:()=>u});var r=n(354),a=n.n(r),l=n(314),o=n.n(l),i=n(517),s=o()(a());s.i(i.A),s.push([e.id,".styles__container___pa8WL {\n    display: flex;\n}\n\n.styles__categories___h8nCE {\n    display: flex;\n    width: 960px;\n    flex-wrap: wrap;\n    margin: 0 0 20px 0;\n    padding: 0;\n}\n\n.styles__category___zJXiQ {\n    width: 240px;\n    list-style: none;\n}\n\n.styles__category___zJXiQ button {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n    margin: 0;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n}\n\n.styles__categoryIcon____Bi_F {\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n    margin-right: 10px;\n    border-radius: 20px;\n    border: 1px solid transparent;\n}\n.styles__selectedCategory___xw9zV button .styles__categoryIcon____Bi_F {\n    border-color: var(--selected-border-color);\n}\n","",{version:3,sources:["webpack://./src/components/Categories/styles.css"],names:[],mappings:"AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,eAAe;IACf,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,aAAa;IACb,SAAS;IACT,YAAY;IACZ,6BAA6B;IAC7B,eAAe;AACnB;;AAEA;IACI,qBAAqB;IACrB,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;IACnB,6BAA6B;AACjC;AACA;IACI,0CAA0C;AAC9C",sourcesContent:['@import "../../variables.css";\n\n.container {\n    display: flex;\n}\n\n.categories {\n    display: flex;\n    width: 960px;\n    flex-wrap: wrap;\n    margin: 0 0 20px 0;\n    padding: 0;\n}\n\n.category {\n    width: 240px;\n    list-style: none;\n}\n\n.category button {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n    margin: 0;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n}\n\n.categoryIcon {\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n    margin-right: 10px;\n    border-radius: 20px;\n    border: 1px solid transparent;\n}\n.selectedCategory button .categoryIcon {\n    border-color: var(--selected-border-color);\n}\n'],sourceRoot:""}]),s.locals={container:"styles__container___pa8WL",categories:"styles__categories___h8nCE",category:"styles__category___zJXiQ",categoryIcon:"styles__categoryIcon____Bi_F",selectedCategory:"styles__selectedCategory___xw9zV"};const u=s},346:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(354),a=n.n(r),l=n(314),o=n.n(l)()(a());o.push([e.id,'@keyframes styles__fadein___iPGGh {\n    from { opacity: 0; }\n    to { opacity: 1; }\n}\n\n.styles__backOverlay___cnBH0 {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    animation: styles__fadein___iPGGh 0.2s ease-out forwards;\n}\n\n.styles__container___YixGt {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    overflow: hidden;\n    width: 100%;\n    height: 90%;\n    max-width: 900px;\n    max-height: 800px;\n    transform: translateX(-50%) translateY(-50%);\n    background-color: #ffffff;\n}\n\n.styles__closeButton___TLYLl {\n    position: absolute;\n    top: 0;\n    right: 10px;\n    width: 60px;\n    height: 60px;\n    background-color: transparent;\n    cursor: pointer;\n    border: none;\n}\n.styles__closeButton___TLYLl::before {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 2px;\n    height: 30px;\n    background-color: #a0a0a0;\n    content: "";\n    transform: translateX(-50%) translateY(-50%) rotate(45deg);\n}\n.styles__closeButton___TLYLl::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 2px;\n    height: 30px;\n    background-color: #a0a0a0;\n    content: "";\n    transform: translateX(-50%) translateY(-50%) rotate(-45deg);\n}\n\n.styles__scrollContainer___NV4m8 {\n    overflow: auto;\n    width: 100%;\n    height: 100%;\n}\n\n.styles__contentContainer___ygQKR {\n    max-width: 740px;\n    width: 100%;\n    padding: 0 20px 20px;\n    margin: 0 auto;\n    box-sizing: border-box;\n}\n\n.styles__contentContainer___ygQKR model-viewer {\n    width: 100%;\n    height: 300px;\n}\n\n.styles__contentContainer___ygQKR h2 {\n    font-size: 26px;\n    text-align: center;\n}\n\n.styles__contentContainer___ygQKR ul {\n    margin: 0;\n    padding: 0;\n}\n\n.styles__contentContainer___ygQKR ul li {\n    display: flex;\n    list-style: none;\n    margin-bottom: 2px;\n}\n\n.styles__contentContainer___ygQKR ul li span {\n    flex: 1;\n    margin-left: 4px;\n}\n\n.styles__electronConfiguration___ZLG31 {\n    display: flex;\n    flex-direction: column;\n}\n.styles__electronConfiguration___ZLG31 > span {\n    margin-bottom: 4px;\n}\n\n.styles__linkToSource___uldiQ {\n    white-space: nowrap;\n}\n\n.styles__image___SQSYE {\n    margin-top: 30px;\n    width: 100%;\n}\n\n.styles__attribution___hWAgz {\n    display: block;\n    margin-top: 10px;\n    font-size: 11px;\n}\n',"",{version:3,sources:["webpack://./src/components/ElementPopup/styles.css"],names:[],mappings:"AAAA;IACI,OAAO,UAAU,EAAE;IACnB,KAAK,UAAU,EAAE;AACrB;;AAEA;IACI,eAAe;IACf,MAAM;IACN,OAAO;IACP,WAAW;IACX,YAAY;IACZ,UAAU;IACV,oCAAoC;IACpC,wDAAwC;AAC5C;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gBAAgB;IAChB,WAAW;IACX,WAAW;IACX,gBAAgB;IAChB,iBAAiB;IACjB,4CAA4C;IAC5C,yBAAyB;AAC7B;;AAEA;IACI,kBAAkB;IAClB,MAAM;IACN,WAAW;IACX,WAAW;IACX,YAAY;IACZ,6BAA6B;IAC7B,eAAe;IACf,YAAY;AAChB;AACA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,UAAU;IACV,YAAY;IACZ,yBAAyB;IACzB,WAAW;IACX,0DAA0D;AAC9D;AACA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,UAAU;IACV,YAAY;IACZ,yBAAyB;IACzB,WAAW;IACX,2DAA2D;AAC/D;;AAEA;IACI,cAAc;IACd,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,gBAAgB;IAChB,WAAW;IACX,oBAAoB;IACpB,cAAc;IACd,sBAAsB;AAC1B;;AAEA;IACI,WAAW;IACX,aAAa;AACjB;;AAEA;IACI,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,OAAO;IACP,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,sBAAsB;AAC1B;AACA;IACI,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,gBAAgB;IAChB,WAAW;AACf;;AAEA;IACI,cAAc;IACd,gBAAgB;IAChB,eAAe;AACnB",sourcesContent:['@keyframes fadein {\n    from { opacity: 0; }\n    to { opacity: 1; }\n}\n\n.backOverlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    animation: fadein 0.2s ease-out forwards;\n}\n\n.container {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    overflow: hidden;\n    width: 100%;\n    height: 90%;\n    max-width: 900px;\n    max-height: 800px;\n    transform: translateX(-50%) translateY(-50%);\n    background-color: #ffffff;\n}\n\n.closeButton {\n    position: absolute;\n    top: 0;\n    right: 10px;\n    width: 60px;\n    height: 60px;\n    background-color: transparent;\n    cursor: pointer;\n    border: none;\n}\n.closeButton::before {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 2px;\n    height: 30px;\n    background-color: #a0a0a0;\n    content: "";\n    transform: translateX(-50%) translateY(-50%) rotate(45deg);\n}\n.closeButton::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 2px;\n    height: 30px;\n    background-color: #a0a0a0;\n    content: "";\n    transform: translateX(-50%) translateY(-50%) rotate(-45deg);\n}\n\n.scrollContainer {\n    overflow: auto;\n    width: 100%;\n    height: 100%;\n}\n\n.contentContainer {\n    max-width: 740px;\n    width: 100%;\n    padding: 0 20px 20px;\n    margin: 0 auto;\n    box-sizing: border-box;\n}\n\n.contentContainer model-viewer {\n    width: 100%;\n    height: 300px;\n}\n\n.contentContainer h2 {\n    font-size: 26px;\n    text-align: center;\n}\n\n.contentContainer ul {\n    margin: 0;\n    padding: 0;\n}\n\n.contentContainer ul li {\n    display: flex;\n    list-style: none;\n    margin-bottom: 2px;\n}\n\n.contentContainer ul li span {\n    flex: 1;\n    margin-left: 4px;\n}\n\n.electronConfiguration {\n    display: flex;\n    flex-direction: column;\n}\n.electronConfiguration > span {\n    margin-bottom: 4px;\n}\n\n.linkToSource {\n    white-space: nowrap;\n}\n\n.image {\n    margin-top: 30px;\n    width: 100%;\n}\n\n.attribution {\n    display: block;\n    margin-top: 10px;\n    font-size: 11px;\n}\n'],sourceRoot:""}]),o.locals={backOverlay:"styles__backOverlay___cnBH0",fadein:"styles__fadein___iPGGh",container:"styles__container___YixGt",closeButton:"styles__closeButton___TLYLl",scrollContainer:"styles__scrollContainer___NV4m8",contentContainer:"styles__contentContainer___ygQKR",electronConfiguration:"styles__electronConfiguration___ZLG31",linkToSource:"styles__linkToSource___uldiQ",image:"styles__image___SQSYE",attribution:"styles__attribution___hWAgz"};const i=o},739:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(354),a=n.n(r),l=n(314),o=n.n(l)()(a());o.push([e.id,".styles__container___HVeVq {\n    display: inline-flex;\n    flex-direction: row;\n    margin: 0;\n    padding: 4px;\n    border: 1px solid #dedede;\n    border-radius: 4px;\n}\n\n.styles__container___HVeVq li {\n    list-style: none;\n}\n\n.styles__container___HVeVq li button {\n    margin: 0;\n    padding: 6px 12px;\n    color: #dedede;\n    cursor: pointer;\n    background-color: transparent;\n    border: none;\n    border-radius: 4px;\n}\n\n.styles__container___HVeVq li.styles__active___KV33i button {\n    color: #ffffff;\n    cursor: default;\n    background-color: #5c47f6;\n}\n","",{version:3,sources:["webpack://./src/components/Languages/styles.css"],names:[],mappings:"AAAA;IACI,oBAAoB;IACpB,mBAAmB;IACnB,SAAS;IACT,YAAY;IACZ,yBAAyB;IACzB,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,SAAS;IACT,iBAAiB;IACjB,cAAc;IACd,eAAe;IACf,6BAA6B;IAC7B,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,eAAe;IACf,yBAAyB;AAC7B",sourcesContent:[".container {\n    display: inline-flex;\n    flex-direction: row;\n    margin: 0;\n    padding: 4px;\n    border: 1px solid #dedede;\n    border-radius: 4px;\n}\n\n.container li {\n    list-style: none;\n}\n\n.container li button {\n    margin: 0;\n    padding: 6px 12px;\n    color: #dedede;\n    cursor: pointer;\n    background-color: transparent;\n    border: none;\n    border-radius: 4px;\n}\n\n.container li.active button {\n    color: #ffffff;\n    cursor: default;\n    background-color: #5c47f6;\n}\n"],sourceRoot:""}]),o.locals={container:"styles__container___HVeVq",active:"styles__active___KV33i"};const i=o},916:(e,t,n)=>{"use strict";n.d(t,{A:()=>u});var r=n(354),a=n.n(r),l=n(314),o=n.n(l),i=n(517),s=o()(a());s.i(i.A),s.push([e.id,".styles__cell___orNp1 {\n    list-style: none;\n    border: 1px solid transparent;\n    overflow: hidden;\n}\n\n.styles__selectedCell___oBZ16 {\n    border-color: var(--selected-border-color);\n}\n\n.styles__cellButton___cqja8 {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    flex-direction: column;\n    justify-content: space-between;\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n}\n\n.styles__top___ihZpO {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    font-size: 9px;\n}\n\n.styles__symbol___MoSNv {\n    width: 100%;\n    font-size: 18px;\n    text-align: center;\n}\n\n.styles__elementName___iizDV {\n    width: 100%;\n    font-size: 9px;\n    text-align: center;\n}\n","",{version:3,sources:["webpack://./src/components/PeriodicTable/Cell/styles.css"],names:[],mappings:"AAEA;IACI,gBAAgB;IAChB,6BAA6B;IAC7B,gBAAgB;AACpB;;AAEA;IACI,0CAA0C;AAC9C;;AAEA;IACI,aAAa;IACb,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,8BAA8B;IAC9B,sBAAsB;IACtB,UAAU;IACV,SAAS;IACT,YAAY;IACZ,6BAA6B;IAC7B,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,WAAW;IACX,cAAc;AAClB;;AAEA;IACI,WAAW;IACX,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,cAAc;IACd,kBAAkB;AACtB",sourcesContent:['@import "../../../variables.css";\n\n.cell {\n    list-style: none;\n    border: 1px solid transparent;\n    overflow: hidden;\n}\n\n.selectedCell {\n    border-color: var(--selected-border-color);\n}\n\n.cellButton {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    flex-direction: column;\n    justify-content: space-between;\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n}\n\n.top {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    font-size: 9px;\n}\n\n.symbol {\n    width: 100%;\n    font-size: 18px;\n    text-align: center;\n}\n\n.elementName {\n    width: 100%;\n    font-size: 9px;\n    text-align: center;\n}\n'],sourceRoot:""}]),s.locals={cell:"styles__cell___orNp1",selectedCell:"styles__selectedCell___oBZ16",cellButton:"styles__cellButton___cqja8",top:"styles__top___ihZpO",symbol:"styles__symbol___MoSNv",elementName:"styles__elementName___iizDV"};const u=s},924:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(354),a=n.n(r),l=n(314),o=n.n(l)()(a());o.push([e.id,"\n.styles__container___eh52j h4 {\n    height: 20px;\n    margin: 0;\n    text-align: center;\n}\n\n.styles__list___wTCaK {\n    margin-bottom: 4px;\n    font-size: 14px;\n}\n","",{version:3,sources:["webpack://./src/components/PeriodicTable/Groups/styles.css"],names:[],mappings:";AACA;IACI,YAAY;IACZ,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,eAAe;AACnB",sourcesContent:["\n.container h4 {\n    height: 20px;\n    margin: 0;\n    text-align: center;\n}\n\n.list {\n    margin-bottom: 4px;\n    font-size: 14px;\n}\n"],sourceRoot:""}]),o.locals={container:"styles__container___eh52j",list:"styles__list___wTCaK"};const i=o},638:(e,t,n)=>{"use strict";n.d(t,{A:()=>u});var r=n(354),a=n.n(r),l=n(314),o=n.n(l),i=n(517),s=o()(a());s.i(i.A),s.push([e.id,".styles__container___U_sTq {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.styles__container___U_sTq h4 {\n    margin: 0;\n    font-size: 15px;\n    writing-mode: vertical-lr;\n    text-orientation: upright;\n}\n\n.styles__list____ShVU {\n    display: flex;\n    flex-direction: column;\n    margin: 20px 0 0 0;\n    padding: 0;\n}\n\n.styles__item___DIiD_ {\n    display: flex;\n    width: var(--cell-size);\n    height: var(--cell-size);\n    padding: 2px;\n    margin-bottom: 4px;\n    font-size: 14px;\n    box-sizing: border-box;\n}\n","",{version:3,sources:["webpack://./src/components/PeriodicTable/Periods/styles.css"],names:[],mappings:"AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,SAAS;IACT,eAAe;IACf,yBAAyB;IACzB,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,wBAAwB;IACxB,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,sBAAsB;AAC1B",sourcesContent:['@import "../../../variables.css";\n\n.container {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.container h4 {\n    margin: 0;\n    font-size: 15px;\n    writing-mode: vertical-lr;\n    text-orientation: upright;\n}\n\n.list {\n    display: flex;\n    flex-direction: column;\n    margin: 20px 0 0 0;\n    padding: 0;\n}\n\n.item {\n    display: flex;\n    width: var(--cell-size);\n    height: var(--cell-size);\n    padding: 2px;\n    margin-bottom: 4px;\n    font-size: 14px;\n    box-sizing: border-box;\n}\n'],sourceRoot:""}]),s.locals={container:"styles__container___U_sTq",list:"styles__list____ShVU",item:"styles__item___DIiD_"};const u=s},413:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(354),a=n.n(r),l=n(314),o=n.n(l)()(a());o.push([e.id,".styles__list___wz0zC {\n    margin: 0;\n    padding: 0;\n}\n\n.styles__row___ctAlV {\n    list-style: none;\n    margin-bottom: 4px;\n}\n\n.styles__row___ctAlV:last-child {\n    margin-bottom: 0;\n}\n","",{version:3,sources:["webpack://./src/components/PeriodicTable/Rows/styles.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;AACpB",sourcesContent:[".list {\n    margin: 0;\n    padding: 0;\n}\n\n.row {\n    list-style: none;\n    margin-bottom: 4px;\n}\n\n.row:last-child {\n    margin-bottom: 0;\n}\n"],sourceRoot:""}]),o.locals={list:"styles__list___wz0zC",row:"styles__row___ctAlV"};const i=o},19:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(354),a=n.n(r),l=n(314),o=n.n(l)()(a());o.push([e.id,".styles__container___r4uQ3 {\n    display: flex;\n    margin-bottom: 20px;\n}\n","",{version:3,sources:["webpack://./src/components/PeriodicTable/styles.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;AACvB",sourcesContent:[".container {\n    display: flex;\n    margin-bottom: 20px;\n}\n"],sourceRoot:""}]),o.locals={container:"styles__container___r4uQ3"};const i=o},765:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(354),a=n.n(r),l=n(314),o=n.n(l)()(a());o.push([e.id,".styles__container___m5zGL {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n}\n","",{version:3,sources:["webpack://./src/components/Title/styles.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;AACvB",sourcesContent:[".container {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n}\n"],sourceRoot:""}]),o.locals={container:"styles__container___m5zGL"};const i=o},809:(e,t,n)=>{"use strict";n.d(t,{A:()=>u});var r=n(354),a=n.n(r),l=n(314),o=n.n(l),i=n(517),s=o()(a());s.i(i.A),s.push([e.id,".sharedStyles__periodItem___K8seE,\n.sharedStyles__groupItem___bfO9z {\n    align-items: center;\n    justify-content: center;\n    list-style: none;\n}\n\n.sharedStyles__groups___RKg_3,\n.sharedStyles__row___IqTA7 > ul {\n    display: flex;\n    flex-direction: row;\n    margin: 0;\n    padding: 0;\n}\n\n.sharedStyles__groupItem___bfO9z,\n.sharedStyles__cell___Jera5,\n.sharedStyles__emptyCell___NKTYb {\n    display: flex;\n    width: var(--cell-size);\n    height: var(--cell-size);\n    padding: 2px;\n    margin-right: 4px;\n    box-sizing: border-box;\n}\n.sharedStyles__groupItem___bfO9z:last-child,\n.sharedStyles__cell___Jera5:last-child,\n.sharedStyles__emptyCell___NKTYb:last-child {\n    margin-right: 0;\n}\n\n.sharedStyles__nobleGas___K8KZy {\n    background-color: #ffe7eb;\n}\n.sharedStyles__diatomicNonMetals___vSmhy {\n    background-color: #e2eeff;\n}\n.sharedStyles__transitionMetal___wRwTz {\n    background-color: #f3e8fd;\n}\n.sharedStyles__postTransitionMetal___AUrXn {\n    background-color: #d6f9e8;\n}\n.sharedStyles__metalloid___M855d {\n    background-color: #fef7e1;\n}\n.sharedStyles__alkaliMetal___coWtC {\n    background-color: #d8f8ff;\n}\n.sharedStyles__alkalineEarthMetal___s4Jh3 {\n    background-color: #ffe7e7;\n}\n.sharedStyles__unknownProperties___dUEWx {\n    background-color: #e7e7ea;\n}\n.sharedStyles__actinide___Ns3Yi {\n    background-color: #fee6d4;\n}\n.sharedStyles__lanthanide___SmTfz {\n    background-color: #dff3ff;\n}\n","",{version:3,sources:["webpack://./src/sharedStyles.css"],names:[],mappings:"AAEA;;IAEI,mBAAmB;IACnB,uBAAuB;IACvB,gBAAgB;AACpB;;AAEA;;IAEI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,UAAU;AACd;;AAEA;;;IAGI,aAAa;IACb,uBAAuB;IACvB,wBAAwB;IACxB,YAAY;IACZ,iBAAiB;IACjB,sBAAsB;AAC1B;AACA;;;IAGI,eAAe;AACnB;;AAEA;IACI,yBAAyB;AAC7B;AACA;IACI,yBAAyB;AAC7B;AACA;IACI,yBAAyB;AAC7B;AACA;IACI,yBAAyB;AAC7B;AACA;IACI,yBAAyB;AAC7B;AACA;IACI,yBAAyB;AAC7B;AACA;IACI,yBAAyB;AAC7B;AACA;IACI,yBAAyB;AAC7B;AACA;IACI,yBAAyB;AAC7B;AACA;IACI,yBAAyB;AAC7B",sourcesContent:['@import "./variables.css";\n\n.periodItem,\n.groupItem {\n    align-items: center;\n    justify-content: center;\n    list-style: none;\n}\n\n.groups,\n.row > ul {\n    display: flex;\n    flex-direction: row;\n    margin: 0;\n    padding: 0;\n}\n\n.groupItem,\n.cell,\n.emptyCell {\n    display: flex;\n    width: var(--cell-size);\n    height: var(--cell-size);\n    padding: 2px;\n    margin-right: 4px;\n    box-sizing: border-box;\n}\n.groupItem:last-child,\n.cell:last-child,\n.emptyCell:last-child {\n    margin-right: 0;\n}\n\n.nobleGas {\n    background-color: #ffe7eb;\n}\n.diatomicNonMetals {\n    background-color: #e2eeff;\n}\n.transitionMetal {\n    background-color: #f3e8fd;\n}\n.postTransitionMetal {\n    background-color: #d6f9e8;\n}\n.metalloid {\n    background-color: #fef7e1;\n}\n.alkaliMetal {\n    background-color: #d8f8ff;\n}\n.alkalineEarthMetal {\n    background-color: #ffe7e7;\n}\n.unknownProperties {\n    background-color: #e7e7ea;\n}\n.actinide {\n    background-color: #fee6d4;\n}\n.lanthanide {\n    background-color: #dff3ff;\n}\n'],sourceRoot:""}]),s.locals={periodItem:"sharedStyles__periodItem___K8seE",groupItem:"sharedStyles__groupItem___bfO9z",groups:"sharedStyles__groups___RKg_3",row:"sharedStyles__row___IqTA7",cell:"sharedStyles__cell___Jera5",emptyCell:"sharedStyles__emptyCell___NKTYb",nobleGas:"sharedStyles__nobleGas___K8KZy",diatomicNonMetals:"sharedStyles__diatomicNonMetals___vSmhy",transitionMetal:"sharedStyles__transitionMetal___wRwTz",postTransitionMetal:"sharedStyles__postTransitionMetal___AUrXn",metalloid:"sharedStyles__metalloid___M855d",alkaliMetal:"sharedStyles__alkaliMetal___coWtC",alkalineEarthMetal:"sharedStyles__alkalineEarthMetal___s4Jh3",unknownProperties:"sharedStyles__unknownProperties___dUEWx",actinide:"sharedStyles__actinide___Ns3Yi",lanthanide:"sharedStyles__lanthanide___SmTfz"};const u=s},478:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(354),a=n.n(r),l=n(314),o=n.n(l)()(a());o.push([e.id,'html {\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    height: 100%;\n    font-family: "Montserrat", serif;\n}\n\n#root {\n    height: 100%;\n}\n\n.hide {\n    overflow: hidden;\n}\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;IACI,YAAY;AAChB;;AAEA;IACI,SAAS;IACT,YAAY;IACZ,gCAAgC;AACpC;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,gBAAgB;AACpB",sourcesContent:['html {\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    height: 100%;\n    font-family: "Montserrat", serif;\n}\n\n:global(#root) {\n    height: 100%;\n}\n\n:global(.hide) {\n    overflow: hidden;\n}\n'],sourceRoot:""}]),o.locals={};const i=o},517:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(354),a=n.n(r),l=n(314),o=n.n(l)()(a());o.push([e.id,":root {\n    --selected-border-color: #000000;\n    --cell-size: 60px;\n}\n","",{version:3,sources:["webpack://./src/variables.css"],names:[],mappings:"AAAA;IACI,gCAAgC;IAChC,iBAAiB;AACrB",sourcesContent:[":root {\n    --selected-border-color: #000000;\n    --cell-size: 60px;\n}\n"],sourceRoot:""}]),o.locals={};const i=o},314:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,l){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(o[s]=!0)}for(var u=0;u<e.length;u++){var c=[].concat(e[u]);r&&o[c[0]]||(void 0!==l&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=l),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),t.push(c))}},t}},354:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),l="/*# ".concat(a," */");return[t].concat([l]).join("\n")}return[t].join("\n")}},146:(e,t,n)=>{"use strict";var r=n(363),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},l={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},o={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},i={};function s(e){return r.isMemo(e)?o:i[e.$$typeof]||a}i[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},i[r.Memo]=o;var u=Object.defineProperty,c=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var a=p(n);a&&a!==h&&e(t,a,r)}var o=c(n);f&&(o=o.concat(f(n)));for(var i=s(t),m=s(n),g=0;g<o.length;++g){var y=o[g];if(!(l[y]||r&&r[y]||m&&m[y]||i&&i[y])){var v=d(n,y);try{u(t,y,v)}catch(e){}}}}return t}},551:(e,t,n)=>{"use strict";var r=n(540),a=n(982);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,i={};function s(e,t){u(e,t),u(e+"Capture",t)}function u(e,t){for(i[e]=t,e=0;e<t.length;e++)o.add(t[e])}var c=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),f=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},h={};function m(e,t,n,r,a,l,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=l,this.removeEmptyString=o}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function v(e){return e[1].toUpperCase()}function b(e,t,n,r){var a=g.hasOwnProperty(t)?g[t]:null;(null!==a?0!==a.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!f.call(h,e)||!f.call(p,e)&&(d.test(e)?h[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,v);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,v);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,v);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var A=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,_=Symbol.for("react.element"),E=Symbol.for("react.portal"),w=Symbol.for("react.fragment"),C=Symbol.for("react.strict_mode"),S=Symbol.for("react.profiler"),k=Symbol.for("react.provider"),I=Symbol.for("react.context"),T=Symbol.for("react.forward_ref"),B=Symbol.for("react.suspense"),x=Symbol.for("react.suspense_list"),N=Symbol.for("react.memo"),P=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var L=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var M=Symbol.iterator;function R(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=M&&e[M]||e["@@iterator"])?e:null}var O,H=Object.assign;function D(e){if(void 0===O)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);O=t&&t[1]||""}return"\n"+O+e}var z=!1;function U(e,t){if(!e||z)return"";z=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(t){if(t&&r&&"string"==typeof t.stack){for(var a=t.stack.split("\n"),l=r.stack.split("\n"),o=a.length-1,i=l.length-1;1<=o&&0<=i&&a[o]!==l[i];)i--;for(;1<=o&&0<=i;o--,i--)if(a[o]!==l[i]){if(1!==o||1!==i)do{if(o--,0>--i||a[o]!==l[i]){var s="\n"+a[o].replace(" at new "," at ");return e.displayName&&s.includes("<anonymous>")&&(s=s.replace("<anonymous>",e.displayName)),s}}while(1<=o&&0<=i);break}}}finally{z=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?D(e):""}function F(e){switch(e.tag){case 5:return D(e.type);case 16:return D("Lazy");case 13:return D("Suspense");case 19:return D("SuspenseList");case 0:case 2:case 15:return U(e.type,!1);case 11:return U(e.type.render,!1);case 1:return U(e.type,!0);default:return""}}function G(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case w:return"Fragment";case E:return"Portal";case S:return"Profiler";case C:return"StrictMode";case B:return"Suspense";case x:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case I:return(e.displayName||"Context")+".Consumer";case k:return(e._context.displayName||"Context")+".Provider";case T:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case N:return null!==(t=e.displayName||null)?t:G(e.type)||"Memo";case P:t=e._payload,e=e._init;try{return G(e(t))}catch(e){}}return null}function j(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return G(t);case 8:return t===C?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function V(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function W(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function $(e){e._valueTracker||(e._valueTracker=function(e){var t=W(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,l=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,l.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Y(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=W(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Q(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function K(e,t){var n=t.checked;return H({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function X(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=V(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Z(e,t){null!=(t=t.checked)&&b(e,"checked",t,!1)}function q(e,t){Z(e,t);var n=V(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,V(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&Q(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+V(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return H({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(te(n)){if(1<n.length)throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:V(n)}}function le(e,t){var n=V(t.value),r=V(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function se(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ue,ce,fe=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ue=ue||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ue.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ce(e,t)}))}:ce);function de(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},he=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=me(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(pe).forEach((function(e){he.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ye=H({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ve(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62))}}function be(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Ae=null;function _e(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ee=null,we=null,Ce=null;function Se(e){if(e=ba(e)){if("function"!=typeof Ee)throw Error(l(280));var t=e.stateNode;t&&(t=_a(t),Ee(e.stateNode,e.type,t))}}function ke(e){we?Ce?Ce.push(e):Ce=[e]:we=e}function Ie(){if(we){var e=we,t=Ce;if(Ce=we=null,Se(e),t)for(e=0;e<t.length;e++)Se(t[e])}}function Te(e,t){return e(t)}function Be(){}var xe=!1;function Ne(e,t,n){if(xe)return e(t,n);xe=!0;try{return Te(e,t,n)}finally{xe=!1,(null!==we||null!==Ce)&&(Be(),Ie())}}function Pe(e,t){var n=e.stateNode;if(null===n)return null;var r=_a(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}var Le=!1;if(c)try{var Me={};Object.defineProperty(Me,"passive",{get:function(){Le=!0}}),window.addEventListener("test",Me,Me),window.removeEventListener("test",Me,Me)}catch(ce){Le=!1}function Re(e,t,n,r,a,l,o,i,s){var u=Array.prototype.slice.call(arguments,3);try{t.apply(n,u)}catch(e){this.onError(e)}}var Oe=!1,He=null,De=!1,ze=null,Ue={onError:function(e){Oe=!0,He=e}};function Fe(e,t,n,r,a,l,o,i,s){Oe=!1,He=null,Re.apply(Ue,arguments)}function Ge(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{!!(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function je(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ve(e){if(Ge(e)!==e)throw Error(l(188))}function We(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ge(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return Ve(a),e;if(o===r)return Ve(a),t;o=o.sibling}throw Error(l(188))}if(n.return!==r.return)n=a,r=o;else{for(var i=!1,s=a.child;s;){if(s===n){i=!0,n=a,r=o;break}if(s===r){i=!0,r=a,n=o;break}s=s.sibling}if(!i){for(s=o.child;s;){if(s===n){i=!0,n=o,r=a;break}if(s===r){i=!0,r=o,n=a;break}s=s.sibling}if(!i)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e))?$e(e):null}function $e(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=$e(e);if(null!==t)return t;e=e.sibling}return null}var Ye=a.unstable_scheduleCallback,Qe=a.unstable_cancelCallback,Ke=a.unstable_shouldYield,Xe=a.unstable_requestPaint,Ze=a.unstable_now,qe=a.unstable_getCurrentPriorityLevel,Je=a.unstable_ImmediatePriority,et=a.unstable_UserBlockingPriority,tt=a.unstable_NormalPriority,nt=a.unstable_LowPriority,rt=a.unstable_IdlePriority,at=null,lt=null,ot=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(it(e)/st|0)|0},it=Math.log,st=Math.LN2,ut=64,ct=4194304;function ft(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,a=e.suspendedLanes,l=e.pingedLanes,o=268435455&n;if(0!==o){var i=o&~a;0!==i?r=ft(i):0!=(l&=o)&&(r=ft(l))}else 0!=(o=n&~a)?r=ft(o):0!==l&&(r=ft(l));if(0===r)return 0;if(0!==t&&t!==r&&!(t&a)&&((a=r&-r)>=(l=t&-t)||16===a&&4194240&l))return t;if(4&r&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-ot(t)),r|=e[n],t&=~a;return r}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ht(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=ut;return!(4194240&(ut<<=1))&&(ut=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=n}function vt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-ot(n),a=1<<r;a&t|e[r]&t&&(e[r]|=t),n&=~a}}var bt=0;function At(e){return 1<(e&=-e)?4<e?268435455&e?16:536870912:4:1}var _t,Et,wt,Ct,St,kt=!1,It=[],Tt=null,Bt=null,xt=null,Nt=new Map,Pt=new Map,Lt=[],Mt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Rt(e,t){switch(e){case"focusin":case"focusout":Tt=null;break;case"dragenter":case"dragleave":Bt=null;break;case"mouseover":case"mouseout":xt=null;break;case"pointerover":case"pointerout":Nt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Pt.delete(t.pointerId)}}function Ot(e,t,n,r,a,l){return null===e||e.nativeEvent!==l?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:l,targetContainers:[a]},null!==t&&null!==(t=ba(t))&&Et(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function Ht(e){var t=va(e.target);if(null!==t){var n=Ge(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=je(n)))return e.blockedOn=t,void St(e.priority,(function(){wt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Dt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Kt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=ba(n))&&Et(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);Ae=r,n.target.dispatchEvent(r),Ae=null,t.shift()}return!0}function zt(e,t,n){Dt(e)&&n.delete(t)}function Ut(){kt=!1,null!==Tt&&Dt(Tt)&&(Tt=null),null!==Bt&&Dt(Bt)&&(Bt=null),null!==xt&&Dt(xt)&&(xt=null),Nt.forEach(zt),Pt.forEach(zt)}function Ft(e,t){e.blockedOn===t&&(e.blockedOn=null,kt||(kt=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Ut)))}function Gt(e){function t(t){return Ft(t,e)}if(0<It.length){Ft(It[0],e);for(var n=1;n<It.length;n++){var r=It[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Tt&&Ft(Tt,e),null!==Bt&&Ft(Bt,e),null!==xt&&Ft(xt,e),Nt.forEach(t),Pt.forEach(t),n=0;n<Lt.length;n++)(r=Lt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Lt.length&&null===(n=Lt[0]).blockedOn;)Ht(n),null===n.blockedOn&&Lt.shift()}var jt=A.ReactCurrentBatchConfig,Vt=!0;function Wt(e,t,n,r){var a=bt,l=jt.transition;jt.transition=null;try{bt=1,Yt(e,t,n,r)}finally{bt=a,jt.transition=l}}function $t(e,t,n,r){var a=bt,l=jt.transition;jt.transition=null;try{bt=4,Yt(e,t,n,r)}finally{bt=a,jt.transition=l}}function Yt(e,t,n,r){if(Vt){var a=Kt(e,t,n,r);if(null===a)Vr(e,t,r,Qt,n),Rt(e,r);else if(function(e,t,n,r,a){switch(t){case"focusin":return Tt=Ot(Tt,e,t,n,r,a),!0;case"dragenter":return Bt=Ot(Bt,e,t,n,r,a),!0;case"mouseover":return xt=Ot(xt,e,t,n,r,a),!0;case"pointerover":var l=a.pointerId;return Nt.set(l,Ot(Nt.get(l)||null,e,t,n,r,a)),!0;case"gotpointercapture":return l=a.pointerId,Pt.set(l,Ot(Pt.get(l)||null,e,t,n,r,a)),!0}return!1}(a,e,t,n,r))r.stopPropagation();else if(Rt(e,r),4&t&&-1<Mt.indexOf(e)){for(;null!==a;){var l=ba(a);if(null!==l&&_t(l),null===(l=Kt(e,t,n,r))&&Vr(e,t,r,Qt,n),l===a)break;a=l}null!==a&&r.stopPropagation()}else Vr(e,t,r,null,n)}}var Qt=null;function Kt(e,t,n,r){if(Qt=null,null!==(e=va(e=_e(r))))if(null===(t=Ge(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=je(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Qt=e,null}function Xt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(qe()){case Je:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Zt=null,qt=null,Jt=null;function en(){if(Jt)return Jt;var e,t,n=qt,r=n.length,a="value"in Zt?Zt.value:Zt.textContent,l=a.length;for(e=0;e<r&&n[e]===a[e];e++);var o=r-e;for(t=1;t<=o&&n[r-t]===a[l-t];t++);return Jt=a.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function an(e){function t(t,n,r,a,l){for(var o in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=l,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(a):a[o]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return H(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var ln,on,sn,un={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cn=an(un),fn=H({},un,{view:0,detail:0}),dn=an(fn),pn=H({},fn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Sn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sn&&(sn&&"mousemove"===e.type?(ln=e.screenX-sn.screenX,on=e.screenY-sn.screenY):on=ln=0,sn=e),ln)},movementY:function(e){return"movementY"in e?e.movementY:on}}),hn=an(pn),mn=an(H({},pn,{dataTransfer:0})),gn=an(H({},fn,{relatedTarget:0})),yn=an(H({},un,{animationName:0,elapsedTime:0,pseudoElement:0})),vn=H({},un,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),bn=an(vn),An=an(H({},un,{data:0})),_n={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},En={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},wn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Cn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=wn[e])&&!!t[e]}function Sn(){return Cn}var kn=H({},fn,{key:function(e){if(e.key){var t=_n[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?En[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Sn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),In=an(kn),Tn=an(H({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Bn=an(H({},fn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Sn})),xn=an(H({},un,{propertyName:0,elapsedTime:0,pseudoElement:0})),Nn=H({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Pn=an(Nn),Ln=[9,13,27,32],Mn=c&&"CompositionEvent"in window,Rn=null;c&&"documentMode"in document&&(Rn=document.documentMode);var On=c&&"TextEvent"in window&&!Rn,Hn=c&&(!Mn||Rn&&8<Rn&&11>=Rn),Dn=String.fromCharCode(32),zn=!1;function Un(e,t){switch(e){case"keyup":return-1!==Ln.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Fn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Gn=!1,jn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!jn[e.type]:"textarea"===t}function Wn(e,t,n,r){ke(r),0<(t=$r(t,"onChange")).length&&(n=new cn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var $n=null,Yn=null;function Qn(e){Dr(e,0)}function Kn(e){if(Y(Aa(e)))return e}function Xn(e,t){if("change"===e)return t}var Zn=!1;if(c){var qn;if(c){var Jn="oninput"in document;if(!Jn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Jn="function"==typeof er.oninput}qn=Jn}else qn=!1;Zn=qn&&(!document.documentMode||9<document.documentMode)}function tr(){$n&&($n.detachEvent("onpropertychange",nr),Yn=$n=null)}function nr(e){if("value"===e.propertyName&&Kn(Yn)){var t=[];Wn(t,Yn,e,_e(e)),Ne(Qn,t)}}function rr(e,t,n){"focusin"===e?(tr(),Yn=n,($n=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function ar(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Kn(Yn)}function lr(e,t){if("click"===e)return Kn(t)}function or(e,t){if("input"===e||"change"===e)return Kn(t)}var ir="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function sr(e,t){if(ir(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var a=n[r];if(!f.call(t,a)||!ir(e[a],t[a]))return!1}return!0}function ur(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=ur(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ur(r)}}function fr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dr(){for(var e=window,t=Q();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Q((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function hr(e){var t=dr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&fr(n.ownerDocument.documentElement,n)){if(null!==r&&pr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=n.textContent.length,l=Math.min(r.start,a);r=void 0===r.end?l:Math.min(r.end,a),!e.extend&&l>r&&(a=r,r=l,l=a),a=cr(n,l);var o=cr(n,r);a&&o&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),l>r?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var mr=c&&"documentMode"in document&&11>=document.documentMode,gr=null,yr=null,vr=null,br=!1;function Ar(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;br||null==gr||gr!==Q(r)||(r="selectionStart"in(r=gr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},vr&&sr(vr,r)||(vr=r,0<(r=$r(yr,"onSelect")).length&&(t=new cn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=gr)))}function _r(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Er={animationend:_r("Animation","AnimationEnd"),animationiteration:_r("Animation","AnimationIteration"),animationstart:_r("Animation","AnimationStart"),transitionend:_r("Transition","TransitionEnd")},wr={},Cr={};function Sr(e){if(wr[e])return wr[e];if(!Er[e])return e;var t,n=Er[e];for(t in n)if(n.hasOwnProperty(t)&&t in Cr)return wr[e]=n[t];return e}c&&(Cr=document.createElement("div").style,"AnimationEvent"in window||(delete Er.animationend.animation,delete Er.animationiteration.animation,delete Er.animationstart.animation),"TransitionEvent"in window||delete Er.transitionend.transition);var kr=Sr("animationend"),Ir=Sr("animationiteration"),Tr=Sr("animationstart"),Br=Sr("transitionend"),xr=new Map,Nr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Pr(e,t){xr.set(e,t),s(t,[e])}for(var Lr=0;Lr<Nr.length;Lr++){var Mr=Nr[Lr];Pr(Mr.toLowerCase(),"on"+(Mr[0].toUpperCase()+Mr.slice(1)))}Pr(kr,"onAnimationEnd"),Pr(Ir,"onAnimationIteration"),Pr(Tr,"onAnimationStart"),Pr("dblclick","onDoubleClick"),Pr("focusin","onFocus"),Pr("focusout","onBlur"),Pr(Br,"onTransitionEnd"),u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Rr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Or=new Set("cancel close invalid load scroll toggle".split(" ").concat(Rr));function Hr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,o,i,s,u){if(Fe.apply(this,arguments),Oe){if(!Oe)throw Error(l(198));var c=He;Oe=!1,He=null,De||(De=!0,ze=c)}}(r,t,void 0,e),e.currentTarget=null}function Dr(e,t){t=!!(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var l=void 0;if(t)for(var o=r.length-1;0<=o;o--){var i=r[o],s=i.instance,u=i.currentTarget;if(i=i.listener,s!==l&&a.isPropagationStopped())break e;Hr(a,i,u),l=s}else for(o=0;o<r.length;o++){if(s=(i=r[o]).instance,u=i.currentTarget,i=i.listener,s!==l&&a.isPropagationStopped())break e;Hr(a,i,u),l=s}}}if(De)throw e=ze,De=!1,ze=null,e}function zr(e,t){var n=t[ma];void 0===n&&(n=t[ma]=new Set);var r=e+"__bubble";n.has(r)||(jr(t,e,2,!1),n.add(r))}function Ur(e,t,n){var r=0;t&&(r|=4),jr(n,e,r,t)}var Fr="_reactListening"+Math.random().toString(36).slice(2);function Gr(e){if(!e[Fr]){e[Fr]=!0,o.forEach((function(t){"selectionchange"!==t&&(Or.has(t)||Ur(t,!1,e),Ur(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Fr]||(t[Fr]=!0,Ur("selectionchange",!1,t))}}function jr(e,t,n,r){switch(Xt(t)){case 1:var a=Wt;break;case 4:a=$t;break;default:a=Yt}n=a.bind(null,t,n,e),a=void 0,!Le||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Vr(e,t,n,r,a){var l=r;if(!(1&t||2&t||null===r))e:for(;;){if(null===r)return;var o=r.tag;if(3===o||4===o){var i=r.stateNode.containerInfo;if(i===a||8===i.nodeType&&i.parentNode===a)break;if(4===o)for(o=r.return;null!==o;){var s=o.tag;if((3===s||4===s)&&((s=o.stateNode.containerInfo)===a||8===s.nodeType&&s.parentNode===a))return;o=o.return}for(;null!==i;){if(null===(o=va(i)))return;if(5===(s=o.tag)||6===s){r=l=o;continue e}i=i.parentNode}}r=r.return}Ne((function(){var r=l,a=_e(n),o=[];e:{var i=xr.get(e);if(void 0!==i){var s=cn,u=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":s=In;break;case"focusin":u="focus",s=gn;break;case"focusout":u="blur",s=gn;break;case"beforeblur":case"afterblur":s=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":s=hn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":s=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":s=Bn;break;case kr:case Ir:case Tr:s=yn;break;case Br:s=xn;break;case"scroll":s=dn;break;case"wheel":s=Pn;break;case"copy":case"cut":case"paste":s=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":s=Tn}var c=!!(4&t),f=!c&&"scroll"===e,d=c?null!==i?i+"Capture":null:i;c=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=Pe(h,d))&&c.push(Wr(h,m,p))),f)break;h=h.return}0<c.length&&(i=new s(i,u,null,n,a),o.push({event:i,listeners:c}))}}if(!(7&t)){if(s="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===Ae||!(u=n.relatedTarget||n.fromElement)||!va(u)&&!u[ha])&&(s||i)&&(i=a.window===a?a:(i=a.ownerDocument)?i.defaultView||i.parentWindow:window,s?(s=r,null!==(u=(u=n.relatedTarget||n.toElement)?va(u):null)&&(u!==(f=Ge(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(s=null,u=r),s!==u)){if(c=hn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=Tn,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==s?i:Aa(s),p=null==u?i:Aa(u),(i=new c(m,h+"leave",s,n,a)).target=f,i.relatedTarget=p,m=null,va(a)===r&&((c=new c(d,h+"enter",u,n,a)).target=p,c.relatedTarget=f,m=c),f=m,s&&u)e:{for(d=u,h=0,p=c=s;p;p=Yr(p))h++;for(p=0,m=d;m;m=Yr(m))p++;for(;0<h-p;)c=Yr(c),h--;for(;0<p-h;)d=Yr(d),p--;for(;h--;){if(c===d||null!==d&&c===d.alternate)break e;c=Yr(c),d=Yr(d)}c=null}else c=null;null!==s&&Qr(o,i,s,c,!1),null!==u&&null!==f&&Qr(o,f,u,c,!0)}if("select"===(s=(i=r?Aa(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===s&&"file"===i.type)var g=Xn;else if(Vn(i))if(Zn)g=or;else{g=ar;var y=rr}else(s=i.nodeName)&&"input"===s.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(g=lr);switch(g&&(g=g(e,r))?Wn(o,g,n,a):(y&&y(e,i,r),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ee(i,"number",i.value)),y=r?Aa(r):window,e){case"focusin":(Vn(y)||"true"===y.contentEditable)&&(gr=y,yr=r,vr=null);break;case"focusout":vr=yr=gr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,Ar(o,n,a);break;case"selectionchange":if(mr)break;case"keydown":case"keyup":Ar(o,n,a)}var v;if(Mn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else Gn?Un(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Hn&&"ko"!==n.locale&&(Gn||"onCompositionStart"!==b?"onCompositionEnd"===b&&Gn&&(v=en()):(qt="value"in(Zt=a)?Zt.value:Zt.textContent,Gn=!0)),0<(y=$r(r,b)).length&&(b=new An(b,e,null,n,a),o.push({event:b,listeners:y}),(v||null!==(v=Fn(n)))&&(b.data=v))),(v=On?function(e,t){switch(e){case"compositionend":return Fn(t);case"keypress":return 32!==t.which?null:(zn=!0,Dn);case"textInput":return(e=t.data)===Dn&&zn?null:e;default:return null}}(e,n):function(e,t){if(Gn)return"compositionend"===e||!Mn&&Un(e,t)?(e=en(),Jt=qt=Zt=null,Gn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Hn&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(r=$r(r,"onBeforeInput")).length&&(a=new An("onBeforeInput","beforeinput",null,n,a),o.push({event:a,listeners:r}),a.data=v)}Dr(o,t)}))}function Wr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function $r(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,l=a.stateNode;5===a.tag&&null!==l&&(a=l,null!=(l=Pe(e,n))&&r.unshift(Wr(e,l,a)),null!=(l=Pe(e,t))&&r.push(Wr(e,l,a))),e=e.return}return r}function Yr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Qr(e,t,n,r,a){for(var l=t._reactName,o=[];null!==n&&n!==r;){var i=n,s=i.alternate,u=i.stateNode;if(null!==s&&s===r)break;5===i.tag&&null!==u&&(i=u,a?null!=(s=Pe(n,l))&&o.unshift(Wr(n,s,i)):a||null!=(s=Pe(n,l))&&o.push(Wr(n,s,i))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}var Kr=/\r\n?/g,Xr=/\u0000|\uFFFD/g;function Zr(e){return("string"==typeof e?e:""+e).replace(Kr,"\n").replace(Xr,"")}function qr(e,t,n){if(t=Zr(t),Zr(e)!==t&&n)throw Error(l(425))}function Jr(){}var ea=null,ta=null;function na(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ra="function"==typeof setTimeout?setTimeout:void 0,aa="function"==typeof clearTimeout?clearTimeout:void 0,la="function"==typeof Promise?Promise:void 0,oa="function"==typeof queueMicrotask?queueMicrotask:void 0!==la?function(e){return la.resolve(null).then(e).catch(ia)}:ra;function ia(e){setTimeout((function(){throw e}))}function sa(e,t){var n=t,r=0;do{var a=n.nextSibling;if(e.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0===r)return e.removeChild(a),void Gt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=a}while(n);Gt(t)}function ua(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ca(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var fa=Math.random().toString(36).slice(2),da="__reactFiber$"+fa,pa="__reactProps$"+fa,ha="__reactContainer$"+fa,ma="__reactEvents$"+fa,ga="__reactListeners$"+fa,ya="__reactHandles$"+fa;function va(e){var t=e[da];if(t)return t;for(var n=e.parentNode;n;){if(t=n[ha]||n[da]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ca(e);null!==e;){if(n=e[da])return n;e=ca(e)}return t}n=(e=n).parentNode}return null}function ba(e){return!(e=e[da]||e[ha])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Aa(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function _a(e){return e[pa]||null}var Ea=[],wa=-1;function Ca(e){return{current:e}}function Sa(e){0>wa||(e.current=Ea[wa],Ea[wa]=null,wa--)}function ka(e,t){wa++,Ea[wa]=e.current,e.current=t}var Ia={},Ta=Ca(Ia),Ba=Ca(!1),xa=Ia;function Na(e,t){var n=e.type.contextTypes;if(!n)return Ia;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,l={};for(a in n)l[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=l),l}function Pa(e){return null!=e.childContextTypes}function La(){Sa(Ba),Sa(Ta)}function Ma(e,t,n){if(Ta.current!==Ia)throw Error(l(168));ka(Ta,t),ka(Ba,n)}function Ra(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in t))throw Error(l(108,j(e)||"Unknown",a));return H({},n,r)}function Oa(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ia,xa=Ta.current,ka(Ta,e),ka(Ba,Ba.current),!0}function Ha(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=Ra(e,t,xa),r.__reactInternalMemoizedMergedChildContext=e,Sa(Ba),Sa(Ta),ka(Ta,e)):Sa(Ba),ka(Ba,n)}var Da=null,za=!1,Ua=!1;function Fa(e){null===Da?Da=[e]:Da.push(e)}function Ga(){if(!Ua&&null!==Da){Ua=!0;var e=0,t=bt;try{var n=Da;for(bt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}Da=null,za=!1}catch(t){throw null!==Da&&(Da=Da.slice(e+1)),Ye(Je,Ga),t}finally{bt=t,Ua=!1}}return null}var ja=[],Va=0,Wa=null,$a=0,Ya=[],Qa=0,Ka=null,Xa=1,Za="";function qa(e,t){ja[Va++]=$a,ja[Va++]=Wa,Wa=e,$a=t}function Ja(e,t,n){Ya[Qa++]=Xa,Ya[Qa++]=Za,Ya[Qa++]=Ka,Ka=e;var r=Xa;e=Za;var a=32-ot(r)-1;r&=~(1<<a),n+=1;var l=32-ot(t)+a;if(30<l){var o=a-a%5;l=(r&(1<<o)-1).toString(32),r>>=o,a-=o,Xa=1<<32-ot(t)+a|n<<a|r,Za=l+e}else Xa=1<<l|n<<a|r,Za=e}function el(e){null!==e.return&&(qa(e,1),Ja(e,1,0))}function tl(e){for(;e===Wa;)Wa=ja[--Va],ja[Va]=null,$a=ja[--Va],ja[Va]=null;for(;e===Ka;)Ka=Ya[--Qa],Ya[Qa]=null,Za=Ya[--Qa],Ya[Qa]=null,Xa=Ya[--Qa],Ya[Qa]=null}var nl=null,rl=null,al=!1,ll=null;function ol(e,t){var n=Nu(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function il(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,nl=e,rl=ua(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,nl=e,rl=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Ka?{id:Xa,overflow:Za}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Nu(18,null,null,0)).stateNode=t,n.return=e,e.child=n,nl=e,rl=null,!0);default:return!1}}function sl(e){return!(!(1&e.mode)||128&e.flags)}function ul(e){if(al){var t=rl;if(t){var n=t;if(!il(e,t)){if(sl(e))throw Error(l(418));t=ua(n.nextSibling);var r=nl;t&&il(e,t)?ol(r,n):(e.flags=-4097&e.flags|2,al=!1,nl=e)}}else{if(sl(e))throw Error(l(418));e.flags=-4097&e.flags|2,al=!1,nl=e}}}function cl(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;nl=e}function fl(e){if(e!==nl)return!1;if(!al)return cl(e),al=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!na(e.type,e.memoizedProps)),t&&(t=rl)){if(sl(e))throw dl(),Error(l(418));for(;t;)ol(e,t),t=ua(t.nextSibling)}if(cl(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){rl=ua(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}rl=null}}else rl=nl?ua(e.stateNode.nextSibling):null;return!0}function dl(){for(var e=rl;e;)e=ua(e.nextSibling)}function pl(){rl=nl=null,al=!1}function hl(e){null===ll?ll=[e]:ll.push(e)}var ml=A.ReactCurrentBatchConfig;function gl(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var a=r,o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=a.refs;null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function yl(e,t){throw e=Object.prototype.toString.call(t),Error(l(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function vl(e){return(0,e._init)(e._payload)}function bl(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Lu(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function s(e,t,n,r){return null===t||6!==t.tag?((t=Hu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function u(e,t,n,r){var l=n.type;return l===w?f(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===l||"object"==typeof l&&null!==l&&l.$$typeof===P&&vl(l)===t.type)?((r=a(t,n.props)).ref=gl(e,t,n),r.return=e,r):((r=Mu(n.type,n.key,n.props,null,e.mode,r)).ref=gl(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Du(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function f(e,t,n,r,l){return null===t||7!==t.tag?((t=Ru(n,e.mode,r,l)).return=e,t):((t=a(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Hu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case _:return(n=Mu(t.type,t.key,t.props,null,e.mode,n)).ref=gl(e,null,t),n.return=e,n;case E:return(t=Du(t,e.mode,n)).return=e,t;case P:return d(e,(0,t._init)(t._payload),n)}if(te(t)||R(t))return(t=Ru(t,e.mode,n,null)).return=e,t;yl(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==a?null:s(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case _:return n.key===a?u(e,t,n,r):null;case E:return n.key===a?c(e,t,n,r):null;case P:return p(e,t,(a=n._init)(n._payload),r)}if(te(n)||R(n))return null!==a?null:f(e,t,n,r,null);yl(e,n)}return null}function h(e,t,n,r,a){if("string"==typeof r&&""!==r||"number"==typeof r)return s(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case _:return u(t,e=e.get(null===r.key?n:r.key)||null,r,a);case E:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a);case P:return h(e,t,n,(0,r._init)(r._payload),a)}if(te(r)||R(r))return f(t,e=e.get(n)||null,r,a,null);yl(t,r)}return null}function m(a,l,i,s){for(var u=null,c=null,f=l,m=l=0,g=null;null!==f&&m<i.length;m++){f.index>m?(g=f,f=null):g=f.sibling;var y=p(a,f,i[m],s);if(null===y){null===f&&(f=g);break}e&&f&&null===y.alternate&&t(a,f),l=o(y,l,m),null===c?u=y:c.sibling=y,c=y,f=g}if(m===i.length)return n(a,f),al&&qa(a,m),u;if(null===f){for(;m<i.length;m++)null!==(f=d(a,i[m],s))&&(l=o(f,l,m),null===c?u=f:c.sibling=f,c=f);return al&&qa(a,m),u}for(f=r(a,f);m<i.length;m++)null!==(g=h(f,a,m,i[m],s))&&(e&&null!==g.alternate&&f.delete(null===g.key?m:g.key),l=o(g,l,m),null===c?u=g:c.sibling=g,c=g);return e&&f.forEach((function(e){return t(a,e)})),al&&qa(a,m),u}function g(a,i,s,u){var c=R(s);if("function"!=typeof c)throw Error(l(150));if(null==(s=c.call(s)))throw Error(l(151));for(var f=c=null,m=i,g=i=0,y=null,v=s.next();null!==m&&!v.done;g++,v=s.next()){m.index>g?(y=m,m=null):y=m.sibling;var b=p(a,m,v.value,u);if(null===b){null===m&&(m=y);break}e&&m&&null===b.alternate&&t(a,m),i=o(b,i,g),null===f?c=b:f.sibling=b,f=b,m=y}if(v.done)return n(a,m),al&&qa(a,g),c;if(null===m){for(;!v.done;g++,v=s.next())null!==(v=d(a,v.value,u))&&(i=o(v,i,g),null===f?c=v:f.sibling=v,f=v);return al&&qa(a,g),c}for(m=r(a,m);!v.done;g++,v=s.next())null!==(v=h(m,a,g,v.value,u))&&(e&&null!==v.alternate&&m.delete(null===v.key?g:v.key),i=o(v,i,g),null===f?c=v:f.sibling=v,f=v);return e&&m.forEach((function(e){return t(a,e)})),al&&qa(a,g),c}return function e(r,l,o,s){if("object"==typeof o&&null!==o&&o.type===w&&null===o.key&&(o=o.props.children),"object"==typeof o&&null!==o){switch(o.$$typeof){case _:e:{for(var u=o.key,c=l;null!==c;){if(c.key===u){if((u=o.type)===w){if(7===c.tag){n(r,c.sibling),(l=a(c,o.props.children)).return=r,r=l;break e}}else if(c.elementType===u||"object"==typeof u&&null!==u&&u.$$typeof===P&&vl(u)===c.type){n(r,c.sibling),(l=a(c,o.props)).ref=gl(r,c,o),l.return=r,r=l;break e}n(r,c);break}t(r,c),c=c.sibling}o.type===w?((l=Ru(o.props.children,r.mode,s,o.key)).return=r,r=l):((s=Mu(o.type,o.key,o.props,null,r.mode,s)).ref=gl(r,l,o),s.return=r,r=s)}return i(r);case E:e:{for(c=o.key;null!==l;){if(l.key===c){if(4===l.tag&&l.stateNode.containerInfo===o.containerInfo&&l.stateNode.implementation===o.implementation){n(r,l.sibling),(l=a(l,o.children||[])).return=r,r=l;break e}n(r,l);break}t(r,l),l=l.sibling}(l=Du(o,r.mode,s)).return=r,r=l}return i(r);case P:return e(r,l,(c=o._init)(o._payload),s)}if(te(o))return m(r,l,o,s);if(R(o))return g(r,l,o,s);yl(r,o)}return"string"==typeof o&&""!==o||"number"==typeof o?(o=""+o,null!==l&&6===l.tag?(n(r,l.sibling),(l=a(l,o)).return=r,r=l):(n(r,l),(l=Hu(o,r.mode,s)).return=r,r=l),i(r)):n(r,l)}}var Al=bl(!0),_l=bl(!1),El=Ca(null),wl=null,Cl=null,Sl=null;function kl(){Sl=Cl=wl=null}function Il(e){var t=El.current;Sa(El),e._currentValue=t}function Tl(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function Bl(e,t){wl=e,Sl=Cl=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(!!(e.lanes&t)&&(bi=!0),e.firstContext=null)}function xl(e){var t=e._currentValue;if(Sl!==e)if(e={context:e,memoizedValue:t,next:null},null===Cl){if(null===wl)throw Error(l(308));Cl=e,wl.dependencies={lanes:0,firstContext:e}}else Cl=Cl.next=e;return t}var Nl=null;function Pl(e){null===Nl?Nl=[e]:Nl.push(e)}function Ll(e,t,n,r){var a=t.interleaved;return null===a?(n.next=n,Pl(t)):(n.next=a.next,a.next=n),t.interleaved=n,Ml(e,r)}function Ml(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Rl=!1;function Ol(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Hl(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Dl(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function zl(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,2&Ts){var a=r.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),r.pending=t,Ml(e,n)}return null===(a=r.interleaved)?(t.next=t,Pl(r)):(t.next=a.next,a.next=t),r.interleaved=t,Ml(e,n)}function Ul(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,vt(e,n)}}function Fl(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,l=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===l?a=l=o:l=l.next=o,n=n.next}while(null!==n);null===l?a=l=t:l=l.next=t}else a=l=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:l,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Gl(e,t,n,r){var a=e.updateQueue;Rl=!1;var l=a.firstBaseUpdate,o=a.lastBaseUpdate,i=a.shared.pending;if(null!==i){a.shared.pending=null;var s=i,u=s.next;s.next=null,null===o?l=u:o.next=u,o=s;var c=e.alternate;null!==c&&(i=(c=c.updateQueue).lastBaseUpdate)!==o&&(null===i?c.firstBaseUpdate=u:i.next=u,c.lastBaseUpdate=s)}if(null!==l){var f=a.baseState;for(o=0,c=u=s=null,i=l;;){var d=i.lane,p=i.eventTime;if((r&d)===d){null!==c&&(c=c.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,m=i;switch(d=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){f=h.call(p,f,d);break e}f=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null==(d="function"==typeof(h=m.payload)?h.call(p,f,d):h))break e;f=H({},f,d);break e;case 2:Rl=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(d=a.effects)?a.effects=[i]:d.push(i))}else p={eventTime:p,lane:d,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===c?(u=c=p,s=f):c=c.next=p,o|=d;if(null===(i=i.next)){if(null===(i=a.shared.pending))break;i=(d=i).next,d.next=null,a.lastBaseUpdate=d,a.shared.pending=null}}if(null===c&&(s=f),a.baseState=s,a.firstBaseUpdate=u,a.lastBaseUpdate=c,null!==(t=a.shared.interleaved)){a=t;do{o|=a.lane,a=a.next}while(a!==t)}else null===l&&(a.shared.lanes=0);Os|=o,e.lanes=o,e.memoizedState=f}}function jl(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(l(191,a));a.call(r)}}}var Vl={},Wl=Ca(Vl),$l=Ca(Vl),Yl=Ca(Vl);function Ql(e){if(e===Vl)throw Error(l(174));return e}function Kl(e,t){switch(ka(Yl,t),ka($l,e),ka(Wl,Vl),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:se(null,"");break;default:t=se(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Sa(Wl),ka(Wl,t)}function Xl(){Sa(Wl),Sa($l),Sa(Yl)}function Zl(e){Ql(Yl.current);var t=Ql(Wl.current),n=se(t,e.type);t!==n&&(ka($l,e),ka(Wl,n))}function ql(e){$l.current===e&&(Sa(Wl),Sa($l))}var Jl=Ca(0);function eo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(128&t.flags)return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var to=[];function no(){for(var e=0;e<to.length;e++)to[e]._workInProgressVersionPrimary=null;to.length=0}var ro=A.ReactCurrentDispatcher,ao=A.ReactCurrentBatchConfig,lo=0,oo=null,io=null,so=null,uo=!1,co=!1,fo=0,po=0;function ho(){throw Error(l(321))}function mo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ir(e[n],t[n]))return!1;return!0}function go(e,t,n,r,a,o){if(lo=o,oo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ro.current=null===e||null===e.memoizedState?Jo:ei,e=n(r,a),co){o=0;do{if(co=!1,fo=0,25<=o)throw Error(l(301));o+=1,so=io=null,t.updateQueue=null,ro.current=ti,e=n(r,a)}while(co)}if(ro.current=qo,t=null!==io&&null!==io.next,lo=0,so=io=oo=null,uo=!1,t)throw Error(l(300));return e}function yo(){var e=0!==fo;return fo=0,e}function vo(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===so?oo.memoizedState=so=e:so=so.next=e,so}function bo(){if(null===io){var e=oo.alternate;e=null!==e?e.memoizedState:null}else e=io.next;var t=null===so?oo.memoizedState:so.next;if(null!==t)so=t,io=e;else{if(null===e)throw Error(l(310));e={memoizedState:(io=e).memoizedState,baseState:io.baseState,baseQueue:io.baseQueue,queue:io.queue,next:null},null===so?oo.memoizedState=so=e:so=so.next=e}return so}function Ao(e,t){return"function"==typeof t?t(e):t}function _o(e){var t=bo(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=io,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var i=a.next;a.next=o.next,o.next=i}r.baseQueue=a=o,n.pending=null}if(null!==a){o=a.next,r=r.baseState;var s=i=null,u=null,c=o;do{var f=c.lane;if((lo&f)===f)null!==u&&(u=u.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var d={lane:f,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===u?(s=u=d,i=r):u=u.next=d,oo.lanes|=f,Os|=f}c=c.next}while(null!==c&&c!==o);null===u?i=r:u.next=s,ir(r,t.memoizedState)||(bi=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=u,n.lastRenderedState=r}if(null!==(e=n.interleaved)){a=e;do{o=a.lane,oo.lanes|=o,Os|=o,a=a.next}while(a!==e)}else null===a&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Eo(e){var t=bo(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,o=t.memoizedState;if(null!==a){n.pending=null;var i=a=a.next;do{o=e(o,i.action),i=i.next}while(i!==a);ir(o,t.memoizedState)||(bi=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function wo(){}function Co(e,t){var n=oo,r=bo(),a=t(),o=!ir(r.memoizedState,a);if(o&&(r.memoizedState=a,bi=!0),r=r.queue,Oo(Io.bind(null,n,r,e),[e]),r.getSnapshot!==t||o||null!==so&&1&so.memoizedState.tag){if(n.flags|=2048,No(9,ko.bind(null,n,r,a,t),void 0,null),null===Bs)throw Error(l(349));30&lo||So(n,t,a)}return a}function So(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=oo.updateQueue)?(t={lastEffect:null,stores:null},oo.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function ko(e,t,n,r){t.value=n,t.getSnapshot=r,To(t)&&Bo(e)}function Io(e,t,n){return n((function(){To(t)&&Bo(e)}))}function To(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ir(e,n)}catch(e){return!0}}function Bo(e){var t=Ml(e,1);null!==t&&nu(t,e,1,-1)}function xo(e){var t=vo();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ao,lastRenderedState:e},t.queue=e,e=e.dispatch=Qo.bind(null,oo,e),[t.memoizedState,e]}function No(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=oo.updateQueue)?(t={lastEffect:null,stores:null},oo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Po(){return bo().memoizedState}function Lo(e,t,n,r){var a=vo();oo.flags|=e,a.memoizedState=No(1|t,n,void 0,void 0===r?null:r)}function Mo(e,t,n,r){var a=bo();r=void 0===r?null:r;var l=void 0;if(null!==io){var o=io.memoizedState;if(l=o.destroy,null!==r&&mo(r,o.deps))return void(a.memoizedState=No(t,n,l,r))}oo.flags|=e,a.memoizedState=No(1|t,n,l,r)}function Ro(e,t){return Lo(8390656,8,e,t)}function Oo(e,t){return Mo(2048,8,e,t)}function Ho(e,t){return Mo(4,2,e,t)}function Do(e,t){return Mo(4,4,e,t)}function zo(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Uo(e,t,n){return n=null!=n?n.concat([e]):null,Mo(4,4,zo.bind(null,t,e),n)}function Fo(){}function Go(e,t){var n=bo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&mo(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function jo(e,t){var n=bo();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&mo(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Vo(e,t,n){return 21&lo?(ir(n,t)||(n=mt(),oo.lanes|=n,Os|=n,e.baseState=!0),t):(e.baseState&&(e.baseState=!1,bi=!0),e.memoizedState=n)}function Wo(e,t){var n=bt;bt=0!==n&&4>n?n:4,e(!0);var r=ao.transition;ao.transition={};try{e(!1),t()}finally{bt=n,ao.transition=r}}function $o(){return bo().memoizedState}function Yo(e,t,n){var r=tu(e);n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},Ko(e)?Xo(t,n):null!==(n=Ll(e,t,n,r))&&(nu(n,e,r,eu()),Zo(n,t,r))}function Qo(e,t,n){var r=tu(e),a={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(Ko(e))Xo(t,a);else{var l=e.alternate;if(0===e.lanes&&(null===l||0===l.lanes)&&null!==(l=t.lastRenderedReducer))try{var o=t.lastRenderedState,i=l(o,n);if(a.hasEagerState=!0,a.eagerState=i,ir(i,o)){var s=t.interleaved;return null===s?(a.next=a,Pl(t)):(a.next=s.next,s.next=a),void(t.interleaved=a)}}catch(e){}null!==(n=Ll(e,t,a,r))&&(nu(n,e,r,a=eu()),Zo(n,t,r))}}function Ko(e){var t=e.alternate;return e===oo||null!==t&&t===oo}function Xo(e,t){co=uo=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Zo(e,t,n){if(4194240&n){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,vt(e,n)}}var qo={readContext:xl,useCallback:ho,useContext:ho,useEffect:ho,useImperativeHandle:ho,useInsertionEffect:ho,useLayoutEffect:ho,useMemo:ho,useReducer:ho,useRef:ho,useState:ho,useDebugValue:ho,useDeferredValue:ho,useTransition:ho,useMutableSource:ho,useSyncExternalStore:ho,useId:ho,unstable_isNewReconciler:!1},Jo={readContext:xl,useCallback:function(e,t){return vo().memoizedState=[e,void 0===t?null:t],e},useContext:xl,useEffect:Ro,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Lo(4194308,4,zo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Lo(4194308,4,e,t)},useInsertionEffect:function(e,t){return Lo(4,2,e,t)},useMemo:function(e,t){var n=vo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=vo();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=Yo.bind(null,oo,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},vo().memoizedState=e},useState:xo,useDebugValue:Fo,useDeferredValue:function(e){return vo().memoizedState=e},useTransition:function(){var e=xo(!1),t=e[0];return e=Wo.bind(null,e[1]),vo().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=oo,a=vo();if(al){if(void 0===n)throw Error(l(407));n=n()}else{if(n=t(),null===Bs)throw Error(l(349));30&lo||So(r,t,n)}a.memoizedState=n;var o={value:n,getSnapshot:t};return a.queue=o,Ro(Io.bind(null,r,o,e),[e]),r.flags|=2048,No(9,ko.bind(null,r,o,n,t),void 0,null),n},useId:function(){var e=vo(),t=Bs.identifierPrefix;if(al){var n=Za;t=":"+t+"R"+(n=(Xa&~(1<<32-ot(Xa)-1)).toString(32)+n),0<(n=fo++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=po++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ei={readContext:xl,useCallback:Go,useContext:xl,useEffect:Oo,useImperativeHandle:Uo,useInsertionEffect:Ho,useLayoutEffect:Do,useMemo:jo,useReducer:_o,useRef:Po,useState:function(){return _o(Ao)},useDebugValue:Fo,useDeferredValue:function(e){return Vo(bo(),io.memoizedState,e)},useTransition:function(){return[_o(Ao)[0],bo().memoizedState]},useMutableSource:wo,useSyncExternalStore:Co,useId:$o,unstable_isNewReconciler:!1},ti={readContext:xl,useCallback:Go,useContext:xl,useEffect:Oo,useImperativeHandle:Uo,useInsertionEffect:Ho,useLayoutEffect:Do,useMemo:jo,useReducer:Eo,useRef:Po,useState:function(){return Eo(Ao)},useDebugValue:Fo,useDeferredValue:function(e){var t=bo();return null===io?t.memoizedState=e:Vo(t,io.memoizedState,e)},useTransition:function(){return[Eo(Ao)[0],bo().memoizedState]},useMutableSource:wo,useSyncExternalStore:Co,useId:$o,unstable_isNewReconciler:!1};function ni(e,t){if(e&&e.defaultProps){for(var n in t=H({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}function ri(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:H({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ai={isMounted:function(e){return!!(e=e._reactInternals)&&Ge(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=eu(),a=tu(e),l=Dl(r,a);l.payload=t,null!=n&&(l.callback=n),null!==(t=zl(e,l,a))&&(nu(t,e,a,r),Ul(t,e,a))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=eu(),a=tu(e),l=Dl(r,a);l.tag=1,l.payload=t,null!=n&&(l.callback=n),null!==(t=zl(e,l,a))&&(nu(t,e,a,r),Ul(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=eu(),r=tu(e),a=Dl(n,r);a.tag=2,null!=t&&(a.callback=t),null!==(t=zl(e,a,r))&&(nu(t,e,r,n),Ul(t,e,r))}};function li(e,t,n,r,a,l,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,l,o):!(t.prototype&&t.prototype.isPureReactComponent&&sr(n,r)&&sr(a,l))}function oi(e,t,n){var r=!1,a=Ia,l=t.contextType;return"object"==typeof l&&null!==l?l=xl(l):(a=Pa(t)?xa:Ta.current,l=(r=null!=(r=t.contextTypes))?Na(e,a):Ia),t=new t(n,l),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ai,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=l),t}function ii(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ai.enqueueReplaceState(t,t.state,null)}function si(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs={},Ol(e);var l=t.contextType;"object"==typeof l&&null!==l?a.context=xl(l):(l=Pa(t)?xa:Ta.current,a.context=Na(e,l)),a.state=e.memoizedState,"function"==typeof(l=t.getDerivedStateFromProps)&&(ri(e,t,l,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&ai.enqueueReplaceState(a,a.state,null),Gl(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4194308)}function ui(e,t){try{var n="",r=t;do{n+=F(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a,digest:null}}function ci(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function fi(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var di="function"==typeof WeakMap?WeakMap:Map;function pi(e,t,n){(n=Dl(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Vs||(Vs=!0,Ws=r),fi(0,t)},n}function hi(e,t,n){(n=Dl(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return r(a)},n.callback=function(){fi(0,t)}}var l=e.stateNode;return null!==l&&"function"==typeof l.componentDidCatch&&(n.callback=function(){fi(0,t),"function"!=typeof r&&(null===$s?$s=new Set([this]):$s.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function mi(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new di;var a=new Set;r.set(t,a)}else void 0===(a=r.get(t))&&(a=new Set,r.set(t,a));a.has(n)||(a.add(n),e=Su.bind(null,e,t,n),t.then(e,e))}function gi(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function yi(e,t,n,r,a){return 1&e.mode?(e.flags|=65536,e.lanes=a,e):(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Dl(-1,1)).tag=2,zl(n,t,1))),n.lanes|=1),e)}var vi=A.ReactCurrentOwner,bi=!1;function Ai(e,t,n,r){t.child=null===e?_l(t,null,n,r):Al(t,e.child,n,r)}function _i(e,t,n,r,a){n=n.render;var l=t.ref;return Bl(t,a),r=go(e,t,n,r,l,a),n=yo(),null===e||bi?(al&&n&&el(t),t.flags|=1,Ai(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Vi(e,t,a))}function Ei(e,t,n,r,a){if(null===e){var l=n.type;return"function"!=typeof l||Pu(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Mu(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,wi(e,t,l,r,a))}if(l=e.child,!(e.lanes&a)){var o=l.memoizedProps;if((n=null!==(n=n.compare)?n:sr)(o,r)&&e.ref===t.ref)return Vi(e,t,a)}return t.flags|=1,(e=Lu(l,r)).ref=t.ref,e.return=t,t.child=e}function wi(e,t,n,r,a){if(null!==e){var l=e.memoizedProps;if(sr(l,r)&&e.ref===t.ref){if(bi=!1,t.pendingProps=r=l,!(e.lanes&a))return t.lanes=e.lanes,Vi(e,t,a);131072&e.flags&&(bi=!0)}}return ki(e,t,n,r,a)}function Ci(e,t,n){var r=t.pendingProps,a=r.children,l=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(1&t.mode){if(!(1073741824&n))return e=null!==l?l.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,ka(Ls,Ps),Ps|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==l?l.baseLanes:n,ka(Ls,Ps),Ps|=r}else t.memoizedState={baseLanes:0,cachePool:null,transitions:null},ka(Ls,Ps),Ps|=n;else null!==l?(r=l.baseLanes|n,t.memoizedState=null):r=n,ka(Ls,Ps),Ps|=r;return Ai(e,t,a,n),t.child}function Si(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function ki(e,t,n,r,a){var l=Pa(n)?xa:Ta.current;return l=Na(t,l),Bl(t,a),n=go(e,t,n,r,l,a),r=yo(),null===e||bi?(al&&r&&el(t),t.flags|=1,Ai(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Vi(e,t,a))}function Ii(e,t,n,r,a){if(Pa(n)){var l=!0;Oa(t)}else l=!1;if(Bl(t,a),null===t.stateNode)ji(e,t),oi(t,n,r),si(t,n,r,a),r=!0;else if(null===e){var o=t.stateNode,i=t.memoizedProps;o.props=i;var s=o.context,u=n.contextType;u="object"==typeof u&&null!==u?xl(u):Na(t,u=Pa(n)?xa:Ta.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof o.getSnapshotBeforeUpdate;f||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(i!==r||s!==u)&&ii(t,o,r,u),Rl=!1;var d=t.memoizedState;o.state=d,Gl(t,r,o,a),s=t.memoizedState,i!==r||d!==s||Ba.current||Rl?("function"==typeof c&&(ri(t,n,c,r),s=t.memoizedState),(i=Rl||li(t,n,i,r,d,s,u))?(f||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(t.flags|=4194308)):("function"==typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=s),o.props=r,o.state=s,o.context=u,r=i):("function"==typeof o.componentDidMount&&(t.flags|=4194308),r=!1)}else{o=t.stateNode,Hl(e,t),i=t.memoizedProps,u=t.type===t.elementType?i:ni(t.type,i),o.props=u,f=t.pendingProps,d=o.context,s="object"==typeof(s=n.contextType)&&null!==s?xl(s):Na(t,s=Pa(n)?xa:Ta.current);var p=n.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(i!==f||d!==s)&&ii(t,o,r,s),Rl=!1,d=t.memoizedState,o.state=d,Gl(t,r,o,a);var h=t.memoizedState;i!==f||d!==h||Ba.current||Rl?("function"==typeof p&&(ri(t,n,p,r),h=t.memoizedState),(u=Rl||li(t,n,u,r,d,h,s)||!1)?(c||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(r,h,s),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,h,s)),"function"==typeof o.componentDidUpdate&&(t.flags|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=h),o.props=r,o.state=h,o.context=s,r=u):("function"!=typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),r=!1)}return Ti(e,t,n,r,l,a)}function Ti(e,t,n,r,a,l){Si(e,t);var o=!!(128&t.flags);if(!r&&!o)return a&&Ha(t,n,!1),Vi(e,t,l);r=t.stateNode,vi.current=t;var i=o&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&o?(t.child=Al(t,e.child,null,l),t.child=Al(t,null,i,l)):Ai(e,t,i,l),t.memoizedState=r.state,a&&Ha(t,n,!0),t.child}function Bi(e){var t=e.stateNode;t.pendingContext?Ma(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ma(0,t.context,!1),Kl(e,t.containerInfo)}function xi(e,t,n,r,a){return pl(),hl(a),t.flags|=256,Ai(e,t,n,r),t.child}var Ni,Pi,Li,Mi,Ri={dehydrated:null,treeContext:null,retryLane:0};function Oi(e){return{baseLanes:e,cachePool:null,transitions:null}}function Hi(e,t,n){var r,a=t.pendingProps,o=Jl.current,i=!1,s=!!(128&t.flags);if((r=s)||(r=(null===e||null!==e.memoizedState)&&!!(2&o)),r?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),ka(Jl,1&o),null===e)return ul(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(1&t.mode?"$!"===e.data?t.lanes=8:t.lanes=1073741824:t.lanes=1,null):(s=a.children,e=a.fallback,i?(a=t.mode,i=t.child,s={mode:"hidden",children:s},1&a||null===i?i=Ou(s,a,0,null):(i.childLanes=0,i.pendingProps=s),e=Ru(e,a,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=Oi(n),t.memoizedState=Ri,e):Di(t,s));if(null!==(o=e.memoizedState)&&null!==(r=o.dehydrated))return function(e,t,n,r,a,o,i){if(n)return 256&t.flags?(t.flags&=-257,zi(e,t,i,r=ci(Error(l(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=r.fallback,a=t.mode,r=Ou({mode:"visible",children:r.children},a,0,null),(o=Ru(o,a,i,null)).flags|=2,r.return=t,o.return=t,r.sibling=o,t.child=r,1&t.mode&&Al(t,e.child,null,i),t.child.memoizedState=Oi(i),t.memoizedState=Ri,o);if(!(1&t.mode))return zi(e,t,i,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var s=r.dgst;return r=s,zi(e,t,i,r=ci(o=Error(l(419)),r,void 0))}if(s=!!(i&e.childLanes),bi||s){if(null!==(r=Bs)){switch(i&-i){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=a&(r.suspendedLanes|i)?0:a)&&a!==o.retryLane&&(o.retryLane=a,Ml(e,a),nu(r,e,a,-1))}return mu(),zi(e,t,i,r=ci(Error(l(421))))}return"$?"===a.data?(t.flags|=128,t.child=e.child,t=Iu.bind(null,e),a._reactRetry=t,null):(e=o.treeContext,rl=ua(a.nextSibling),nl=t,al=!0,ll=null,null!==e&&(Ya[Qa++]=Xa,Ya[Qa++]=Za,Ya[Qa++]=Ka,Xa=e.id,Za=e.overflow,Ka=t),(t=Di(t,r.children)).flags|=4096,t)}(e,t,s,a,r,o,n);if(i){i=a.fallback,s=t.mode,r=(o=e.child).sibling;var u={mode:"hidden",children:a.children};return 1&s||t.child===o?(a=Lu(o,u)).subtreeFlags=14680064&o.subtreeFlags:((a=t.child).childLanes=0,a.pendingProps=u,t.deletions=null),null!==r?i=Lu(r,i):(i=Ru(i,s,n,null)).flags|=2,i.return=t,a.return=t,a.sibling=i,t.child=a,a=i,i=t.child,s=null===(s=e.child.memoizedState)?Oi(n):{baseLanes:s.baseLanes|n,cachePool:null,transitions:s.transitions},i.memoizedState=s,i.childLanes=e.childLanes&~n,t.memoizedState=Ri,a}return e=(i=e.child).sibling,a=Lu(i,{mode:"visible",children:a.children}),!(1&t.mode)&&(a.lanes=n),a.return=t,a.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=a,t.memoizedState=null,a}function Di(e,t){return(t=Ou({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function zi(e,t,n,r){return null!==r&&hl(r),Al(t,e.child,null,n),(e=Di(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Ui(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),Tl(e.return,t,n)}function Fi(e,t,n,r,a){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailMode=a)}function Gi(e,t,n){var r=t.pendingProps,a=r.revealOrder,l=r.tail;if(Ai(e,t,r.children,n),2&(r=Jl.current))r=1&r|2,t.flags|=128;else{if(null!==e&&128&e.flags)e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ui(e,n,t);else if(19===e.tag)Ui(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ka(Jl,r),1&t.mode)switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===eo(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Fi(t,!1,a,n,l);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===eo(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Fi(t,!0,n,null,l);break;case"together":Fi(t,!1,null,null,void 0);break;default:t.memoizedState=null}else t.memoizedState=null;return t.child}function ji(e,t){!(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Vi(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Os|=t.lanes,!(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Lu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Lu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Wi(e,t){if(!al)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function $i(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Yi(e,t,n){var r=t.pendingProps;switch(tl(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return $i(t),null;case 1:case 17:return Pa(t.type)&&La(),$i(t),null;case 3:return r=t.stateNode,Xl(),Sa(Ba),Sa(Ta),no(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(fl(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&!(256&t.flags)||(t.flags|=1024,null!==ll&&(ou(ll),ll=null))),Pi(e,t),$i(t),null;case 5:ql(t);var a=Ql(Yl.current);if(n=t.type,null!==e&&null!=t.stateNode)Li(e,t,n,r,a),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(l(166));return $i(t),null}if(e=Ql(Wl.current),fl(t)){r=t.stateNode,n=t.type;var o=t.memoizedProps;switch(r[da]=t,r[pa]=o,e=!!(1&t.mode),n){case"dialog":zr("cancel",r),zr("close",r);break;case"iframe":case"object":case"embed":zr("load",r);break;case"video":case"audio":for(a=0;a<Rr.length;a++)zr(Rr[a],r);break;case"source":zr("error",r);break;case"img":case"image":case"link":zr("error",r),zr("load",r);break;case"details":zr("toggle",r);break;case"input":X(r,o),zr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},zr("invalid",r);break;case"textarea":ae(r,o),zr("invalid",r)}for(var s in ve(n,o),a=null,o)if(o.hasOwnProperty(s)){var u=o[s];"children"===s?"string"==typeof u?r.textContent!==u&&(!0!==o.suppressHydrationWarning&&qr(r.textContent,u,e),a=["children",u]):"number"==typeof u&&r.textContent!==""+u&&(!0!==o.suppressHydrationWarning&&qr(r.textContent,u,e),a=["children",""+u]):i.hasOwnProperty(s)&&null!=u&&"onScroll"===s&&zr("scroll",r)}switch(n){case"input":$(r),J(r,o,!0);break;case"textarea":$(r),oe(r);break;case"select":case"option":break;default:"function"==typeof o.onClick&&(r.onclick=Jr)}r=a,t.updateQueue=r,null!==r&&(t.flags|=4)}else{s=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(n,{is:r.is}):(e=s.createElement(n),"select"===n&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,n),e[da]=t,e[pa]=r,Ni(e,t,!1,!1),t.stateNode=e;e:{switch(s=be(n,r),n){case"dialog":zr("cancel",e),zr("close",e),a=r;break;case"iframe":case"object":case"embed":zr("load",e),a=r;break;case"video":case"audio":for(a=0;a<Rr.length;a++)zr(Rr[a],e);a=r;break;case"source":zr("error",e),a=r;break;case"img":case"image":case"link":zr("error",e),zr("load",e),a=r;break;case"details":zr("toggle",e),a=r;break;case"input":X(e,r),a=K(e,r),zr("invalid",e);break;case"option":default:a=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=H({},r,{value:void 0}),zr("invalid",e);break;case"textarea":ae(e,r),a=re(e,r),zr("invalid",e)}for(o in ve(n,a),u=a)if(u.hasOwnProperty(o)){var c=u[o];"style"===o?ge(e,c):"dangerouslySetInnerHTML"===o?null!=(c=c?c.__html:void 0)&&fe(e,c):"children"===o?"string"==typeof c?("textarea"!==n||""!==c)&&de(e,c):"number"==typeof c&&de(e,""+c):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(i.hasOwnProperty(o)?null!=c&&"onScroll"===o&&zr("scroll",e):null!=c&&b(e,o,c,s))}switch(n){case"input":$(e),J(e,r,!1);break;case"textarea":$(e),oe(e);break;case"option":null!=r.value&&e.setAttribute("value",""+V(r.value));break;case"select":e.multiple=!!r.multiple,null!=(o=r.value)?ne(e,!!r.multiple,o,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Jr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return $i(t),null;case 6:if(e&&null!=t.stateNode)Mi(e,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));if(n=Ql(Yl.current),Ql(Wl.current),fl(t)){if(r=t.stateNode,n=t.memoizedProps,r[da]=t,(o=r.nodeValue!==n)&&null!==(e=nl))switch(e.tag){case 3:qr(r.nodeValue,n,!!(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&qr(r.nodeValue,n,!!(1&e.mode))}o&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[da]=t,t.stateNode=r}return $i(t),null;case 13:if(Sa(Jl),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(al&&null!==rl&&1&t.mode&&!(128&t.flags))dl(),pl(),t.flags|=98560,o=!1;else if(o=fl(t),null!==r&&null!==r.dehydrated){if(null===e){if(!o)throw Error(l(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(l(317));o[da]=t}else pl(),!(128&t.flags)&&(t.memoizedState=null),t.flags|=4;$i(t),o=!1}else null!==ll&&(ou(ll),ll=null),o=!0;if(!o)return 65536&t.flags?t:null}return 128&t.flags?(t.lanes=n,t):((r=null!==r)!=(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,1&t.mode&&(null===e||1&Jl.current?0===Ms&&(Ms=3):mu())),null!==t.updateQueue&&(t.flags|=4),$i(t),null);case 4:return Xl(),Pi(e,t),null===e&&Gr(t.stateNode.containerInfo),$i(t),null;case 10:return Il(t.type._context),$i(t),null;case 19:if(Sa(Jl),null===(o=t.memoizedState))return $i(t),null;if(r=!!(128&t.flags),null===(s=o.rendering))if(r)Wi(o,!1);else{if(0!==Ms||null!==e&&128&e.flags)for(e=t.child;null!==e;){if(null!==(s=eo(e))){for(t.flags|=128,Wi(o,!1),null!==(r=s.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(o=n).flags&=14680066,null===(s=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=s.childLanes,o.lanes=s.lanes,o.child=s.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=s.memoizedProps,o.memoizedState=s.memoizedState,o.updateQueue=s.updateQueue,o.type=s.type,e=s.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return ka(Jl,1&Jl.current|2),t.child}e=e.sibling}null!==o.tail&&Ze()>Gs&&(t.flags|=128,r=!0,Wi(o,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=eo(s))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Wi(o,!0),null===o.tail&&"hidden"===o.tailMode&&!s.alternate&&!al)return $i(t),null}else 2*Ze()-o.renderingStartTime>Gs&&1073741824!==n&&(t.flags|=128,r=!0,Wi(o,!1),t.lanes=4194304);o.isBackwards?(s.sibling=t.child,t.child=s):(null!==(n=o.last)?n.sibling=s:t.child=s,o.last=s)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Ze(),t.sibling=null,n=Jl.current,ka(Jl,r?1&n|2:1&n),t):($i(t),null);case 22:case 23:return fu(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&1&t.mode?!!(1073741824&Ps)&&($i(t),6&t.subtreeFlags&&(t.flags|=8192)):$i(t),null;case 24:case 25:return null}throw Error(l(156,t.tag))}function Qi(e,t){switch(tl(t),t.tag){case 1:return Pa(t.type)&&La(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return Xl(),Sa(Ba),Sa(Ta),no(),65536&(e=t.flags)&&!(128&e)?(t.flags=-65537&e|128,t):null;case 5:return ql(t),null;case 13:if(Sa(Jl),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(l(340));pl()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Sa(Jl),null;case 4:return Xl(),null;case 10:return Il(t.type._context),null;case 22:case 23:return fu(),null;default:return null}}Ni=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Pi=function(){},Li=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,Ql(Wl.current);var l,o=null;switch(n){case"input":a=K(e,a),r=K(e,r),o=[];break;case"select":a=H({},a,{value:void 0}),r=H({},r,{value:void 0}),o=[];break;case"textarea":a=re(e,a),r=re(e,r),o=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Jr)}for(c in ve(n,r),n=null,a)if(!r.hasOwnProperty(c)&&a.hasOwnProperty(c)&&null!=a[c])if("style"===c){var s=a[c];for(l in s)s.hasOwnProperty(l)&&(n||(n={}),n[l]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(i.hasOwnProperty(c)?o||(o=[]):(o=o||[]).push(c,null));for(c in r){var u=r[c];if(s=null!=a?a[c]:void 0,r.hasOwnProperty(c)&&u!==s&&(null!=u||null!=s))if("style"===c)if(s){for(l in s)!s.hasOwnProperty(l)||u&&u.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in u)u.hasOwnProperty(l)&&s[l]!==u[l]&&(n||(n={}),n[l]=u[l])}else n||(o||(o=[]),o.push(c,n)),n=u;else"dangerouslySetInnerHTML"===c?(u=u?u.__html:void 0,s=s?s.__html:void 0,null!=u&&s!==u&&(o=o||[]).push(c,u)):"children"===c?"string"!=typeof u&&"number"!=typeof u||(o=o||[]).push(c,""+u):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(i.hasOwnProperty(c)?(null!=u&&"onScroll"===c&&zr("scroll",e),o||s===u||(o=[])):(o=o||[]).push(c,u))}n&&(o=o||[]).push("style",n);var c=o;(t.updateQueue=c)&&(t.flags|=4)}},Mi=function(e,t,n,r){n!==r&&(t.flags|=4)};var Ki=!1,Xi=!1,Zi="function"==typeof WeakSet?WeakSet:Set,qi=null;function Ji(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){Cu(e,t,n)}else n.current=null}function es(e,t,n){try{n()}catch(n){Cu(e,t,n)}}var ts=!1;function ns(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var l=a.destroy;a.destroy=void 0,void 0!==l&&es(t,n,l)}a=a.next}while(a!==r)}}function rs(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function as(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function ls(e){var t=e.alternate;null!==t&&(e.alternate=null,ls(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[da],delete t[pa],delete t[ma],delete t[ga],delete t[ya]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function os(e){return 5===e.tag||3===e.tag||4===e.tag}function is(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||os(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ss(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Jr));else if(4!==r&&null!==(e=e.child))for(ss(e,t,n),e=e.sibling;null!==e;)ss(e,t,n),e=e.sibling}function us(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(us(e,t,n),e=e.sibling;null!==e;)us(e,t,n),e=e.sibling}var cs=null,fs=!1;function ds(e,t,n){for(n=n.child;null!==n;)ps(e,t,n),n=n.sibling}function ps(e,t,n){if(lt&&"function"==typeof lt.onCommitFiberUnmount)try{lt.onCommitFiberUnmount(at,n)}catch(e){}switch(n.tag){case 5:Xi||Ji(n,t);case 6:var r=cs,a=fs;cs=null,ds(e,t,n),fs=a,null!==(cs=r)&&(fs?(e=cs,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):cs.removeChild(n.stateNode));break;case 18:null!==cs&&(fs?(e=cs,n=n.stateNode,8===e.nodeType?sa(e.parentNode,n):1===e.nodeType&&sa(e,n),Gt(e)):sa(cs,n.stateNode));break;case 4:r=cs,a=fs,cs=n.stateNode.containerInfo,fs=!0,ds(e,t,n),cs=r,fs=a;break;case 0:case 11:case 14:case 15:if(!Xi&&null!==(r=n.updateQueue)&&null!==(r=r.lastEffect)){a=r=r.next;do{var l=a,o=l.destroy;l=l.tag,void 0!==o&&(2&l||4&l)&&es(n,t,o),a=a.next}while(a!==r)}ds(e,t,n);break;case 1:if(!Xi&&(Ji(n,t),"function"==typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(e){Cu(n,t,e)}ds(e,t,n);break;case 21:ds(e,t,n);break;case 22:1&n.mode?(Xi=(r=Xi)||null!==n.memoizedState,ds(e,t,n),Xi=r):ds(e,t,n);break;default:ds(e,t,n)}}function hs(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Zi),t.forEach((function(t){var r=Tu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function ms(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var a=n[r];try{var o=e,i=t,s=i;e:for(;null!==s;){switch(s.tag){case 5:cs=s.stateNode,fs=!1;break e;case 3:case 4:cs=s.stateNode.containerInfo,fs=!0;break e}s=s.return}if(null===cs)throw Error(l(160));ps(o,i,a),cs=null,fs=!1;var u=a.alternate;null!==u&&(u.return=null),a.return=null}catch(e){Cu(a,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gs(t,e),t=t.sibling}function gs(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(ms(t,e),ys(e),4&r){try{ns(3,e,e.return),rs(3,e)}catch(t){Cu(e,e.return,t)}try{ns(5,e,e.return)}catch(t){Cu(e,e.return,t)}}break;case 1:ms(t,e),ys(e),512&r&&null!==n&&Ji(n,n.return);break;case 5:if(ms(t,e),ys(e),512&r&&null!==n&&Ji(n,n.return),32&e.flags){var a=e.stateNode;try{de(a,"")}catch(t){Cu(e,e.return,t)}}if(4&r&&null!=(a=e.stateNode)){var o=e.memoizedProps,i=null!==n?n.memoizedProps:o,s=e.type,u=e.updateQueue;if(e.updateQueue=null,null!==u)try{"input"===s&&"radio"===o.type&&null!=o.name&&Z(a,o),be(s,i);var c=be(s,o);for(i=0;i<u.length;i+=2){var f=u[i],d=u[i+1];"style"===f?ge(a,d):"dangerouslySetInnerHTML"===f?fe(a,d):"children"===f?de(a,d):b(a,f,d,c)}switch(s){case"input":q(a,o);break;case"textarea":le(a,o);break;case"select":var p=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!o.multiple;var h=o.value;null!=h?ne(a,!!o.multiple,h,!1):p!==!!o.multiple&&(null!=o.defaultValue?ne(a,!!o.multiple,o.defaultValue,!0):ne(a,!!o.multiple,o.multiple?[]:"",!1))}a[pa]=o}catch(t){Cu(e,e.return,t)}}break;case 6:if(ms(t,e),ys(e),4&r){if(null===e.stateNode)throw Error(l(162));a=e.stateNode,o=e.memoizedProps;try{a.nodeValue=o}catch(t){Cu(e,e.return,t)}}break;case 3:if(ms(t,e),ys(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{Gt(t.containerInfo)}catch(t){Cu(e,e.return,t)}break;case 4:default:ms(t,e),ys(e);break;case 13:ms(t,e),ys(e),8192&(a=e.child).flags&&(o=null!==a.memoizedState,a.stateNode.isHidden=o,!o||null!==a.alternate&&null!==a.alternate.memoizedState||(Fs=Ze())),4&r&&hs(e);break;case 22:if(f=null!==n&&null!==n.memoizedState,1&e.mode?(Xi=(c=Xi)||f,ms(t,e),Xi=c):ms(t,e),ys(e),8192&r){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!f&&1&e.mode)for(qi=e,f=e.child;null!==f;){for(d=qi=f;null!==qi;){switch(h=(p=qi).child,p.tag){case 0:case 11:case 14:case 15:ns(4,p,p.return);break;case 1:Ji(p,p.return);var m=p.stateNode;if("function"==typeof m.componentWillUnmount){r=p,n=p.return;try{t=r,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(e){Cu(r,n,e)}}break;case 5:Ji(p,p.return);break;case 22:if(null!==p.memoizedState){_s(d);continue}}null!==h?(h.return=p,qi=h):_s(d)}f=f.sibling}e:for(f=null,d=e;;){if(5===d.tag){if(null===f){f=d;try{a=d.stateNode,c?"function"==typeof(o=a.style).setProperty?o.setProperty("display","none","important"):o.display="none":(s=d.stateNode,i=null!=(u=d.memoizedProps.style)&&u.hasOwnProperty("display")?u.display:null,s.style.display=me("display",i))}catch(t){Cu(e,e.return,t)}}}else if(6===d.tag){if(null===f)try{d.stateNode.nodeValue=c?"":d.memoizedProps}catch(t){Cu(e,e.return,t)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;f===d&&(f=null),d=d.return}f===d&&(f=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:ms(t,e),ys(e),4&r&&hs(e);case 21:}}function ys(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(os(n)){var r=n;break e}n=n.return}throw Error(l(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(de(a,""),r.flags&=-33),us(e,is(e),a);break;case 3:case 4:var o=r.stateNode.containerInfo;ss(e,is(e),o);break;default:throw Error(l(161))}}catch(t){Cu(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function vs(e,t,n){qi=e,bs(e,t,n)}function bs(e,t,n){for(var r=!!(1&e.mode);null!==qi;){var a=qi,l=a.child;if(22===a.tag&&r){var o=null!==a.memoizedState||Ki;if(!o){var i=a.alternate,s=null!==i&&null!==i.memoizedState||Xi;i=Ki;var u=Xi;if(Ki=o,(Xi=s)&&!u)for(qi=a;null!==qi;)s=(o=qi).child,22===o.tag&&null!==o.memoizedState?Es(a):null!==s?(s.return=o,qi=s):Es(a);for(;null!==l;)qi=l,bs(l,t,n),l=l.sibling;qi=a,Ki=i,Xi=u}As(e)}else 8772&a.subtreeFlags&&null!==l?(l.return=a,qi=l):As(e)}}function As(e){for(;null!==qi;){var t=qi;if(8772&t.flags){var n=t.alternate;try{if(8772&t.flags)switch(t.tag){case 0:case 11:case 15:Xi||rs(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Xi)if(null===n)r.componentDidMount();else{var a=t.elementType===t.type?n.memoizedProps:ni(t.type,n.memoizedProps);r.componentDidUpdate(a,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&jl(t,o,r);break;case 3:var i=t.updateQueue;if(null!==i){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}jl(t,i,n)}break;case 5:var s=t.stateNode;if(null===n&&4&t.flags){n=s;var u=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&n.focus();break;case"img":u.src&&(n.src=u.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var f=c.memoizedState;if(null!==f){var d=f.dehydrated;null!==d&&Gt(d)}}}break;default:throw Error(l(163))}Xi||512&t.flags&&as(t)}catch(e){Cu(t,t.return,e)}}if(t===e){qi=null;break}if(null!==(n=t.sibling)){n.return=t.return,qi=n;break}qi=t.return}}function _s(e){for(;null!==qi;){var t=qi;if(t===e){qi=null;break}var n=t.sibling;if(null!==n){n.return=t.return,qi=n;break}qi=t.return}}function Es(e){for(;null!==qi;){var t=qi;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{rs(4,t)}catch(e){Cu(t,n,e)}break;case 1:var r=t.stateNode;if("function"==typeof r.componentDidMount){var a=t.return;try{r.componentDidMount()}catch(e){Cu(t,a,e)}}var l=t.return;try{as(t)}catch(e){Cu(t,l,e)}break;case 5:var o=t.return;try{as(t)}catch(e){Cu(t,o,e)}}}catch(e){Cu(t,t.return,e)}if(t===e){qi=null;break}var i=t.sibling;if(null!==i){i.return=t.return,qi=i;break}qi=t.return}}var ws,Cs=Math.ceil,Ss=A.ReactCurrentDispatcher,ks=A.ReactCurrentOwner,Is=A.ReactCurrentBatchConfig,Ts=0,Bs=null,xs=null,Ns=0,Ps=0,Ls=Ca(0),Ms=0,Rs=null,Os=0,Hs=0,Ds=0,zs=null,Us=null,Fs=0,Gs=1/0,js=null,Vs=!1,Ws=null,$s=null,Ys=!1,Qs=null,Ks=0,Xs=0,Zs=null,qs=-1,Js=0;function eu(){return 6&Ts?Ze():-1!==qs?qs:qs=Ze()}function tu(e){return 1&e.mode?2&Ts&&0!==Ns?Ns&-Ns:null!==ml.transition?(0===Js&&(Js=mt()),Js):0!==(e=bt)?e:e=void 0===(e=window.event)?16:Xt(e.type):1}function nu(e,t,n,r){if(50<Xs)throw Xs=0,Zs=null,Error(l(185));yt(e,n,r),2&Ts&&e===Bs||(e===Bs&&(!(2&Ts)&&(Hs|=n),4===Ms&&iu(e,Ns)),ru(e,r),1===n&&0===Ts&&!(1&t.mode)&&(Gs=Ze()+500,za&&Ga()))}function ru(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,l=e.pendingLanes;0<l;){var o=31-ot(l),i=1<<o,s=a[o];-1===s?i&n&&!(i&r)||(a[o]=pt(i,t)):s<=t&&(e.expiredLanes|=i),l&=~i}}(e,t);var r=dt(e,e===Bs?Ns:0);if(0===r)null!==n&&Qe(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Qe(n),1===t)0===e.tag?function(e){za=!0,Fa(e)}(su.bind(null,e)):Fa(su.bind(null,e)),oa((function(){!(6&Ts)&&Ga()})),n=null;else{switch(At(r)){case 1:n=Je;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Bu(n,au.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function au(e,t){if(qs=-1,Js=0,6&Ts)throw Error(l(327));var n=e.callbackNode;if(Eu()&&e.callbackNode!==n)return null;var r=dt(e,e===Bs?Ns:0);if(0===r)return null;if(30&r||r&e.expiredLanes||t)t=gu(e,r);else{t=r;var a=Ts;Ts|=2;var o=hu();for(Bs===e&&Ns===t||(js=null,Gs=Ze()+500,du(e,t));;)try{vu();break}catch(t){pu(e,t)}kl(),Ss.current=o,Ts=a,null!==xs?t=0:(Bs=null,Ns=0,t=Ms)}if(0!==t){if(2===t&&0!==(a=ht(e))&&(r=a,t=lu(e,a)),1===t)throw n=Rs,du(e,0),iu(e,r),ru(e,Ze()),n;if(6===t)iu(e,r);else{if(a=e.current.alternate,!(30&r||function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var a=n[r],l=a.getSnapshot;a=a.value;try{if(!ir(l(),a))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)||(t=gu(e,r),2===t&&(o=ht(e),0!==o&&(r=o,t=lu(e,o))),1!==t)))throw n=Rs,du(e,0),iu(e,r),ru(e,Ze()),n;switch(e.finishedWork=a,e.finishedLanes=r,t){case 0:case 1:throw Error(l(345));case 2:case 5:_u(e,Us,js);break;case 3:if(iu(e,r),(130023424&r)===r&&10<(t=Fs+500-Ze())){if(0!==dt(e,0))break;if(((a=e.suspendedLanes)&r)!==r){eu(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=ra(_u.bind(null,e,Us,js),t);break}_u(e,Us,js);break;case 4:if(iu(e,r),(4194240&r)===r)break;for(t=e.eventTimes,a=-1;0<r;){var i=31-ot(r);o=1<<i,(i=t[i])>a&&(a=i),r&=~o}if(r=a,10<(r=(120>(r=Ze()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Cs(r/1960))-r)){e.timeoutHandle=ra(_u.bind(null,e,Us,js),r);break}_u(e,Us,js);break;default:throw Error(l(329))}}}return ru(e,Ze()),e.callbackNode===n?au.bind(null,e):null}function lu(e,t){var n=zs;return e.current.memoizedState.isDehydrated&&(du(e,t).flags|=256),2!==(e=gu(e,t))&&(t=Us,Us=n,null!==t&&ou(t)),e}function ou(e){null===Us?Us=e:Us.push.apply(Us,e)}function iu(e,t){for(t&=~Ds,t&=~Hs,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-ot(t),r=1<<n;e[n]=-1,t&=~r}}function su(e){if(6&Ts)throw Error(l(327));Eu();var t=dt(e,0);if(!(1&t))return ru(e,Ze()),null;var n=gu(e,t);if(0!==e.tag&&2===n){var r=ht(e);0!==r&&(t=r,n=lu(e,r))}if(1===n)throw n=Rs,du(e,0),iu(e,t),ru(e,Ze()),n;if(6===n)throw Error(l(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,_u(e,Us,js),ru(e,Ze()),null}function uu(e,t){var n=Ts;Ts|=1;try{return e(t)}finally{0===(Ts=n)&&(Gs=Ze()+500,za&&Ga())}}function cu(e){null!==Qs&&0===Qs.tag&&!(6&Ts)&&Eu();var t=Ts;Ts|=1;var n=Is.transition,r=bt;try{if(Is.transition=null,bt=1,e)return e()}finally{bt=r,Is.transition=n,!(6&(Ts=t))&&Ga()}}function fu(){Ps=Ls.current,Sa(Ls)}function du(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,aa(n)),null!==xs)for(n=xs.return;null!==n;){var r=n;switch(tl(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&La();break;case 3:Xl(),Sa(Ba),Sa(Ta),no();break;case 5:ql(r);break;case 4:Xl();break;case 13:case 19:Sa(Jl);break;case 10:Il(r.type._context);break;case 22:case 23:fu()}n=n.return}if(Bs=e,xs=e=Lu(e.current,null),Ns=Ps=t,Ms=0,Rs=null,Ds=Hs=Os=0,Us=zs=null,null!==Nl){for(t=0;t<Nl.length;t++)if(null!==(r=(n=Nl[t]).interleaved)){n.interleaved=null;var a=r.next,l=n.pending;if(null!==l){var o=l.next;l.next=a,r.next=o}n.pending=r}Nl=null}return e}function pu(e,t){for(;;){var n=xs;try{if(kl(),ro.current=qo,uo){for(var r=oo.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}uo=!1}if(lo=0,so=io=oo=null,co=!1,fo=0,ks.current=null,null===n||null===n.return){Ms=1,Rs=t,xs=null;break}e:{var o=e,i=n.return,s=n,u=t;if(t=Ns,s.flags|=32768,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u,f=s,d=f.tag;if(!(1&f.mode||0!==d&&11!==d&&15!==d)){var p=f.alternate;p?(f.updateQueue=p.updateQueue,f.memoizedState=p.memoizedState,f.lanes=p.lanes):(f.updateQueue=null,f.memoizedState=null)}var h=gi(i);if(null!==h){h.flags&=-257,yi(h,i,s,0,t),1&h.mode&&mi(o,c,t),u=c;var m=(t=h).updateQueue;if(null===m){var g=new Set;g.add(u),t.updateQueue=g}else m.add(u);break e}if(!(1&t)){mi(o,c,t),mu();break e}u=Error(l(426))}else if(al&&1&s.mode){var y=gi(i);if(null!==y){!(65536&y.flags)&&(y.flags|=256),yi(y,i,s,0,t),hl(ui(u,s));break e}}o=u=ui(u,s),4!==Ms&&(Ms=2),null===zs?zs=[o]:zs.push(o),o=i;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,Fl(o,pi(0,u,t));break e;case 1:s=u;var v=o.type,b=o.stateNode;if(!(128&o.flags||"function"!=typeof v.getDerivedStateFromError&&(null===b||"function"!=typeof b.componentDidCatch||null!==$s&&$s.has(b)))){o.flags|=65536,t&=-t,o.lanes|=t,Fl(o,hi(o,s,t));break e}}o=o.return}while(null!==o)}Au(n)}catch(e){t=e,xs===n&&null!==n&&(xs=n=n.return);continue}break}}function hu(){var e=Ss.current;return Ss.current=qo,null===e?qo:e}function mu(){0!==Ms&&3!==Ms&&2!==Ms||(Ms=4),null===Bs||!(268435455&Os)&&!(268435455&Hs)||iu(Bs,Ns)}function gu(e,t){var n=Ts;Ts|=2;var r=hu();for(Bs===e&&Ns===t||(js=null,du(e,t));;)try{yu();break}catch(t){pu(e,t)}if(kl(),Ts=n,Ss.current=r,null!==xs)throw Error(l(261));return Bs=null,Ns=0,Ms}function yu(){for(;null!==xs;)bu(xs)}function vu(){for(;null!==xs&&!Ke();)bu(xs)}function bu(e){var t=ws(e.alternate,e,Ps);e.memoizedProps=e.pendingProps,null===t?Au(e):xs=t,ks.current=null}function Au(e){var t=e;do{var n=t.alternate;if(e=t.return,32768&t.flags){if(null!==(n=Qi(n,t)))return n.flags&=32767,void(xs=n);if(null===e)return Ms=6,void(xs=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}else if(null!==(n=Yi(n,t,Ps)))return void(xs=n);if(null!==(t=t.sibling))return void(xs=t);xs=t=e}while(null!==t);0===Ms&&(Ms=5)}function _u(e,t,n){var r=bt,a=Is.transition;try{Is.transition=null,bt=1,function(e,t,n,r){do{Eu()}while(null!==Qs);if(6&Ts)throw Error(l(327));n=e.finishedWork;var a=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(l(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var a=31-ot(n),l=1<<a;t[a]=0,r[a]=-1,e[a]=-1,n&=~l}}(e,o),e===Bs&&(xs=Bs=null,Ns=0),!(2064&n.subtreeFlags)&&!(2064&n.flags)||Ys||(Ys=!0,Bu(tt,(function(){return Eu(),null}))),o=!!(15990&n.flags),15990&n.subtreeFlags||o){o=Is.transition,Is.transition=null;var i=bt;bt=1;var s=Ts;Ts|=4,ks.current=null,function(e,t){if(ea=Vt,pr(e=dr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var a=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{n.nodeType,o.nodeType}catch(e){n=null;break e}var i=0,s=-1,u=-1,c=0,f=0,d=e,p=null;t:for(;;){for(var h;d!==n||0!==a&&3!==d.nodeType||(s=i+a),d!==o||0!==r&&3!==d.nodeType||(u=i+r),3===d.nodeType&&(i+=d.nodeValue.length),null!==(h=d.firstChild);)p=d,d=h;for(;;){if(d===e)break t;if(p===n&&++c===a&&(s=i),p===o&&++f===r&&(u=i),null!==(h=d.nextSibling))break;p=(d=p).parentNode}d=h}n=-1===s||-1===u?null:{start:s,end:u}}else n=null}n=n||{start:0,end:0}}else n=null;for(ta={focusedElem:e,selectionRange:n},Vt=!1,qi=t;null!==qi;)if(e=(t=qi).child,1028&t.subtreeFlags&&null!==e)e.return=t,qi=e;else for(;null!==qi;){t=qi;try{var m=t.alternate;if(1024&t.flags)switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,v=t.stateNode,b=v.getSnapshotBeforeUpdate(t.elementType===t.type?g:ni(t.type,g),y);v.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var A=t.stateNode.containerInfo;1===A.nodeType?A.textContent="":9===A.nodeType&&A.documentElement&&A.removeChild(A.documentElement);break;default:throw Error(l(163))}}catch(e){Cu(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,qi=e;break}qi=t.return}m=ts,ts=!1}(e,n),gs(n,e),hr(ta),Vt=!!ea,ta=ea=null,e.current=n,vs(n,e,a),Xe(),Ts=s,bt=i,Is.transition=o}else e.current=n;if(Ys&&(Ys=!1,Qs=e,Ks=a),0===(o=e.pendingLanes)&&($s=null),function(e){if(lt&&"function"==typeof lt.onCommitFiberRoot)try{lt.onCommitFiberRoot(at,e,void 0,!(128&~e.current.flags))}catch(e){}}(n.stateNode),ru(e,Ze()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)r((a=t[n]).value,{componentStack:a.stack,digest:a.digest});if(Vs)throw Vs=!1,e=Ws,Ws=null,e;!!(1&Ks)&&0!==e.tag&&Eu(),1&(o=e.pendingLanes)?e===Zs?Xs++:(Xs=0,Zs=e):Xs=0,Ga()}(e,t,n,r)}finally{Is.transition=a,bt=r}return null}function Eu(){if(null!==Qs){var e=At(Ks),t=Is.transition,n=bt;try{if(Is.transition=null,bt=16>e?16:e,null===Qs)var r=!1;else{if(e=Qs,Qs=null,Ks=0,6&Ts)throw Error(l(331));var a=Ts;for(Ts|=4,qi=e.current;null!==qi;){var o=qi,i=o.child;if(16&qi.flags){var s=o.deletions;if(null!==s){for(var u=0;u<s.length;u++){var c=s[u];for(qi=c;null!==qi;){var f=qi;switch(f.tag){case 0:case 11:case 15:ns(8,f,o)}var d=f.child;if(null!==d)d.return=f,qi=d;else for(;null!==qi;){var p=(f=qi).sibling,h=f.return;if(ls(f),f===c){qi=null;break}if(null!==p){p.return=h,qi=p;break}qi=h}}}var m=o.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}qi=o}}if(2064&o.subtreeFlags&&null!==i)i.return=o,qi=i;else e:for(;null!==qi;){if(2048&(o=qi).flags)switch(o.tag){case 0:case 11:case 15:ns(9,o,o.return)}var v=o.sibling;if(null!==v){v.return=o.return,qi=v;break e}qi=o.return}}var b=e.current;for(qi=b;null!==qi;){var A=(i=qi).child;if(2064&i.subtreeFlags&&null!==A)A.return=i,qi=A;else e:for(i=b;null!==qi;){if(2048&(s=qi).flags)try{switch(s.tag){case 0:case 11:case 15:rs(9,s)}}catch(e){Cu(s,s.return,e)}if(s===i){qi=null;break e}var _=s.sibling;if(null!==_){_.return=s.return,qi=_;break e}qi=s.return}}if(Ts=a,Ga(),lt&&"function"==typeof lt.onPostCommitFiberRoot)try{lt.onPostCommitFiberRoot(at,e)}catch(e){}r=!0}return r}finally{bt=n,Is.transition=t}}return!1}function wu(e,t,n){e=zl(e,t=pi(0,t=ui(n,t),1),1),t=eu(),null!==e&&(yt(e,1,t),ru(e,t))}function Cu(e,t,n){if(3===e.tag)wu(e,e,n);else for(;null!==t;){if(3===t.tag){wu(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===$s||!$s.has(r))){t=zl(t,e=hi(t,e=ui(n,e),1),1),e=eu(),null!==t&&(yt(t,1,e),ru(t,e));break}}t=t.return}}function Su(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=eu(),e.pingedLanes|=e.suspendedLanes&n,Bs===e&&(Ns&n)===n&&(4===Ms||3===Ms&&(130023424&Ns)===Ns&&500>Ze()-Fs?du(e,0):Ds|=n),ru(e,t)}function ku(e,t){0===t&&(1&e.mode?(t=ct,!(130023424&(ct<<=1))&&(ct=4194304)):t=1);var n=eu();null!==(e=Ml(e,t))&&(yt(e,t,n),ru(e,n))}function Iu(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),ku(e,n)}function Tu(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(n=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(l(314))}null!==r&&r.delete(t),ku(e,n)}function Bu(e,t){return Ye(e,t)}function xu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Nu(e,t,n,r){return new xu(e,t,n,r)}function Pu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Lu(e,t){var n=e.alternate;return null===n?((n=Nu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Mu(e,t,n,r,a,o){var i=2;if(r=e,"function"==typeof e)Pu(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case w:return Ru(n.children,a,o,t);case C:i=8,a|=8;break;case S:return(e=Nu(12,n,t,2|a)).elementType=S,e.lanes=o,e;case B:return(e=Nu(13,n,t,a)).elementType=B,e.lanes=o,e;case x:return(e=Nu(19,n,t,a)).elementType=x,e.lanes=o,e;case L:return Ou(n,a,o,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case k:i=10;break e;case I:i=9;break e;case T:i=11;break e;case N:i=14;break e;case P:i=16,r=null;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Nu(i,n,t,a)).elementType=e,t.type=r,t.lanes=o,t}function Ru(e,t,n,r){return(e=Nu(7,e,r,t)).lanes=n,e}function Ou(e,t,n,r){return(e=Nu(22,e,r,t)).elementType=L,e.lanes=n,e.stateNode={isHidden:!1},e}function Hu(e,t,n){return(e=Nu(6,e,null,t)).lanes=n,e}function Du(e,t,n){return(t=Nu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function zu(e,t,n,r,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Uu(e,t,n,r,a,l,o,i,s){return e=new zu(e,t,n,i,s),1===t?(t=1,!0===l&&(t|=8)):t=0,l=Nu(3,null,null,t),e.current=l,l.stateNode=e,l.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ol(l),e}function Fu(e){if(!e)return Ia;e:{if(Ge(e=e._reactInternals)!==e||1!==e.tag)throw Error(l(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Pa(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(l(171))}if(1===e.tag){var n=e.type;if(Pa(n))return Ra(e,n,t)}return t}function Gu(e,t,n,r,a,l,o,i,s){return(e=Uu(n,r,!0,e,0,l,0,i,s)).context=Fu(null),n=e.current,(l=Dl(r=eu(),a=tu(n))).callback=null!=t?t:null,zl(n,l,a),e.current.lanes=a,yt(e,a,r),ru(e,r),e}function ju(e,t,n,r){var a=t.current,l=eu(),o=tu(a);return n=Fu(n),null===t.context?t.context=n:t.pendingContext=n,(t=Dl(l,o)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=zl(a,t,o))&&(nu(e,a,o,l),Ul(e,a,o)),o}function Vu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Wu(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function $u(e,t){Wu(e,t),(e=e.alternate)&&Wu(e,t)}ws=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Ba.current)bi=!0;else{if(!(e.lanes&n||128&t.flags))return bi=!1,function(e,t,n){switch(t.tag){case 3:Bi(t),pl();break;case 5:Zl(t);break;case 1:Pa(t.type)&&Oa(t);break;case 4:Kl(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,a=t.memoizedProps.value;ka(El,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(ka(Jl,1&Jl.current),t.flags|=128,null):n&t.child.childLanes?Hi(e,t,n):(ka(Jl,1&Jl.current),null!==(e=Vi(e,t,n))?e.sibling:null);ka(Jl,1&Jl.current);break;case 19:if(r=!!(n&t.childLanes),128&e.flags){if(r)return Gi(e,t,n);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ka(Jl,Jl.current),r)break;return null;case 22:case 23:return t.lanes=0,Ci(e,t,n)}return Vi(e,t,n)}(e,t,n);bi=!!(131072&e.flags)}else bi=!1,al&&1048576&t.flags&&Ja(t,$a,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;ji(e,t),e=t.pendingProps;var a=Na(t,Ta.current);Bl(t,n),a=go(null,t,r,e,a,n);var o=yo();return t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Pa(r)?(o=!0,Oa(t)):o=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Ol(t),a.updater=ai,t.stateNode=a,a._reactInternals=t,si(t,r,e,n),t=Ti(null,t,r,!0,o,n)):(t.tag=0,al&&o&&el(t),Ai(null,t,a,n),t=t.child),t;case 16:r=t.elementType;e:{switch(ji(e,t),e=t.pendingProps,r=(a=r._init)(r._payload),t.type=r,a=t.tag=function(e){if("function"==typeof e)return Pu(e)?1:0;if(null!=e){if((e=e.$$typeof)===T)return 11;if(e===N)return 14}return 2}(r),e=ni(r,e),a){case 0:t=ki(null,t,r,e,n);break e;case 1:t=Ii(null,t,r,e,n);break e;case 11:t=_i(null,t,r,e,n);break e;case 14:t=Ei(null,t,r,ni(r.type,e),n);break e}throw Error(l(306,r,""))}return t;case 0:return r=t.type,a=t.pendingProps,ki(e,t,r,a=t.elementType===r?a:ni(r,a),n);case 1:return r=t.type,a=t.pendingProps,Ii(e,t,r,a=t.elementType===r?a:ni(r,a),n);case 3:e:{if(Bi(t),null===e)throw Error(l(387));r=t.pendingProps,a=(o=t.memoizedState).element,Hl(e,t),Gl(t,r,null,n);var i=t.memoizedState;if(r=i.element,o.isDehydrated){if(o={element:r,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=xi(e,t,r,n,a=ui(Error(l(423)),t));break e}if(r!==a){t=xi(e,t,r,n,a=ui(Error(l(424)),t));break e}for(rl=ua(t.stateNode.containerInfo.firstChild),nl=t,al=!0,ll=null,n=_l(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(pl(),r===a){t=Vi(e,t,n);break e}Ai(e,t,r,n)}t=t.child}return t;case 5:return Zl(t),null===e&&ul(t),r=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,i=a.children,na(r,a)?i=null:null!==o&&na(r,o)&&(t.flags|=32),Si(e,t),Ai(e,t,i,n),t.child;case 6:return null===e&&ul(t),null;case 13:return Hi(e,t,n);case 4:return Kl(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Al(t,null,r,n):Ai(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,_i(e,t,r,a=t.elementType===r?a:ni(r,a),n);case 7:return Ai(e,t,t.pendingProps,n),t.child;case 8:case 12:return Ai(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,a=t.pendingProps,o=t.memoizedProps,i=a.value,ka(El,r._currentValue),r._currentValue=i,null!==o)if(ir(o.value,i)){if(o.children===a.children&&!Ba.current){t=Vi(e,t,n);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var s=o.dependencies;if(null!==s){i=o.child;for(var u=s.firstContext;null!==u;){if(u.context===r){if(1===o.tag){(u=Dl(-1,n&-n)).tag=2;var c=o.updateQueue;if(null!==c){var f=(c=c.shared).pending;null===f?u.next=u:(u.next=f.next,f.next=u),c.pending=u}}o.lanes|=n,null!==(u=o.alternate)&&(u.lanes|=n),Tl(o.return,n,t),s.lanes|=n;break}u=u.next}}else if(10===o.tag)i=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(i=o.return))throw Error(l(341));i.lanes|=n,null!==(s=i.alternate)&&(s.lanes|=n),Tl(i,n,t),i=o.sibling}else i=o.child;if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===t){i=null;break}if(null!==(o=i.sibling)){o.return=i.return,i=o;break}i=i.return}o=i}Ai(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=t.pendingProps.children,Bl(t,n),r=r(a=xl(a)),t.flags|=1,Ai(e,t,r,n),t.child;case 14:return a=ni(r=t.type,t.pendingProps),Ei(e,t,r,a=ni(r.type,a),n);case 15:return wi(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:ni(r,a),ji(e,t),t.tag=1,Pa(r)?(e=!0,Oa(t)):e=!1,Bl(t,n),oi(t,r,a),si(t,r,a,n),Ti(null,t,r,!0,e,n);case 19:return Gi(e,t,n);case 22:return Ci(e,t,n)}throw Error(l(156,t.tag))};var Yu="function"==typeof reportError?reportError:function(e){console.error(e)};function Qu(e){this._internalRoot=e}function Ku(e){this._internalRoot=e}function Xu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Zu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function qu(){}function Ju(e,t,n,r,a){var l=n._reactRootContainer;if(l){var o=l;if("function"==typeof a){var i=a;a=function(){var e=Vu(o);i.call(e)}}ju(t,o,e,a)}else o=function(e,t,n,r,a){if(a){if("function"==typeof r){var l=r;r=function(){var e=Vu(o);l.call(e)}}var o=Gu(t,r,e,0,null,!1,0,"",qu);return e._reactRootContainer=o,e[ha]=o.current,Gr(8===e.nodeType?e.parentNode:e),cu(),o}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof r){var i=r;r=function(){var e=Vu(s);i.call(e)}}var s=Uu(e,0,!1,null,0,!1,0,"",qu);return e._reactRootContainer=s,e[ha]=s.current,Gr(8===e.nodeType?e.parentNode:e),cu((function(){ju(t,s,n,r)})),s}(n,t,e,a,r);return Vu(o)}Ku.prototype.render=Qu.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(l(409));ju(e,t,null,null)},Ku.prototype.unmount=Qu.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;cu((function(){ju(null,e,null,null)})),t[ha]=null}},Ku.prototype.unstable_scheduleHydration=function(e){if(e){var t=Ct();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Lt.length&&0!==t&&t<Lt[n].priority;n++);Lt.splice(n,0,e),0===n&&Ht(e)}},_t=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ft(t.pendingLanes);0!==n&&(vt(t,1|n),ru(t,Ze()),!(6&Ts)&&(Gs=Ze()+500,Ga()))}break;case 13:cu((function(){var t=Ml(e,1);if(null!==t){var n=eu();nu(t,e,1,n)}})),$u(e,1)}},Et=function(e){if(13===e.tag){var t=Ml(e,134217728);null!==t&&nu(t,e,134217728,eu()),$u(e,134217728)}},wt=function(e){if(13===e.tag){var t=tu(e),n=Ml(e,t);null!==n&&nu(n,e,t,eu()),$u(e,t)}},Ct=function(){return bt},St=function(e,t){var n=bt;try{return bt=e,t()}finally{bt=n}},Ee=function(e,t,n){switch(t){case"input":if(q(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=_a(r);if(!a)throw Error(l(90));Y(r),q(r,a)}}}break;case"textarea":le(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Te=uu,Be=cu;var ec={usingClientEntryPoint:!1,Events:[ba,Aa,_a,ke,Ie,uu]},tc={findFiberByHostInstance:va,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nc={bundleType:tc.bundleType,version:tc.version,rendererPackageName:tc.rendererPackageName,rendererConfig:tc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:A.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=We(e))?null:e.stateNode},findFiberByHostInstance:tc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var rc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!rc.isDisabled&&rc.supportsFiber)try{at=rc.inject(nc),lt=rc}catch(ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ec,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Xu(t))throw Error(l(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:E,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Xu(e))throw Error(l(299));var n=!1,r="",a=Yu;return null!=t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(a=t.onRecoverableError)),t=Uu(e,1,!1,null,0,n,0,r,a),e[ha]=t.current,Gr(8===e.nodeType?e.parentNode:e),new Qu(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw e=Object.keys(e).join(","),Error(l(268,e))}return null===(e=We(t))?null:e.stateNode},t.flushSync=function(e){return cu(e)},t.hydrate=function(e,t,n){if(!Zu(t))throw Error(l(200));return Ju(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Xu(e))throw Error(l(405));var r=null!=n&&n.hydratedSources||null,a=!1,o="",i=Yu;if(null!=n&&(!0===n.unstable_strictMode&&(a=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),t=Gu(t,null,e,1,null!=n?n:null,a,0,o,i),e[ha]=t.current,Gr(e),r)for(e=0;e<r.length;e++)a=(a=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,a]:t.mutableSourceEagerHydrationData.push(n,a);return new Ku(t)},t.render=function(e,t,n){if(!Zu(t))throw Error(l(200));return Ju(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zu(e))throw Error(l(40));return!!e._reactRootContainer&&(cu((function(){Ju(null,null,e,!1,(function(){e._reactRootContainer=null,e[ha]=null}))})),!0)},t.unstable_batchedUpdates=uu,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Zu(n))throw Error(l(200));if(null==e||void 0===e._reactInternals)throw Error(l(38));return Ju(e,t,n,!1,r)},t.version="18.3.1-next-f1338f8080-20240426"},338:(e,t,n)=>{"use strict";var r=n(961);t.H=r.createRoot,r.hydrateRoot},961:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(551)},799:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,a=n?Symbol.for("react.portal"):60106,l=n?Symbol.for("react.fragment"):60107,o=n?Symbol.for("react.strict_mode"):60108,i=n?Symbol.for("react.profiler"):60114,s=n?Symbol.for("react.provider"):60109,u=n?Symbol.for("react.context"):60110,c=n?Symbol.for("react.async_mode"):60111,f=n?Symbol.for("react.concurrent_mode"):60111,d=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,h=n?Symbol.for("react.suspense_list"):60120,m=n?Symbol.for("react.memo"):60115,g=n?Symbol.for("react.lazy"):60116,y=n?Symbol.for("react.block"):60121,v=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,A=n?Symbol.for("react.scope"):60119;function _(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case c:case f:case l:case i:case o:case p:return e;default:switch(e=e&&e.$$typeof){case u:case d:case g:case m:case s:return e;default:return t}}case a:return t}}}function E(e){return _(e)===f}t.AsyncMode=c,t.ConcurrentMode=f,t.ContextConsumer=u,t.ContextProvider=s,t.Element=r,t.ForwardRef=d,t.Fragment=l,t.Lazy=g,t.Memo=m,t.Portal=a,t.Profiler=i,t.StrictMode=o,t.Suspense=p,t.isAsyncMode=function(e){return E(e)||_(e)===c},t.isConcurrentMode=E,t.isContextConsumer=function(e){return _(e)===u},t.isContextProvider=function(e){return _(e)===s},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return _(e)===d},t.isFragment=function(e){return _(e)===l},t.isLazy=function(e){return _(e)===g},t.isMemo=function(e){return _(e)===m},t.isPortal=function(e){return _(e)===a},t.isProfiler=function(e){return _(e)===i},t.isStrictMode=function(e){return _(e)===o},t.isSuspense=function(e){return _(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===l||e===f||e===i||e===o||e===p||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===g||e.$$typeof===m||e.$$typeof===s||e.$$typeof===u||e.$$typeof===d||e.$$typeof===v||e.$$typeof===b||e.$$typeof===A||e.$$typeof===y)},t.typeOf=_},363:(e,t,n)=>{"use strict";e.exports=n(799)},287:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),l=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),s=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),f=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator,h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||h}function v(){}function b(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||h}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=y.prototype;var A=b.prototype=new v;A.constructor=b,m(A,y.prototype),A.isPureReactComponent=!0;var _=Array.isArray,E=Object.prototype.hasOwnProperty,w={current:null},C={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,r){var a,l={},o=null,i=null;if(null!=t)for(a in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(o=""+t.key),t)E.call(t,a)&&!C.hasOwnProperty(a)&&(l[a]=t[a]);var s=arguments.length-2;if(1===s)l.children=r;else if(1<s){for(var u=Array(s),c=0;c<s;c++)u[c]=arguments[c+2];l.children=u}if(e&&e.defaultProps)for(a in s=e.defaultProps)void 0===l[a]&&(l[a]=s[a]);return{$$typeof:n,type:e,key:o,ref:i,props:l,_owner:w.current}}function k(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var I=/\/+/g;function T(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function B(e,t,a,l,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var s=!1;if(null===e)s=!0;else switch(i){case"string":case"number":s=!0;break;case"object":switch(e.$$typeof){case n:case r:s=!0}}if(s)return o=o(s=e),e=""===l?"."+T(s,0):l,_(o)?(a="",null!=e&&(a=e.replace(I,"$&/")+"/"),B(o,t,a,"",(function(e){return e}))):null!=o&&(k(o)&&(o=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,a+(!o.key||s&&s.key===o.key?"":(""+o.key).replace(I,"$&/")+"/")+e)),t.push(o)),1;if(s=0,l=""===l?".":l+":",_(e))for(var u=0;u<e.length;u++){var c=l+T(i=e[u],u);s+=B(i,t,a,c,o)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),u=0;!(i=e.next()).done;)s+=B(i=i.value,t,a,c=l+T(i,u++),o);else if("object"===i)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return s}function x(e,t,n){if(null==e)return e;var r=[],a=0;return B(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function N(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var P={current:null},L={transition:null},M={ReactCurrentDispatcher:P,ReactCurrentBatchConfig:L,ReactCurrentOwner:w};function R(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:x,forEach:function(e,t,n){x(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return x(e,(function(){t++})),t},toArray:function(e){return x(e,(function(e){return e}))||[]},only:function(e){if(!k(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=a,t.Profiler=o,t.PureComponent=b,t.StrictMode=l,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=M,t.act=R,t.cloneElement=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=m({},e.props),l=e.key,o=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,i=w.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(u in t)E.call(t,u)&&!C.hasOwnProperty(u)&&(a[u]=void 0===t[u]&&void 0!==s?s[u]:t[u])}var u=arguments.length-2;if(1===u)a.children=r;else if(1<u){s=Array(u);for(var c=0;c<u;c++)s[c]=arguments[c+2];a.children=s}return{$$typeof:n,type:e.type,key:l,ref:o,props:a,_owner:i}},t.createContext=function(e){return(e={$$typeof:s,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=S,t.createFactory=function(e){var t=S.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=k,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:N}},t.memo=function(e,t){return{$$typeof:f,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=L.transition;L.transition={};try{e()}finally{L.transition=t}},t.unstable_act=R,t.useCallback=function(e,t){return P.current.useCallback(e,t)},t.useContext=function(e){return P.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return P.current.useDeferredValue(e)},t.useEffect=function(e,t){return P.current.useEffect(e,t)},t.useId=function(){return P.current.useId()},t.useImperativeHandle=function(e,t,n){return P.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return P.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return P.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return P.current.useMemo(e,t)},t.useReducer=function(e,t,n){return P.current.useReducer(e,t,n)},t.useRef=function(e){return P.current.useRef(e)},t.useState=function(e){return P.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return P.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return P.current.useTransition()},t.version="18.3.1"},540:(e,t,n)=>{"use strict";e.exports=n(287)},463:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,a=e[r];if(!(0<l(a,t)))break e;e[r]=t,e[n]=a,n=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length,o=a>>>1;r<o;){var i=2*(r+1)-1,s=e[i],u=i+1,c=e[u];if(0>l(s,n))u<a&&0>l(c,s)?(e[r]=c,e[u]=n,r=u):(e[r]=s,e[i]=n,r=i);else{if(!(u<a&&0>l(c,n)))break e;e[r]=c,e[u]=n,r=u}}}return t}function l(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,s=i.now();t.unstable_now=function(){return i.now()-s}}var u=[],c=[],f=1,d=null,p=3,h=!1,m=!1,g=!1,y="function"==typeof setTimeout?setTimeout:null,v="function"==typeof clearTimeout?clearTimeout:null,b="undefined"!=typeof setImmediate?setImmediate:null;function A(e){for(var t=r(c);null!==t;){if(null===t.callback)a(c);else{if(!(t.startTime<=e))break;a(c),t.sortIndex=t.expirationTime,n(u,t)}t=r(c)}}function _(e){if(g=!1,A(e),!m)if(null!==r(u))m=!0,L(E);else{var t=r(c);null!==t&&M(_,t.startTime-e)}}function E(e,n){m=!1,g&&(g=!1,v(k),k=-1),h=!0;var l=p;try{for(A(n),d=r(u);null!==d&&(!(d.expirationTime>n)||e&&!B());){var o=d.callback;if("function"==typeof o){d.callback=null,p=d.priorityLevel;var i=o(d.expirationTime<=n);n=t.unstable_now(),"function"==typeof i?d.callback=i:d===r(u)&&a(u),A(n)}else a(u);d=r(u)}if(null!==d)var s=!0;else{var f=r(c);null!==f&&M(_,f.startTime-n),s=!1}return s}finally{d=null,p=l,h=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var w,C=!1,S=null,k=-1,I=5,T=-1;function B(){return!(t.unstable_now()-T<I)}function x(){if(null!==S){var e=t.unstable_now();T=e;var n=!0;try{n=S(!0,e)}finally{n?w():(C=!1,S=null)}}else C=!1}if("function"==typeof b)w=function(){b(x)};else if("undefined"!=typeof MessageChannel){var N=new MessageChannel,P=N.port2;N.port1.onmessage=x,w=function(){P.postMessage(null)}}else w=function(){y(x,0)};function L(e){S=e,C||(C=!0,w())}function M(e,n){k=y((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||h||(m=!0,L(E))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):I=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return r(u)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,a,l){var o=t.unstable_now();switch(l="object"==typeof l&&null!==l&&"number"==typeof(l=l.delay)&&0<l?o+l:o,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:f++,callback:a,priorityLevel:e,startTime:l,expirationTime:i=l+i,sortIndex:-1},l>o?(e.sortIndex=l,n(c,e),null===r(u)&&e===r(c)&&(g?(v(k),k=-1):g=!0,M(_,l-o))):(e.sortIndex=i,n(u,e),m||h||(m=!0,L(E))),e},t.unstable_shouldYield=B,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},982:(e,t,n)=>{"use strict";e.exports=n(463)},72:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var l={},o=[],i=0;i<e.length;i++){var s=e[i],u=r.base?s[0]+r.base:s[0],c=l[u]||0,f="".concat(u," ").concat(c);l[u]=c+1;var d=n(f),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)t[d].references++,t[d].updater(p);else{var h=a(p,r);r.byIndex=i,t.splice(i,0,{identifier:f,updater:h,references:1})}o.push(f)}return o}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var l=r(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<l.length;o++){var i=n(l[o]);t[i].references--}for(var s=r(e,a),u=0;u<l.length;u++){var c=n(l[u]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}l=s}}},659:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},159:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var l=n.sourceMap;l&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(l))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},942:(e,t)=>{var n;!function(){"use strict";var r={}.hasOwnProperty;function a(){for(var e="",t=0;t<arguments.length;t++){var n=arguments[t];n&&(e=o(e,l(n)))}return e}function l(e){if("string"==typeof e||"number"==typeof e)return e;if("object"!=typeof e)return"";if(Array.isArray(e))return a.apply(null,e);if(e.toString!==Object.prototype.toString&&!e.toString.toString().includes("[native code]"))return e.toString();var t="";for(var n in e)r.call(e,n)&&e[n]&&(t=o(t,n));return t}function o(e,t){return t?e?e+" "+t:e+t:e}e.exports?(a.default=a,e.exports=a):void 0===(n=function(){return a}.apply(t,[]))||(e.exports=n)}()}},l={};function o(e){var t=l[e];if(void 0!==t)return t.exports;var n=l[e]={id:e,exports:{}};return a[e](n,n.exports,o),n.exports}o.m=a,o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,o.t=function(n,r){if(1&r&&(n=this(n)),8&r)return n;if("object"==typeof n&&n){if(4&r&&n.__esModule)return n;if(16&r&&"function"==typeof n.then)return n}var a=Object.create(null);o.r(a);var l={};e=e||[null,t({}),t([]),t(t)];for(var i=2&r&&n;"object"==typeof i&&!~e.indexOf(i);i=t(i))Object.getOwnPropertyNames(i).forEach((e=>l[e]=()=>n[e]));return l.default=()=>n,o.d(a,l),a},o.d=(e,t)=>{for(var n in t)o.o(t,n)&&!o.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},o.f={},o.e=e=>Promise.all(Object.keys(o.f).reduce(((t,n)=>(o.f[n](e,t),t)),[])),o.u=e=>e+".js",o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n={},r="periodic-table:",o.l=(e,t,a,l)=>{if(n[e])n[e].push(t);else{var i,s;if(void 0!==a)for(var u=document.getElementsByTagName("script"),c=0;c<u.length;c++){var f=u[c];if(f.getAttribute("src")==e||f.getAttribute("data-webpack")==r+a){i=f;break}}i||(s=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,o.nc&&i.setAttribute("nonce",o.nc),i.setAttribute("data-webpack",r+a),i.src=e),n[e]=[t];var d=(t,r)=>{i.onerror=i.onload=null,clearTimeout(p);var a=n[e];if(delete n[e],i.parentNode&&i.parentNode.removeChild(i),a&&a.forEach((e=>e(r))),t)return t(r)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=d.bind(null,i.onerror),i.onload=d.bind(null,i.onload),s&&document.head.appendChild(i)}},o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;o.g.importScripts&&(e=o.g.location+"");var t=o.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");if(n.length)for(var r=n.length-1;r>-1&&(!e||!/^http(s?):/.test(e));)e=n[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=e})(),(()=>{var e={23:0};o.f.j=(t,n)=>{var r=o.o(e,t)?e[t]:void 0;if(0!==r)if(r)n.push(r[2]);else{var a=new Promise(((n,a)=>r=e[t]=[n,a]));n.push(r[2]=a);var l=o.p+o.u(t),i=new Error;o.l(l,(n=>{if(o.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var a=n&&("load"===n.type?"missing":n.type),l=n&&n.target&&n.target.src;i.message="Loading chunk "+t+" failed.\n("+a+": "+l+")",i.name="ChunkLoadError",i.type=a,i.request=l,r[1](i)}}),"chunk-"+t,t)}};var t=(t,n)=>{var r,a,[l,i,s]=n,u=0;if(l.some((t=>0!==e[t]))){for(r in i)o.o(i,r)&&(o.m[r]=i[r]);s&&s(o)}for(t&&t(n);u<l.length;u++)a=l[u],o.o(e,a)&&e[a]&&e[a][0](),e[a]=0},n=self.webpackChunkperiodic_table=self.webpackChunkperiodic_table||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})(),o.nc=void 0,(()=>{"use strict";var e=o(540),t=o(338),n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},n(e,t)};function r(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}var a=function(){return a=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},a.apply(this,arguments)};function l(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}function i(e,t,n){if(n||2===arguments.length)for(var r,a=0,l=t.length;a<l;a++)!r&&a in t||(r||(r=Array.prototype.slice.call(t,0,a)),r[a]=t[a]);return e.concat(r||Array.prototype.slice.call(t))}function s(e,t){var n=t&&t.cache?t.cache:v,r=t&&t.serializer?t.serializer:p;return(t&&t.strategy?t.strategy:d)(e,{cache:n,serializer:r})}function u(e,t,n,r){var a,l=null==(a=r)||"number"==typeof a||"boolean"==typeof a?r:n(r),o=t.get(l);return void 0===o&&(o=e.call(this,r),t.set(l,o)),o}function c(e,t,n){var r=Array.prototype.slice.call(arguments,3),a=n(r),l=t.get(a);return void 0===l&&(l=e.apply(this,r),t.set(a,l)),l}function f(e,t,n,r,a){return n.bind(t,e,r,a)}function d(e,t){return f(e,this,1===e.length?u:c,t.cache.create(),t.serializer)}Object.create,Object.create,"function"==typeof SuppressedError&&SuppressedError;var p=function(){return JSON.stringify(arguments)};function h(){this.cache=Object.create(null)}h.prototype.get=function(e){return this.cache[e]},h.prototype.set=function(e,t){this.cache[e]=t};var m,g,y,v={create:function(){return new h}},b={variadic:function(e,t){return f(e,this,c,t.cache.create(),t.serializer)},monadic:function(e,t){return f(e,this,u,t.cache.create(),t.serializer)}};function A(e){return e.type===g.literal}function _(e){return e.type===g.argument}function E(e){return e.type===g.number}function w(e){return e.type===g.date}function C(e){return e.type===g.time}function S(e){return e.type===g.select}function k(e){return e.type===g.plural}function I(e){return e.type===g.pound}function T(e){return e.type===g.tag}function B(e){return!(!e||"object"!=typeof e||e.type!==y.number)}function x(e){return!(!e||"object"!=typeof e||e.type!==y.dateTime)}!function(e){e[e.EXPECT_ARGUMENT_CLOSING_BRACE=1]="EXPECT_ARGUMENT_CLOSING_BRACE",e[e.EMPTY_ARGUMENT=2]="EMPTY_ARGUMENT",e[e.MALFORMED_ARGUMENT=3]="MALFORMED_ARGUMENT",e[e.EXPECT_ARGUMENT_TYPE=4]="EXPECT_ARGUMENT_TYPE",e[e.INVALID_ARGUMENT_TYPE=5]="INVALID_ARGUMENT_TYPE",e[e.EXPECT_ARGUMENT_STYLE=6]="EXPECT_ARGUMENT_STYLE",e[e.INVALID_NUMBER_SKELETON=7]="INVALID_NUMBER_SKELETON",e[e.INVALID_DATE_TIME_SKELETON=8]="INVALID_DATE_TIME_SKELETON",e[e.EXPECT_NUMBER_SKELETON=9]="EXPECT_NUMBER_SKELETON",e[e.EXPECT_DATE_TIME_SKELETON=10]="EXPECT_DATE_TIME_SKELETON",e[e.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE=11]="UNCLOSED_QUOTE_IN_ARGUMENT_STYLE",e[e.EXPECT_SELECT_ARGUMENT_OPTIONS=12]="EXPECT_SELECT_ARGUMENT_OPTIONS",e[e.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE=13]="EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE",e[e.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE=14]="INVALID_PLURAL_ARGUMENT_OFFSET_VALUE",e[e.EXPECT_SELECT_ARGUMENT_SELECTOR=15]="EXPECT_SELECT_ARGUMENT_SELECTOR",e[e.EXPECT_PLURAL_ARGUMENT_SELECTOR=16]="EXPECT_PLURAL_ARGUMENT_SELECTOR",e[e.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT=17]="EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT",e[e.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT=18]="EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT",e[e.INVALID_PLURAL_ARGUMENT_SELECTOR=19]="INVALID_PLURAL_ARGUMENT_SELECTOR",e[e.DUPLICATE_PLURAL_ARGUMENT_SELECTOR=20]="DUPLICATE_PLURAL_ARGUMENT_SELECTOR",e[e.DUPLICATE_SELECT_ARGUMENT_SELECTOR=21]="DUPLICATE_SELECT_ARGUMENT_SELECTOR",e[e.MISSING_OTHER_CLAUSE=22]="MISSING_OTHER_CLAUSE",e[e.INVALID_TAG=23]="INVALID_TAG",e[e.INVALID_TAG_NAME=25]="INVALID_TAG_NAME",e[e.UNMATCHED_CLOSING_TAG=26]="UNMATCHED_CLOSING_TAG",e[e.UNCLOSED_TAG=27]="UNCLOSED_TAG"}(m||(m={})),function(e){e[e.literal=0]="literal",e[e.argument=1]="argument",e[e.number=2]="number",e[e.date=3]="date",e[e.time=4]="time",e[e.select=5]="select",e[e.plural=6]="plural",e[e.pound=7]="pound",e[e.tag=8]="tag"}(g||(g={})),function(e){e[e.number=0]="number",e[e.dateTime=1]="dateTime"}(y||(y={}));var N=/[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/,P=/(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;function L(e){var t={};return e.replace(P,(function(e){var n=e.length;switch(e[0]){case"G":t.era=4===n?"long":5===n?"narrow":"short";break;case"y":t.year=2===n?"2-digit":"numeric";break;case"Y":case"u":case"U":case"r":throw new RangeError("`Y/u/U/r` (year) patterns are not supported, use `y` instead");case"q":case"Q":throw new RangeError("`q/Q` (quarter) patterns are not supported");case"M":case"L":t.month=["numeric","2-digit","short","long","narrow"][n-1];break;case"w":case"W":throw new RangeError("`w/W` (week) patterns are not supported");case"d":t.day=["numeric","2-digit"][n-1];break;case"D":case"F":case"g":throw new RangeError("`D/F/g` (day) patterns are not supported, use `d` instead");case"E":t.weekday=4===n?"long":5===n?"narrow":"short";break;case"e":if(n<4)throw new RangeError("`e..eee` (weekday) patterns are not supported");t.weekday=["short","long","narrow","short"][n-4];break;case"c":if(n<4)throw new RangeError("`c..ccc` (weekday) patterns are not supported");t.weekday=["short","long","narrow","short"][n-4];break;case"a":t.hour12=!0;break;case"b":case"B":throw new RangeError("`b/B` (period) patterns are not supported, use `a` instead");case"h":t.hourCycle="h12",t.hour=["numeric","2-digit"][n-1];break;case"H":t.hourCycle="h23",t.hour=["numeric","2-digit"][n-1];break;case"K":t.hourCycle="h11",t.hour=["numeric","2-digit"][n-1];break;case"k":t.hourCycle="h24",t.hour=["numeric","2-digit"][n-1];break;case"j":case"J":case"C":throw new RangeError("`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead");case"m":t.minute=["numeric","2-digit"][n-1];break;case"s":t.second=["numeric","2-digit"][n-1];break;case"S":case"A":throw new RangeError("`S/A` (second) patterns are not supported, use `s` instead");case"z":t.timeZoneName=n<4?"short":"long";break;case"Z":case"O":case"v":case"V":case"X":case"x":throw new RangeError("`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead")}return""})),t}var M=/[\t-\r \x85\u200E\u200F\u2028\u2029]/i,R=/^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g,O=/^(@+)?(\+|#+)?[rs]?$/g,H=/(\*)(0+)|(#+)(0+)|(0+)/g,D=/^(0+)$/;function z(e){var t={};return"r"===e[e.length-1]?t.roundingPriority="morePrecision":"s"===e[e.length-1]&&(t.roundingPriority="lessPrecision"),e.replace(O,(function(e,n,r){return"string"!=typeof r?(t.minimumSignificantDigits=n.length,t.maximumSignificantDigits=n.length):"+"===r?t.minimumSignificantDigits=n.length:"#"===n[0]?t.maximumSignificantDigits=n.length:(t.minimumSignificantDigits=n.length,t.maximumSignificantDigits=n.length+("string"==typeof r?r.length:0)),""})),t}function U(e){switch(e){case"sign-auto":return{signDisplay:"auto"};case"sign-accounting":case"()":return{currencySign:"accounting"};case"sign-always":case"+!":return{signDisplay:"always"};case"sign-accounting-always":case"()!":return{signDisplay:"always",currencySign:"accounting"};case"sign-except-zero":case"+?":return{signDisplay:"exceptZero"};case"sign-accounting-except-zero":case"()?":return{signDisplay:"exceptZero",currencySign:"accounting"};case"sign-never":case"+_":return{signDisplay:"never"}}}function F(e){var t;if("E"===e[0]&&"E"===e[1]?(t={notation:"engineering"},e=e.slice(2)):"E"===e[0]&&(t={notation:"scientific"},e=e.slice(1)),t){var n=e.slice(0,2);if("+!"===n?(t.signDisplay="always",e=e.slice(2)):"+?"===n&&(t.signDisplay="exceptZero",e=e.slice(2)),!D.test(e))throw new Error("Malformed concise eng/scientific notation");t.minimumIntegerDigits=e.length}return t}function G(e){return U(e)||{}}function j(e){for(var t={},n=0,r=e;n<r.length;n++){var l=r[n];switch(l.stem){case"percent":case"%":t.style="percent";continue;case"%x100":t.style="percent",t.scale=100;continue;case"currency":t.style="currency",t.currency=l.options[0];continue;case"group-off":case",_":t.useGrouping=!1;continue;case"precision-integer":case".":t.maximumFractionDigits=0;continue;case"measure-unit":case"unit":t.style="unit",t.unit=l.options[0].replace(/^(.*?)-/,"");continue;case"compact-short":case"K":t.notation="compact",t.compactDisplay="short";continue;case"compact-long":case"KK":t.notation="compact",t.compactDisplay="long";continue;case"scientific":t=a(a(a({},t),{notation:"scientific"}),l.options.reduce((function(e,t){return a(a({},e),G(t))}),{}));continue;case"engineering":t=a(a(a({},t),{notation:"engineering"}),l.options.reduce((function(e,t){return a(a({},e),G(t))}),{}));continue;case"notation-simple":t.notation="standard";continue;case"unit-width-narrow":t.currencyDisplay="narrowSymbol",t.unitDisplay="narrow";continue;case"unit-width-short":t.currencyDisplay="code",t.unitDisplay="short";continue;case"unit-width-full-name":t.currencyDisplay="name",t.unitDisplay="long";continue;case"unit-width-iso-code":t.currencyDisplay="symbol";continue;case"scale":t.scale=parseFloat(l.options[0]);continue;case"rounding-mode-floor":t.roundingMode="floor";continue;case"rounding-mode-ceiling":t.roundingMode="ceil";continue;case"rounding-mode-down":t.roundingMode="trunc";continue;case"rounding-mode-up":t.roundingMode="expand";continue;case"rounding-mode-half-even":t.roundingMode="halfEven";continue;case"rounding-mode-half-down":t.roundingMode="halfTrunc";continue;case"rounding-mode-half-up":t.roundingMode="halfExpand";continue;case"integer-width":if(l.options.length>1)throw new RangeError("integer-width stems only accept a single optional option");l.options[0].replace(H,(function(e,n,r,a,l,o){if(n)t.minimumIntegerDigits=r.length;else{if(a&&l)throw new Error("We currently do not support maximum integer digits");if(o)throw new Error("We currently do not support exact integer digits")}return""}));continue}if(D.test(l.stem))t.minimumIntegerDigits=l.stem.length;else if(R.test(l.stem)){if(l.options.length>1)throw new RangeError("Fraction-precision stems only accept a single optional option");l.stem.replace(R,(function(e,n,r,a,l,o){return"*"===r?t.minimumFractionDigits=n.length:a&&"#"===a[0]?t.maximumFractionDigits=a.length:l&&o?(t.minimumFractionDigits=l.length,t.maximumFractionDigits=l.length+o.length):(t.minimumFractionDigits=n.length,t.maximumFractionDigits=n.length),""}));var o=l.options[0];"w"===o?t=a(a({},t),{trailingZeroDisplay:"stripIfInteger"}):o&&(t=a(a({},t),z(o)))}else if(O.test(l.stem))t=a(a({},t),z(l.stem));else{var i=U(l.stem);i&&(t=a(a({},t),i));var s=F(l.stem);s&&(t=a(a({},t),s))}}return t}var V,W={"001":["H","h"],419:["h","H","hB","hb"],AC:["H","h","hb","hB"],AD:["H","hB"],AE:["h","hB","hb","H"],AF:["H","hb","hB","h"],AG:["h","hb","H","hB"],AI:["H","h","hb","hB"],AL:["h","H","hB"],AM:["H","hB"],AO:["H","hB"],AR:["h","H","hB","hb"],AS:["h","H"],AT:["H","hB"],AU:["h","hb","H","hB"],AW:["H","hB"],AX:["H"],AZ:["H","hB","h"],BA:["H","hB","h"],BB:["h","hb","H","hB"],BD:["h","hB","H"],BE:["H","hB"],BF:["H","hB"],BG:["H","hB","h"],BH:["h","hB","hb","H"],BI:["H","h"],BJ:["H","hB"],BL:["H","hB"],BM:["h","hb","H","hB"],BN:["hb","hB","h","H"],BO:["h","H","hB","hb"],BQ:["H"],BR:["H","hB"],BS:["h","hb","H","hB"],BT:["h","H"],BW:["H","h","hb","hB"],BY:["H","h"],BZ:["H","h","hb","hB"],CA:["h","hb","H","hB"],CC:["H","h","hb","hB"],CD:["hB","H"],CF:["H","h","hB"],CG:["H","hB"],CH:["H","hB","h"],CI:["H","hB"],CK:["H","h","hb","hB"],CL:["h","H","hB","hb"],CM:["H","h","hB"],CN:["H","hB","hb","h"],CO:["h","H","hB","hb"],CP:["H"],CR:["h","H","hB","hb"],CU:["h","H","hB","hb"],CV:["H","hB"],CW:["H","hB"],CX:["H","h","hb","hB"],CY:["h","H","hb","hB"],CZ:["H"],DE:["H","hB"],DG:["H","h","hb","hB"],DJ:["h","H"],DK:["H"],DM:["h","hb","H","hB"],DO:["h","H","hB","hb"],DZ:["h","hB","hb","H"],EA:["H","h","hB","hb"],EC:["h","H","hB","hb"],EE:["H","hB"],EG:["h","hB","hb","H"],EH:["h","hB","hb","H"],ER:["h","H"],ES:["H","hB","h","hb"],ET:["hB","hb","h","H"],FI:["H"],FJ:["h","hb","H","hB"],FK:["H","h","hb","hB"],FM:["h","hb","H","hB"],FO:["H","h"],FR:["H","hB"],GA:["H","hB"],GB:["H","h","hb","hB"],GD:["h","hb","H","hB"],GE:["H","hB","h"],GF:["H","hB"],GG:["H","h","hb","hB"],GH:["h","H"],GI:["H","h","hb","hB"],GL:["H","h"],GM:["h","hb","H","hB"],GN:["H","hB"],GP:["H","hB"],GQ:["H","hB","h","hb"],GR:["h","H","hb","hB"],GT:["h","H","hB","hb"],GU:["h","hb","H","hB"],GW:["H","hB"],GY:["h","hb","H","hB"],HK:["h","hB","hb","H"],HN:["h","H","hB","hb"],HR:["H","hB"],HU:["H","h"],IC:["H","h","hB","hb"],ID:["H"],IE:["H","h","hb","hB"],IL:["H","hB"],IM:["H","h","hb","hB"],IN:["h","H"],IO:["H","h","hb","hB"],IQ:["h","hB","hb","H"],IR:["hB","H"],IS:["H"],IT:["H","hB"],JE:["H","h","hb","hB"],JM:["h","hb","H","hB"],JO:["h","hB","hb","H"],JP:["H","K","h"],KE:["hB","hb","H","h"],KG:["H","h","hB","hb"],KH:["hB","h","H","hb"],KI:["h","hb","H","hB"],KM:["H","h","hB","hb"],KN:["h","hb","H","hB"],KP:["h","H","hB","hb"],KR:["h","H","hB","hb"],KW:["h","hB","hb","H"],KY:["h","hb","H","hB"],KZ:["H","hB"],LA:["H","hb","hB","h"],LB:["h","hB","hb","H"],LC:["h","hb","H","hB"],LI:["H","hB","h"],LK:["H","h","hB","hb"],LR:["h","hb","H","hB"],LS:["h","H"],LT:["H","h","hb","hB"],LU:["H","h","hB"],LV:["H","hB","hb","h"],LY:["h","hB","hb","H"],MA:["H","h","hB","hb"],MC:["H","hB"],MD:["H","hB"],ME:["H","hB","h"],MF:["H","hB"],MG:["H","h"],MH:["h","hb","H","hB"],MK:["H","h","hb","hB"],ML:["H"],MM:["hB","hb","H","h"],MN:["H","h","hb","hB"],MO:["h","hB","hb","H"],MP:["h","hb","H","hB"],MQ:["H","hB"],MR:["h","hB","hb","H"],MS:["H","h","hb","hB"],MT:["H","h"],MU:["H","h"],MV:["H","h"],MW:["h","hb","H","hB"],MX:["h","H","hB","hb"],MY:["hb","hB","h","H"],MZ:["H","hB"],NA:["h","H","hB","hb"],NC:["H","hB"],NE:["H"],NF:["H","h","hb","hB"],NG:["H","h","hb","hB"],NI:["h","H","hB","hb"],NL:["H","hB"],NO:["H","h"],NP:["H","h","hB"],NR:["H","h","hb","hB"],NU:["H","h","hb","hB"],NZ:["h","hb","H","hB"],OM:["h","hB","hb","H"],PA:["h","H","hB","hb"],PE:["h","H","hB","hb"],PF:["H","h","hB"],PG:["h","H"],PH:["h","hB","hb","H"],PK:["h","hB","H"],PL:["H","h"],PM:["H","hB"],PN:["H","h","hb","hB"],PR:["h","H","hB","hb"],PS:["h","hB","hb","H"],PT:["H","hB"],PW:["h","H"],PY:["h","H","hB","hb"],QA:["h","hB","hb","H"],RE:["H","hB"],RO:["H","hB"],RS:["H","hB","h"],RU:["H"],RW:["H","h"],SA:["h","hB","hb","H"],SB:["h","hb","H","hB"],SC:["H","h","hB"],SD:["h","hB","hb","H"],SE:["H"],SG:["h","hb","H","hB"],SH:["H","h","hb","hB"],SI:["H","hB"],SJ:["H"],SK:["H"],SL:["h","hb","H","hB"],SM:["H","h","hB"],SN:["H","h","hB"],SO:["h","H"],SR:["H","hB"],SS:["h","hb","H","hB"],ST:["H","hB"],SV:["h","H","hB","hb"],SX:["H","h","hb","hB"],SY:["h","hB","hb","H"],SZ:["h","hb","H","hB"],TA:["H","h","hb","hB"],TC:["h","hb","H","hB"],TD:["h","H","hB"],TF:["H","h","hB"],TG:["H","hB"],TH:["H","h"],TJ:["H","h"],TL:["H","hB","hb","h"],TM:["H","h"],TN:["h","hB","hb","H"],TO:["h","H"],TR:["H","hB"],TT:["h","hb","H","hB"],TW:["hB","hb","h","H"],TZ:["hB","hb","H","h"],UA:["H","hB","h"],UG:["hB","hb","H","h"],UM:["h","hb","H","hB"],US:["h","hb","H","hB"],UY:["h","H","hB","hb"],UZ:["H","hB","h"],VA:["H","h","hB"],VC:["h","hb","H","hB"],VE:["h","H","hB","hb"],VG:["h","hb","H","hB"],VI:["h","hb","H","hB"],VN:["H","h"],VU:["h","H"],WF:["H","hB"],WS:["h","H"],XK:["H","hB","h"],YE:["h","hB","hb","H"],YT:["H","hB"],ZA:["H","h","hb","hB"],ZM:["h","hb","H","hB"],ZW:["H","h"],"af-ZA":["H","h","hB","hb"],"ar-001":["h","hB","hb","H"],"ca-ES":["H","h","hB"],"en-001":["h","hb","H","hB"],"en-HK":["h","hb","H","hB"],"en-IL":["H","h","hb","hB"],"en-MY":["h","hb","H","hB"],"es-BR":["H","h","hB","hb"],"es-ES":["H","h","hB","hb"],"es-GQ":["H","h","hB","hb"],"fr-CA":["H","h","hB"],"gl-ES":["H","h","hB"],"gu-IN":["hB","hb","h","H"],"hi-IN":["hB","h","H"],"it-CH":["H","h","hB"],"it-IT":["H","h","hB"],"kn-IN":["hB","h","H"],"ml-IN":["hB","h","H"],"mr-IN":["hB","hb","h","H"],"pa-IN":["hB","hb","h","H"],"ta-IN":["hB","h","hb","H"],"te-IN":["hB","h","H"],"zu-ZA":["H","hB","hb","h"]};function $(e){var t=e.hourCycle;if(void 0===t&&e.hourCycles&&e.hourCycles.length&&(t=e.hourCycles[0]),t)switch(t){case"h24":return"k";case"h23":return"H";case"h12":return"h";case"h11":return"K";default:throw new Error("Invalid hourCycle")}var n,r=e.language;return"root"!==r&&(n=e.maximize().region),(W[n||""]||W[r||""]||W["".concat(r,"-001")]||W["001"])[0]}var Y=new RegExp("^".concat(N.source,"*")),Q=new RegExp("".concat(N.source,"*$"));function K(e,t){return{start:e,end:t}}var X=!!String.prototype.startsWith&&"_a".startsWith("a",1),Z=!!String.fromCodePoint,q=!!Object.fromEntries,J=!!String.prototype.codePointAt,ee=!!String.prototype.trimStart,te=!!String.prototype.trimEnd,ne=Number.isSafeInteger?Number.isSafeInteger:function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e&&Math.abs(e)<=9007199254740991},re=!0;try{re="a"===(null===(V=fe("([^\\p{White_Space}\\p{Pattern_Syntax}]*)","yu").exec("a"))||void 0===V?void 0:V[0])}catch(e){re=!1}var ae,le=X?function(e,t,n){return e.startsWith(t,n)}:function(e,t,n){return e.slice(n,n+t.length)===t},oe=Z?String.fromCodePoint:function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var n,r="",a=e.length,l=0;a>l;){if((n=e[l++])>1114111)throw RangeError(n+" is not a valid code point");r+=n<65536?String.fromCharCode(n):String.fromCharCode(55296+((n-=65536)>>10),n%1024+56320)}return r},ie=q?Object.fromEntries:function(e){for(var t={},n=0,r=e;n<r.length;n++){var a=r[n],l=a[0],o=a[1];t[l]=o}return t},se=J?function(e,t){return e.codePointAt(t)}:function(e,t){var n=e.length;if(!(t<0||t>=n)){var r,a=e.charCodeAt(t);return a<55296||a>56319||t+1===n||(r=e.charCodeAt(t+1))<56320||r>57343?a:r-56320+(a-55296<<10)+65536}},ue=ee?function(e){return e.trimStart()}:function(e){return e.replace(Y,"")},ce=te?function(e){return e.trimEnd()}:function(e){return e.replace(Q,"")};function fe(e,t){return new RegExp(e,t)}if(re){var de=fe("([^\\p{White_Space}\\p{Pattern_Syntax}]*)","yu");ae=function(e,t){var n;return de.lastIndex=t,null!==(n=de.exec(e)[1])&&void 0!==n?n:""}}else ae=function(e,t){for(var n=[];;){var r=se(e,t);if(void 0===r||ge(r)||ye(r))break;n.push(r),t+=r>=65536?2:1}return oe.apply(void 0,n)};var pe,he=function(){function e(e,t){void 0===t&&(t={}),this.message=e,this.position={offset:0,line:1,column:1},this.ignoreTag=!!t.ignoreTag,this.locale=t.locale,this.requiresOtherClause=!!t.requiresOtherClause,this.shouldParseSkeletons=!!t.shouldParseSkeletons}return e.prototype.parse=function(){if(0!==this.offset())throw Error("parser can only be used once");return this.parseMessage(0,"",!1)},e.prototype.parseMessage=function(e,t,n){for(var r=[];!this.isEOF();){var a=this.char();if(123===a){if((l=this.parseArgument(e,n)).err)return l;r.push(l.val)}else{if(125===a&&e>0)break;if(35!==a||"plural"!==t&&"selectordinal"!==t){if(60===a&&!this.ignoreTag&&47===this.peek()){if(n)break;return this.error(m.UNMATCHED_CLOSING_TAG,K(this.clonePosition(),this.clonePosition()))}if(60===a&&!this.ignoreTag&&me(this.peek()||0)){if((l=this.parseTag(e,t)).err)return l;r.push(l.val)}else{var l;if((l=this.parseLiteral(e,t)).err)return l;r.push(l.val)}}else{var o=this.clonePosition();this.bump(),r.push({type:g.pound,location:K(o,this.clonePosition())})}}}return{val:r,err:null}},e.prototype.parseTag=function(e,t){var n=this.clonePosition();this.bump();var r=this.parseTagName();if(this.bumpSpace(),this.bumpIf("/>"))return{val:{type:g.literal,value:"<".concat(r,"/>"),location:K(n,this.clonePosition())},err:null};if(this.bumpIf(">")){var a=this.parseMessage(e+1,t,!0);if(a.err)return a;var l=a.val,o=this.clonePosition();if(this.bumpIf("</")){if(this.isEOF()||!me(this.char()))return this.error(m.INVALID_TAG,K(o,this.clonePosition()));var i=this.clonePosition();return r!==this.parseTagName()?this.error(m.UNMATCHED_CLOSING_TAG,K(i,this.clonePosition())):(this.bumpSpace(),this.bumpIf(">")?{val:{type:g.tag,value:r,children:l,location:K(n,this.clonePosition())},err:null}:this.error(m.INVALID_TAG,K(o,this.clonePosition())))}return this.error(m.UNCLOSED_TAG,K(n,this.clonePosition()))}return this.error(m.INVALID_TAG,K(n,this.clonePosition()))},e.prototype.parseTagName=function(){var e,t=this.offset();for(this.bump();!this.isEOF()&&(45===(e=this.char())||46===e||e>=48&&e<=57||95===e||e>=97&&e<=122||e>=65&&e<=90||183==e||e>=192&&e<=214||e>=216&&e<=246||e>=248&&e<=893||e>=895&&e<=8191||e>=8204&&e<=8205||e>=8255&&e<=8256||e>=8304&&e<=8591||e>=11264&&e<=12271||e>=12289&&e<=55295||e>=63744&&e<=64975||e>=65008&&e<=65533||e>=65536&&e<=983039);)this.bump();return this.message.slice(t,this.offset())},e.prototype.parseLiteral=function(e,t){for(var n=this.clonePosition(),r="";;){var a=this.tryParseQuote(t);if(a)r+=a;else{var l=this.tryParseUnquoted(e,t);if(l)r+=l;else{var o=this.tryParseLeftAngleBracket();if(!o)break;r+=o}}}var i=K(n,this.clonePosition());return{val:{type:g.literal,value:r,location:i},err:null}},e.prototype.tryParseLeftAngleBracket=function(){return this.isEOF()||60!==this.char()||!this.ignoreTag&&(me(e=this.peek()||0)||47===e)?null:(this.bump(),"<");var e},e.prototype.tryParseQuote=function(e){if(this.isEOF()||39!==this.char())return null;switch(this.peek()){case 39:return this.bump(),this.bump(),"'";case 123:case 60:case 62:case 125:break;case 35:if("plural"===e||"selectordinal"===e)break;return null;default:return null}this.bump();var t=[this.char()];for(this.bump();!this.isEOF();){var n=this.char();if(39===n){if(39!==this.peek()){this.bump();break}t.push(39),this.bump()}else t.push(n);this.bump()}return oe.apply(void 0,t)},e.prototype.tryParseUnquoted=function(e,t){if(this.isEOF())return null;var n=this.char();return 60===n||123===n||35===n&&("plural"===t||"selectordinal"===t)||125===n&&e>0?null:(this.bump(),oe(n))},e.prototype.parseArgument=function(e,t){var n=this.clonePosition();if(this.bump(),this.bumpSpace(),this.isEOF())return this.error(m.EXPECT_ARGUMENT_CLOSING_BRACE,K(n,this.clonePosition()));if(125===this.char())return this.bump(),this.error(m.EMPTY_ARGUMENT,K(n,this.clonePosition()));var r=this.parseIdentifierIfPossible().value;if(!r)return this.error(m.MALFORMED_ARGUMENT,K(n,this.clonePosition()));if(this.bumpSpace(),this.isEOF())return this.error(m.EXPECT_ARGUMENT_CLOSING_BRACE,K(n,this.clonePosition()));switch(this.char()){case 125:return this.bump(),{val:{type:g.argument,value:r,location:K(n,this.clonePosition())},err:null};case 44:return this.bump(),this.bumpSpace(),this.isEOF()?this.error(m.EXPECT_ARGUMENT_CLOSING_BRACE,K(n,this.clonePosition())):this.parseArgumentOptions(e,t,r,n);default:return this.error(m.MALFORMED_ARGUMENT,K(n,this.clonePosition()))}},e.prototype.parseIdentifierIfPossible=function(){var e=this.clonePosition(),t=this.offset(),n=ae(this.message,t),r=t+n.length;return this.bumpTo(r),{value:n,location:K(e,this.clonePosition())}},e.prototype.parseArgumentOptions=function(e,t,n,r){var l,o=this.clonePosition(),i=this.parseIdentifierIfPossible().value,s=this.clonePosition();switch(i){case"":return this.error(m.EXPECT_ARGUMENT_TYPE,K(o,s));case"number":case"date":case"time":this.bumpSpace();var u=null;if(this.bumpIf(",")){this.bumpSpace();var c=this.clonePosition();if((_=this.parseSimpleArgStyleIfPossible()).err)return _;if(0===(h=ce(_.val)).length)return this.error(m.EXPECT_ARGUMENT_STYLE,K(this.clonePosition(),this.clonePosition()));u={style:h,styleLocation:K(c,this.clonePosition())}}if((E=this.tryParseArgumentClose(r)).err)return E;var f=K(r,this.clonePosition());if(u&&le(null==u?void 0:u.style,"::",0)){var d=ue(u.style.slice(2));if("number"===i)return(_=this.parseNumberSkeletonFromString(d,u.styleLocation)).err?_:{val:{type:g.number,value:n,location:f,style:_.val},err:null};if(0===d.length)return this.error(m.EXPECT_DATE_TIME_SKELETON,f);var p=d;this.locale&&(p=function(e,t){for(var n="",r=0;r<e.length;r++){var a=e.charAt(r);if("j"===a){for(var l=0;r+1<e.length&&e.charAt(r+1)===a;)l++,r++;var o=1+(1&l),i=l<2?1:3+(l>>1),s=$(t);for("H"!=s&&"k"!=s||(i=0);i-- >0;)n+="a";for(;o-- >0;)n=s+n}else n+="J"===a?"H":a}return n}(d,this.locale));var h={type:y.dateTime,pattern:p,location:u.styleLocation,parsedOptions:this.shouldParseSkeletons?L(p):{}};return{val:{type:"date"===i?g.date:g.time,value:n,location:f,style:h},err:null}}return{val:{type:"number"===i?g.number:"date"===i?g.date:g.time,value:n,location:f,style:null!==(l=null==u?void 0:u.style)&&void 0!==l?l:null},err:null};case"plural":case"selectordinal":case"select":var v=this.clonePosition();if(this.bumpSpace(),!this.bumpIf(","))return this.error(m.EXPECT_SELECT_ARGUMENT_OPTIONS,K(v,a({},v)));this.bumpSpace();var b=this.parseIdentifierIfPossible(),A=0;if("select"!==i&&"offset"===b.value){if(!this.bumpIf(":"))return this.error(m.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE,K(this.clonePosition(),this.clonePosition()));var _;if(this.bumpSpace(),(_=this.tryParseDecimalInteger(m.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE,m.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE)).err)return _;this.bumpSpace(),b=this.parseIdentifierIfPossible(),A=_.val}var E,w=this.tryParsePluralOrSelectOptions(e,i,t,b);if(w.err)return w;if((E=this.tryParseArgumentClose(r)).err)return E;var C=K(r,this.clonePosition());return"select"===i?{val:{type:g.select,value:n,options:ie(w.val),location:C},err:null}:{val:{type:g.plural,value:n,options:ie(w.val),offset:A,pluralType:"plural"===i?"cardinal":"ordinal",location:C},err:null};default:return this.error(m.INVALID_ARGUMENT_TYPE,K(o,s))}},e.prototype.tryParseArgumentClose=function(e){return this.isEOF()||125!==this.char()?this.error(m.EXPECT_ARGUMENT_CLOSING_BRACE,K(e,this.clonePosition())):(this.bump(),{val:!0,err:null})},e.prototype.parseSimpleArgStyleIfPossible=function(){for(var e=0,t=this.clonePosition();!this.isEOF();)switch(this.char()){case 39:this.bump();var n=this.clonePosition();if(!this.bumpUntil("'"))return this.error(m.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE,K(n,this.clonePosition()));this.bump();break;case 123:e+=1,this.bump();break;case 125:if(!(e>0))return{val:this.message.slice(t.offset,this.offset()),err:null};e-=1;break;default:this.bump()}return{val:this.message.slice(t.offset,this.offset()),err:null}},e.prototype.parseNumberSkeletonFromString=function(e,t){var n=[];try{n=function(e){if(0===e.length)throw new Error("Number skeleton cannot be empty");for(var t=[],n=0,r=e.split(M).filter((function(e){return e.length>0}));n<r.length;n++){var a=r[n].split("/");if(0===a.length)throw new Error("Invalid number skeleton");for(var l=a[0],o=a.slice(1),i=0,s=o;i<s.length;i++)if(0===s[i].length)throw new Error("Invalid number skeleton");t.push({stem:l,options:o})}return t}(e)}catch(e){return this.error(m.INVALID_NUMBER_SKELETON,t)}return{val:{type:y.number,tokens:n,location:t,parsedOptions:this.shouldParseSkeletons?j(n):{}},err:null}},e.prototype.tryParsePluralOrSelectOptions=function(e,t,n,r){for(var a,l=!1,o=[],i=new Set,s=r.value,u=r.location;;){if(0===s.length){var c=this.clonePosition();if("select"===t||!this.bumpIf("="))break;var f=this.tryParseDecimalInteger(m.EXPECT_PLURAL_ARGUMENT_SELECTOR,m.INVALID_PLURAL_ARGUMENT_SELECTOR);if(f.err)return f;u=K(c,this.clonePosition()),s=this.message.slice(c.offset,this.offset())}if(i.has(s))return this.error("select"===t?m.DUPLICATE_SELECT_ARGUMENT_SELECTOR:m.DUPLICATE_PLURAL_ARGUMENT_SELECTOR,u);"other"===s&&(l=!0),this.bumpSpace();var d=this.clonePosition();if(!this.bumpIf("{"))return this.error("select"===t?m.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT:m.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT,K(this.clonePosition(),this.clonePosition()));var p=this.parseMessage(e+1,t,n);if(p.err)return p;var h=this.tryParseArgumentClose(d);if(h.err)return h;o.push([s,{value:p.val,location:K(d,this.clonePosition())}]),i.add(s),this.bumpSpace(),s=(a=this.parseIdentifierIfPossible()).value,u=a.location}return 0===o.length?this.error("select"===t?m.EXPECT_SELECT_ARGUMENT_SELECTOR:m.EXPECT_PLURAL_ARGUMENT_SELECTOR,K(this.clonePosition(),this.clonePosition())):this.requiresOtherClause&&!l?this.error(m.MISSING_OTHER_CLAUSE,K(this.clonePosition(),this.clonePosition())):{val:o,err:null}},e.prototype.tryParseDecimalInteger=function(e,t){var n=1,r=this.clonePosition();this.bumpIf("+")||this.bumpIf("-")&&(n=-1);for(var a=!1,l=0;!this.isEOF();){var o=this.char();if(!(o>=48&&o<=57))break;a=!0,l=10*l+(o-48),this.bump()}var i=K(r,this.clonePosition());return a?ne(l*=n)?{val:l,err:null}:this.error(t,i):this.error(e,i)},e.prototype.offset=function(){return this.position.offset},e.prototype.isEOF=function(){return this.offset()===this.message.length},e.prototype.clonePosition=function(){return{offset:this.position.offset,line:this.position.line,column:this.position.column}},e.prototype.char=function(){var e=this.position.offset;if(e>=this.message.length)throw Error("out of bound");var t=se(this.message,e);if(void 0===t)throw Error("Offset ".concat(e," is at invalid UTF-16 code unit boundary"));return t},e.prototype.error=function(e,t){return{val:null,err:{kind:e,message:this.message,location:t}}},e.prototype.bump=function(){if(!this.isEOF()){var e=this.char();10===e?(this.position.line+=1,this.position.column=1,this.position.offset+=1):(this.position.column+=1,this.position.offset+=e<65536?1:2)}},e.prototype.bumpIf=function(e){if(le(this.message,e,this.offset())){for(var t=0;t<e.length;t++)this.bump();return!0}return!1},e.prototype.bumpUntil=function(e){var t=this.offset(),n=this.message.indexOf(e,t);return n>=0?(this.bumpTo(n),!0):(this.bumpTo(this.message.length),!1)},e.prototype.bumpTo=function(e){if(this.offset()>e)throw Error("targetOffset ".concat(e," must be greater than or equal to the current offset ").concat(this.offset()));for(e=Math.min(e,this.message.length);;){var t=this.offset();if(t===e)break;if(t>e)throw Error("targetOffset ".concat(e," is at invalid UTF-16 code unit boundary"));if(this.bump(),this.isEOF())break}},e.prototype.bumpSpace=function(){for(;!this.isEOF()&&ge(this.char());)this.bump()},e.prototype.peek=function(){if(this.isEOF())return null;var e=this.char(),t=this.offset(),n=this.message.charCodeAt(t+(e>=65536?2:1));return null!=n?n:null},e}();function me(e){return e>=97&&e<=122||e>=65&&e<=90}function ge(e){return e>=9&&e<=13||32===e||133===e||e>=8206&&e<=8207||8232===e||8233===e}function ye(e){return e>=33&&e<=35||36===e||e>=37&&e<=39||40===e||41===e||42===e||43===e||44===e||45===e||e>=46&&e<=47||e>=58&&e<=59||e>=60&&e<=62||e>=63&&e<=64||91===e||92===e||93===e||94===e||96===e||123===e||124===e||125===e||126===e||161===e||e>=162&&e<=165||166===e||167===e||169===e||171===e||172===e||174===e||176===e||177===e||182===e||187===e||191===e||215===e||247===e||e>=8208&&e<=8213||e>=8214&&e<=8215||8216===e||8217===e||8218===e||e>=8219&&e<=8220||8221===e||8222===e||8223===e||e>=8224&&e<=8231||e>=8240&&e<=8248||8249===e||8250===e||e>=8251&&e<=8254||e>=8257&&e<=8259||8260===e||8261===e||8262===e||e>=8263&&e<=8273||8274===e||8275===e||e>=8277&&e<=8286||e>=8592&&e<=8596||e>=8597&&e<=8601||e>=8602&&e<=8603||e>=8604&&e<=8607||8608===e||e>=8609&&e<=8610||8611===e||e>=8612&&e<=8613||8614===e||e>=8615&&e<=8621||8622===e||e>=8623&&e<=8653||e>=8654&&e<=8655||e>=8656&&e<=8657||8658===e||8659===e||8660===e||e>=8661&&e<=8691||e>=8692&&e<=8959||e>=8960&&e<=8967||8968===e||8969===e||8970===e||8971===e||e>=8972&&e<=8991||e>=8992&&e<=8993||e>=8994&&e<=9e3||9001===e||9002===e||e>=9003&&e<=9083||9084===e||e>=9085&&e<=9114||e>=9115&&e<=9139||e>=9140&&e<=9179||e>=9180&&e<=9185||e>=9186&&e<=9254||e>=9255&&e<=9279||e>=9280&&e<=9290||e>=9291&&e<=9311||e>=9472&&e<=9654||9655===e||e>=9656&&e<=9664||9665===e||e>=9666&&e<=9719||e>=9720&&e<=9727||e>=9728&&e<=9838||9839===e||e>=9840&&e<=10087||10088===e||10089===e||10090===e||10091===e||10092===e||10093===e||10094===e||10095===e||10096===e||10097===e||10098===e||10099===e||10100===e||10101===e||e>=10132&&e<=10175||e>=10176&&e<=10180||10181===e||10182===e||e>=10183&&e<=10213||10214===e||10215===e||10216===e||10217===e||10218===e||10219===e||10220===e||10221===e||10222===e||10223===e||e>=10224&&e<=10239||e>=10240&&e<=10495||e>=10496&&e<=10626||10627===e||10628===e||10629===e||10630===e||10631===e||10632===e||10633===e||10634===e||10635===e||10636===e||10637===e||10638===e||10639===e||10640===e||10641===e||10642===e||10643===e||10644===e||10645===e||10646===e||10647===e||10648===e||e>=10649&&e<=10711||10712===e||10713===e||10714===e||10715===e||e>=10716&&e<=10747||10748===e||10749===e||e>=10750&&e<=11007||e>=11008&&e<=11055||e>=11056&&e<=11076||e>=11077&&e<=11078||e>=11079&&e<=11084||e>=11085&&e<=11123||e>=11124&&e<=11125||e>=11126&&e<=11157||11158===e||e>=11159&&e<=11263||e>=11776&&e<=11777||11778===e||11779===e||11780===e||11781===e||e>=11782&&e<=11784||11785===e||11786===e||11787===e||11788===e||11789===e||e>=11790&&e<=11798||11799===e||e>=11800&&e<=11801||11802===e||11803===e||11804===e||11805===e||e>=11806&&e<=11807||11808===e||11809===e||11810===e||11811===e||11812===e||11813===e||11814===e||11815===e||11816===e||11817===e||e>=11818&&e<=11822||11823===e||e>=11824&&e<=11833||e>=11834&&e<=11835||e>=11836&&e<=11839||11840===e||11841===e||11842===e||e>=11843&&e<=11855||e>=11856&&e<=11857||11858===e||e>=11859&&e<=11903||e>=12289&&e<=12291||12296===e||12297===e||12298===e||12299===e||12300===e||12301===e||12302===e||12303===e||12304===e||12305===e||e>=12306&&e<=12307||12308===e||12309===e||12310===e||12311===e||12312===e||12313===e||12314===e||12315===e||12316===e||12317===e||e>=12318&&e<=12319||12320===e||12336===e||64830===e||64831===e||e>=65093&&e<=65094}function ve(e){e.forEach((function(e){if(delete e.location,S(e)||k(e))for(var t in e.options)delete e.options[t].location,ve(e.options[t].value);else E(e)&&B(e.style)||(w(e)||C(e))&&x(e.style)?delete e.style.location:T(e)&&ve(e.children)}))}function be(e,t){void 0===t&&(t={}),t=a({shouldParseSkeletons:!0,requiresOtherClause:!0},t);var n=new he(e,t).parse();if(n.err){var r=SyntaxError(m[n.err.kind]);throw r.location=n.err.location,r.originalMessage=n.err.message,r}return(null==t?void 0:t.captureLocation)||ve(n.val),n.val}!function(e){e.MISSING_VALUE="MISSING_VALUE",e.INVALID_VALUE="INVALID_VALUE",e.MISSING_INTL_API="MISSING_INTL_API"}(pe||(pe={}));var Ae,_e=function(e){function t(t,n,r){var a=e.call(this,t)||this;return a.code=n,a.originalMessage=r,a}return r(t,e),t.prototype.toString=function(){return"[formatjs Error: ".concat(this.code,"] ").concat(this.message)},t}(Error),Ee=function(e){function t(t,n,r,a){return e.call(this,'Invalid values for "'.concat(t,'": "').concat(n,'". Options are "').concat(Object.keys(r).join('", "'),'"'),pe.INVALID_VALUE,a)||this}return r(t,e),t}(_e),we=function(e){function t(t,n,r){return e.call(this,'Value for "'.concat(t,'" must be of type ').concat(n),pe.INVALID_VALUE,r)||this}return r(t,e),t}(_e),Ce=function(e){function t(t,n){return e.call(this,'The intl string context variable "'.concat(t,'" was not provided to the string "').concat(n,'"'),pe.MISSING_VALUE,n)||this}return r(t,e),t}(_e);function Se(e){return"function"==typeof e}function ke(e,t,n,r,a,l,o){if(1===e.length&&A(e[0]))return[{type:Ae.literal,value:e[0].value}];for(var i=[],s=0,u=e;s<u.length;s++){var c=u[s];if(A(c))i.push({type:Ae.literal,value:c.value});else if(I(c))"number"==typeof l&&i.push({type:Ae.literal,value:n.getNumberFormat(t).format(l)});else{var f=c.value;if(!a||!(f in a))throw new Ce(f,o);var d=a[f];if(_(c))d&&"string"!=typeof d&&"number"!=typeof d||(d="string"==typeof d||"number"==typeof d?String(d):""),i.push({type:"string"==typeof d?Ae.literal:Ae.object,value:d});else if(w(c)){var p="string"==typeof c.style?r.date[c.style]:x(c.style)?c.style.parsedOptions:void 0;i.push({type:Ae.literal,value:n.getDateTimeFormat(t,p).format(d)})}else if(C(c))p="string"==typeof c.style?r.time[c.style]:x(c.style)?c.style.parsedOptions:r.time.medium,i.push({type:Ae.literal,value:n.getDateTimeFormat(t,p).format(d)});else if(E(c))(p="string"==typeof c.style?r.number[c.style]:B(c.style)?c.style.parsedOptions:void 0)&&p.scale&&(d*=p.scale||1),i.push({type:Ae.literal,value:n.getNumberFormat(t,p).format(d)});else{if(T(c)){var h=c.children,m=c.value,g=a[m];if(!Se(g))throw new we(m,"function",o);var y=g(ke(h,t,n,r,a,l).map((function(e){return e.value})));Array.isArray(y)||(y=[y]),i.push.apply(i,y.map((function(e){return{type:"string"==typeof e?Ae.literal:Ae.object,value:e}})))}if(S(c)){if(!(v=c.options[d]||c.options.other))throw new Ee(c.value,d,Object.keys(c.options),o);i.push.apply(i,ke(v.value,t,n,r,a))}else if(k(c)){var v;if(!(v=c.options["=".concat(d)])){if(!Intl.PluralRules)throw new _e('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n',pe.MISSING_INTL_API,o);var b=n.getPluralRules(t,{type:c.pluralType}).select(d-(c.offset||0));v=c.options[b]||c.options.other}if(!v)throw new Ee(c.value,d,Object.keys(c.options),o);i.push.apply(i,ke(v.value,t,n,r,a,d-(c.offset||0)))}}}}return(N=i).length<2?N:N.reduce((function(e,t){var n=e[e.length-1];return n&&n.type===Ae.literal&&t.type===Ae.literal?n.value+=t.value:e.push(t),e}),[]);var N}function Ie(e){return{create:function(){return{get:function(t){return e[t]},set:function(t,n){e[t]=n}}}}}!function(e){e[e.literal=0]="literal",e[e.object=1]="object"}(Ae||(Ae={}));var Te,Be=function(){function e(t,n,r,o){void 0===n&&(n=e.defaultLocale);var u,c,f,d=this;if(this.formatterCache={number:{},dateTime:{},pluralRules:{}},this.format=function(e){var t=d.formatToParts(e);if(1===t.length)return t[0].value;var n=t.reduce((function(e,t){return e.length&&t.type===Ae.literal&&"string"==typeof e[e.length-1]?e[e.length-1]+=t.value:e.push(t.value),e}),[]);return n.length<=1?n[0]||"":n},this.formatToParts=function(e){return ke(d.ast,d.locales,d.formatters,d.formats,e,void 0,d.message)},this.resolvedOptions=function(){var e;return{locale:(null===(e=d.resolvedLocale)||void 0===e?void 0:e.toString())||Intl.NumberFormat.supportedLocalesOf(d.locales)[0]}},this.getAst=function(){return d.ast},this.locales=n,this.resolvedLocale=e.resolveLocale(n),"string"==typeof t){if(this.message=t,!e.__parse)throw new TypeError("IntlMessageFormat.__parse must be set to process `message` of type `string`");var p=o||{},h=(p.formatters,l(p,["formatters"]));this.ast=e.__parse(t,a(a({},h),{locale:this.resolvedLocale}))}else this.ast=t;if(!Array.isArray(this.ast))throw new TypeError("A message must be provided as a String or AST.");this.formats=(c=e.formats,(f=r)?Object.keys(c).reduce((function(e,t){var n,r;return e[t]=(n=c[t],(r=f[t])?a(a(a({},n||{}),r||{}),Object.keys(n).reduce((function(e,t){return e[t]=a(a({},n[t]),r[t]||{}),e}),{})):n),e}),a({},c)):c),this.formatters=o&&o.formatters||(void 0===(u=this.formatterCache)&&(u={number:{},dateTime:{},pluralRules:{}}),{getNumberFormat:s((function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.NumberFormat).bind.apply(e,i([void 0],t,!1)))}),{cache:Ie(u.number),strategy:b.variadic}),getDateTimeFormat:s((function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.DateTimeFormat).bind.apply(e,i([void 0],t,!1)))}),{cache:Ie(u.dateTime),strategy:b.variadic}),getPluralRules:s((function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.PluralRules).bind.apply(e,i([void 0],t,!1)))}),{cache:Ie(u.pluralRules),strategy:b.variadic})})}return Object.defineProperty(e,"defaultLocale",{get:function(){return e.memoizedDefaultLocale||(e.memoizedDefaultLocale=(new Intl.NumberFormat).resolvedOptions().locale),e.memoizedDefaultLocale},enumerable:!1,configurable:!0}),e.memoizedDefaultLocale=null,e.resolveLocale=function(e){if(void 0!==Intl.Locale){var t=Intl.NumberFormat.supportedLocalesOf(e);return t.length>0?new Intl.Locale(t[0]):new Intl.Locale("string"==typeof e?e:e[0])}},e.__parse=be,e.formats={number:{integer:{maximumFractionDigits:0},currency:{style:"currency"},percent:{style:"percent"}},date:{short:{month:"numeric",day:"numeric",year:"2-digit"},medium:{month:"short",day:"numeric",year:"numeric"},long:{month:"long",day:"numeric",year:"numeric"},full:{weekday:"long",month:"long",day:"numeric",year:"numeric"}},time:{short:{hour:"numeric",minute:"numeric"},medium:{hour:"numeric",minute:"numeric",second:"numeric"},long:{hour:"numeric",minute:"numeric",second:"numeric",timeZoneName:"short"},full:{hour:"numeric",minute:"numeric",second:"numeric",timeZoneName:"short"}}},e}();!function(e){e.FORMAT_ERROR="FORMAT_ERROR",e.UNSUPPORTED_FORMATTER="UNSUPPORTED_FORMATTER",e.INVALID_CONFIG="INVALID_CONFIG",e.MISSING_DATA="MISSING_DATA",e.MISSING_TRANSLATION="MISSING_TRANSLATION"}(Te||(Te={}));var xe=function(e){function t(n,r,a){var l=this,o=a?a instanceof Error?a:new Error(String(a)):void 0;return(l=e.call(this,"[@formatjs/intl Error ".concat(n,"] ").concat(r,"\n").concat(o?"\n".concat(o.message,"\n").concat(o.stack):""))||this).code=n,"function"==typeof Error.captureStackTrace&&Error.captureStackTrace(l,t),l}return r(t,e),t}(Error),Ne=function(e){function t(t,n){return e.call(this,Te.UNSUPPORTED_FORMATTER,t,n)||this}return r(t,e),t}(xe),Pe=function(e){function t(t,n){return e.call(this,Te.INVALID_CONFIG,t,n)||this}return r(t,e),t}(xe),Le=function(e){function t(t,n){return e.call(this,Te.MISSING_DATA,t,n)||this}return r(t,e),t}(xe),Me=function(e){function t(t,n,r){var a=e.call(this,Te.FORMAT_ERROR,"".concat(t,"\nLocale: ").concat(n,"\n"),r)||this;return a.locale=n,a}return r(t,e),t}(xe),Re=function(e){function t(t,n,r,a){var l=e.call(this,"".concat(t,"\nMessageID: ").concat(null==r?void 0:r.id,"\nDefault Message: ").concat(null==r?void 0:r.defaultMessage,"\nDescription: ").concat(null==r?void 0:r.description,"\n"),n,a)||this;return l.descriptor=r,l.locale=n,l}return r(t,e),t}(Me),Oe=function(e){function t(t,n){var r=e.call(this,Te.MISSING_TRANSLATION,'Missing message: "'.concat(t.id,'" for locale "').concat(n,'", using ').concat(t.defaultMessage?"default message (".concat("string"==typeof t.defaultMessage?t.defaultMessage:t.defaultMessage.map((function(e){var t;return null!==(t=e.value)&&void 0!==t?t:JSON.stringify(e)})).join(),")"):"id"," as fallback."))||this;return r.descriptor=t,r}return r(t,e),t}(xe);function He(e,t,n){return void 0===n&&(n={}),t.reduce((function(t,r){return r in e?t[r]=e[r]:r in n&&(t[r]=n[r]),t}),{})}var De={formats:{},messages:{},timeZone:void 0,defaultLocale:"en",defaultFormats:{},fallbackOnEmptyString:!0,onError:function(e){},onWarn:function(e){}};function ze(e){return{create:function(){return{get:function(t){return e[t]},set:function(t,n){e[t]=n}}}}}function Ue(e,t,n,r){var a,l=e&&e[t];if(l&&(a=l[n]),a)return a;r(new Ne("No ".concat(t," format named: ").concat(n)))}function Fe(e,t,n){if(void 0===n&&(n=Error),!e)throw new n(t)}function Ge(e){Fe(e,"[React Intl] Could not find required `intl` object. <IntlProvider> needs to exist in the component ancestry.")}s((function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.NumberFormat).bind.apply(e,i([void 0],t,!1)))}),{strategy:b.variadic}),s((function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.DateTimeFormat).bind.apply(e,i([void 0],t,!1)))}),{strategy:b.variadic}),s((function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.PluralRules).bind.apply(e,i([void 0],t,!1)))}),{strategy:b.variadic}),s((function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.Locale).bind.apply(e,i([void 0],t,!1)))}),{strategy:b.variadic}),s((function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.ListFormat).bind.apply(e,i([void 0],t,!1)))}),{strategy:b.variadic});var je=a(a({},De),{textComponent:e.Fragment});function Ve(e,t){if(e===t)return!0;if(!e||!t)return!1;var n=Object.keys(e),r=Object.keys(t),a=n.length;if(r.length!==a)return!1;for(var l=0;l<a;l++){var o=n[l];if(e[o]!==t[o]||!Object.prototype.hasOwnProperty.call(t,o))return!1}return!0}o(146);var We="undefined"==typeof window||window.__REACT_INTL_BYPASS_GLOBAL_CONTEXT__?e.createContext(null):window.__REACT_INTL_CONTEXT__||(window.__REACT_INTL_CONTEXT__=e.createContext(null)),$e=(We.Consumer,We.Provider),Ye=We;function Qe(e,t){return Object.keys(e).reduce((function(n,r){return n[r]=a({timeZone:t},e[r]),n}),{})}function Ke(e,t){return Object.keys(a(a({},e),t)).reduce((function(n,r){return n[r]=a(a({},e[r]||{}),t[r]||{}),n}),{})}function Xe(e,t){if(!t)return e;var n=Be.formats;return a(a(a({},n),e),{date:Ke(Qe(n.date,t),Qe(e.date||{},t)),time:Ke(Qe(n.time,t),Qe(e.time||{},t))})}var Ze=function(e,t,n,r,l){var o=e.locale,i=e.formats,s=e.messages,u=e.defaultLocale,c=e.defaultFormats,f=e.fallbackOnEmptyString,d=e.onError,p=e.timeZone,h=e.defaultRichTextElements;void 0===n&&(n={id:""});var m=n.id,y=n.defaultMessage;Fe(!!m,"[@formatjs/intl] An `id` must be provided to format a message. You can either:\n1. Configure your build toolchain with [babel-plugin-formatjs](https://formatjs.io/docs/tooling/babel-plugin)\nor [@formatjs/ts-transformer](https://formatjs.io/docs/tooling/ts-transformer) OR\n2. Configure your `eslint` config to include [eslint-plugin-formatjs](https://formatjs.io/docs/tooling/linter#enforce-id)\nto autofix this issue");var v=String(m),b=s&&Object.prototype.hasOwnProperty.call(s,v)&&s[v];if(Array.isArray(b)&&1===b.length&&b[0].type===g.literal)return b[0].value;if(!r&&b&&"string"==typeof b&&!h)return b.replace(/'\{(.*?)\}'/gi,"{$1}");if(r=a(a({},h),r||{}),i=Xe(i,p),c=Xe(c,p),!b){if(!1===f&&""===b)return b;if((!y||o&&o.toLowerCase()!==u.toLowerCase())&&d(new Oe(n,o)),y)try{return t.getMessageFormat(y,u,c,l).format(r)}catch(e){return d(new Re('Error formatting default message for: "'.concat(v,'", rendering default message verbatim'),o,n,e)),"string"==typeof y?y:v}return v}try{return t.getMessageFormat(b,o,i,a({formatters:t},l||{})).format(r)}catch(e){d(new Re('Error formatting message: "'.concat(v,'", using ').concat(y?"default message":"id"," as fallback."),o,n,e))}if(y)try{return t.getMessageFormat(y,u,c,l).format(r)}catch(e){d(new Re('Error formatting the default message for: "'.concat(v,'", rendering message verbatim'),o,n,e))}return"string"==typeof b?b:"string"==typeof y?y:v},qe=["style","currency","unit","unitDisplay","useGrouping","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits","compactDisplay","currencyDisplay","currencySign","notation","signDisplay","unit","unitDisplay","numberingSystem","trailingZeroDisplay","roundingPriority","roundingIncrement","roundingMode"];function Je(e,t,n){var r=e.locale,a=e.formats,l=e.onError;void 0===n&&(n={});var o=n.format,i=o&&Ue(a,"number",o,l)||{};return t(r,He(n,qe,i))}function et(e,t,n,r){void 0===r&&(r={});try{return Je(e,t,r).format(n)}catch(t){e.onError(new Me("Error formatting number.",e.locale,t))}return String(n)}function tt(e,t,n,r){void 0===r&&(r={});try{return Je(e,t,r).formatToParts(n)}catch(t){e.onError(new Me("Error formatting number.",e.locale,t))}return[]}var nt=["numeric","style"];function rt(e,t,n,r,a){void 0===a&&(a={}),r||(r="second"),Intl.RelativeTimeFormat||e.onError(new _e('Intl.RelativeTimeFormat is not available in this environment.\nTry polyfilling it using "@formatjs/intl-relativetimeformat"\n',pe.MISSING_INTL_API));try{return function(e,t,n){var r=e.locale,a=e.formats,l=e.onError;void 0===n&&(n={});var o=n.format,i=!!o&&Ue(a,"relative",o,l)||{};return t(r,He(n,nt,i))}(e,t,a).format(n,r)}catch(t){e.onError(new Me("Error formatting relative time.",e.locale,t))}return String(n)}var at=["formatMatcher","timeZone","hour12","weekday","era","year","month","day","hour","minute","second","timeZoneName","hourCycle","dateStyle","timeStyle","calendar","numberingSystem","fractionalSecondDigits"];function lt(e,t,n,r){var l=e.locale,o=e.formats,i=e.onError,s=e.timeZone;void 0===r&&(r={});var u=r.format,c=a(a({},s&&{timeZone:s}),u&&Ue(o,t,u,i)),f=He(r,at,c);return"time"!==t||f.hour||f.minute||f.second||f.timeStyle||f.dateStyle||(f=a(a({},f),{hour:"numeric",minute:"numeric"})),n(l,f)}function ot(e,t){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];var a=n[0],l=n[1],o=void 0===l?{}:l,i="string"==typeof a?new Date(a||0):a;try{return lt(e,"date",t,o).format(i)}catch(t){e.onError(new Me("Error formatting date.",e.locale,t))}return String(i)}function it(e,t){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];var a=n[0],l=n[1],o=void 0===l?{}:l,i="string"==typeof a?new Date(a||0):a;try{return lt(e,"time",t,o).format(i)}catch(t){e.onError(new Me("Error formatting time.",e.locale,t))}return String(i)}function st(e,t){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];var a=n[0],l=n[1],o=n[2],i=void 0===o?{}:o,s=e.timeZone,u=e.locale,c=e.onError,f=He(i,at,s?{timeZone:s}:{});try{return t(u,f).formatRange(a,l)}catch(t){c(new Me("Error formatting date time range.",e.locale,t))}return String(a)}function ut(e,t){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];var a=n[0],l=n[1],o=void 0===l?{}:l,i="string"==typeof a?new Date(a||0):a;try{return lt(e,"date",t,o).formatToParts(i)}catch(t){e.onError(new Me("Error formatting date.",e.locale,t))}return[]}function ct(e,t){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];var a=n[0],l=n[1],o=void 0===l?{}:l,i="string"==typeof a?new Date(a||0):a;try{return lt(e,"time",t,o).formatToParts(i)}catch(t){e.onError(new Me("Error formatting time.",e.locale,t))}return[]}var ft=["type"];function dt(e,t,n,r){var a=e.locale,l=e.onError;void 0===r&&(r={}),Intl.PluralRules||l(new _e('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n',pe.MISSING_INTL_API));var o=He(r,ft);try{return t(a,o).select(n)}catch(e){l(new Me("Error formatting plural.",a,e))}return"other"}var pt=["type","style"],ht=Date.now();function mt(e,t,n,r){void 0===r&&(r={});var a=gt(e,t,n,r).reduce((function(e,t){var n=t.value;return"string"!=typeof n?e.push(n):"string"==typeof e[e.length-1]?e[e.length-1]+=n:e.push(n),e}),[]);return 1===a.length?a[0]:0===a.length?"":a}function gt(e,t,n,r){var l=e.locale,o=e.onError;void 0===r&&(r={}),Intl.ListFormat||o(new _e('Intl.ListFormat is not available in this environment.\nTry polyfilling it using "@formatjs/intl-listformat"\n',pe.MISSING_INTL_API));var i=He(r,pt);try{var s={},u=n.map((function(e,t){if("object"==typeof e){var n=function(e){return"".concat(ht,"_").concat(e,"_").concat(ht)}(t);return s[n]=e,n}return String(e)}));return t(l,i).formatToParts(u).map((function(e){return"literal"===e.type?e:a(a({},e),{value:s[e.value]||e.value})}))}catch(e){o(new Me("Error formatting list.",l,e))}return n}var yt=["style","type","fallback","languageDisplay"];function vt(e,t,n,r){var a=e.locale,l=e.onError;Intl.DisplayNames||l(new _e('Intl.DisplayNames is not available in this environment.\nTry polyfilling it using "@formatjs/intl-displaynames"\n',pe.MISSING_INTL_API));var o=He(r,yt);try{return t(a,o).of(n)}catch(e){l(new Me("Error formatting display name.",a,e))}}function bt(e,t){var n=function(e){void 0===e&&(e={dateTime:{},number:{},message:{},relativeTime:{},pluralRules:{},list:{},displayNames:{}});var t=Intl.RelativeTimeFormat,n=Intl.ListFormat,r=Intl.DisplayNames,l=s((function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.DateTimeFormat).bind.apply(e,i([void 0],t,!1)))}),{cache:ze(e.dateTime),strategy:b.variadic}),o=s((function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.NumberFormat).bind.apply(e,i([void 0],t,!1)))}),{cache:ze(e.number),strategy:b.variadic}),u=s((function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.PluralRules).bind.apply(e,i([void 0],t,!1)))}),{cache:ze(e.pluralRules),strategy:b.variadic});return{getDateTimeFormat:l,getNumberFormat:o,getMessageFormat:s((function(e,t,n,r){return new Be(e,t,n,a({formatters:{getNumberFormat:o,getDateTimeFormat:l,getPluralRules:u}},r||{}))}),{cache:ze(e.message),strategy:b.variadic}),getRelativeTimeFormat:s((function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return new(t.bind.apply(t,i([void 0],e,!1)))}),{cache:ze(e.relativeTime),strategy:b.variadic}),getPluralRules:u,getListFormat:s((function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return new(n.bind.apply(n,i([void 0],e,!1)))}),{cache:ze(e.list),strategy:b.variadic}),getDisplayNames:s((function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return new(r.bind.apply(r,i([void 0],e,!1)))}),{cache:ze(e.displayNames),strategy:b.variadic})}}(t),r=a(a({},De),e),l=r.locale,o=r.defaultLocale,u=r.onError;return l?!Intl.NumberFormat.supportedLocalesOf(l).length&&u?u(new Le('Missing locale data for locale: "'.concat(l,'" in Intl.NumberFormat. Using default locale: "').concat(o,'" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details'))):!Intl.DateTimeFormat.supportedLocalesOf(l).length&&u&&u(new Le('Missing locale data for locale: "'.concat(l,'" in Intl.DateTimeFormat. Using default locale: "').concat(o,'" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details'))):(u&&u(new Pe('"locale" was not configured, using "'.concat(o,'" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details'))),r.locale=r.defaultLocale||"en"),function(e){var t;e.onWarn&&e.defaultRichTextElements&&"string"==typeof((t=e.messages||{})?t[Object.keys(t)[0]]:void 0)&&e.onWarn('[@formatjs/intl] "defaultRichTextElements" was specified but "message" was not pre-compiled. \nPlease consider using "@formatjs/cli" to pre-compile your messages for performance.\nFor more details see https://formatjs.io/docs/getting-started/message-distribution')}(r),a(a({},r),{formatters:n,formatNumber:et.bind(null,r,n.getNumberFormat),formatNumberToParts:tt.bind(null,r,n.getNumberFormat),formatRelativeTime:rt.bind(null,r,n.getRelativeTimeFormat),formatDate:ot.bind(null,r,n.getDateTimeFormat),formatDateToParts:ut.bind(null,r,n.getDateTimeFormat),formatTime:it.bind(null,r,n.getDateTimeFormat),formatDateTimeRange:st.bind(null,r,n.getDateTimeFormat),formatTimeToParts:ct.bind(null,r,n.getDateTimeFormat),formatPlural:dt.bind(null,r,n.getPluralRules),formatMessage:Ze.bind(null,r,n),$t:Ze.bind(null,r,n),formatList:mt.bind(null,r,n.getListFormat),formatListToParts:gt.bind(null,r,n.getListFormat),formatDisplayName:vt.bind(null,r,n.getDisplayNames)})}function At(t){return t?Object.keys(t).reduce((function(n,r){var a,l=t[r];return n[r]=Se(l)?(a=l,function(t){return a(e.Children.toArray(t))}):l,n}),{}):t}var _t=function(t,n,r,a){for(var l=[],o=4;o<arguments.length;o++)l[o-4]=arguments[o];var s=At(a),u=Ze.apply(void 0,i([t,n,r,s],l,!1));return Array.isArray(u)?e.Children.toArray(u):u},Et=function(e,t){var n=e.defaultRichTextElements,r=l(e,["defaultRichTextElements"]),o=At(n),i=bt(a(a(a({},je),r),{defaultRichTextElements:o}),t),s={locale:i.locale,timeZone:i.timeZone,fallbackOnEmptyString:i.fallbackOnEmptyString,formats:i.formats,defaultLocale:i.defaultLocale,defaultFormats:i.defaultFormats,messages:i.messages,onError:i.onError,defaultRichTextElements:o};return a(a({},i),{formatMessage:_t.bind(null,s,i.formatters),$t:_t.bind(null,s,i.formatters)})};function wt(e){return{locale:e.locale,timeZone:e.timeZone,fallbackOnEmptyString:e.fallbackOnEmptyString,formats:e.formats,textComponent:e.textComponent,messages:e.messages,defaultLocale:e.defaultLocale,defaultFormats:e.defaultFormats,onError:e.onError,onWarn:e.onWarn,wrapRichTextChunksInFragment:e.wrapRichTextChunksInFragment,defaultRichTextElements:e.defaultRichTextElements}}var Ct=function(t){function n(){var e=null!==t&&t.apply(this,arguments)||this;return e.cache={dateTime:{},number:{},message:{},relativeTime:{},pluralRules:{},list:{},displayNames:{}},e.state={cache:e.cache,intl:Et(wt(e.props),e.cache),prevConfig:wt(e.props)},e}return r(n,t),n.getDerivedStateFromProps=function(e,t){var n=t.prevConfig,r=t.cache,a=wt(e);return Ve(n,a)?null:{intl:Et(a,r),prevConfig:a}},n.prototype.render=function(){return Ge(this.state.intl),e.createElement($e,{value:this.state.intl},this.props.children)},n.displayName="IntlProvider",n.defaultProps=je,n}(e.PureComponent);const St=Ct;function kt(){var t=e.useContext(Ye);return Ge(t),t}function It(t){var n=kt(),r=n.formatMessage,a=n.textComponent,l=void 0===a?e.Fragment:a,o=t.id,i=t.description,s=t.defaultMessage,u=t.values,c=t.children,f=t.tagName,d=void 0===f?l:f,p=r({id:o,description:i,defaultMessage:s},u,{ignoreTag:t.ignoreTag});return"function"==typeof c?c(Array.isArray(p)?p:[p]):d?e.createElement(d,null,e.Children.toArray(p)):e.createElement(e.Fragment,null,p)}It.displayName="FormattedMessage";var Tt=e.memo(It,(function(e,t){var n=e.values,r=l(e,["values"]),a=t.values,o=l(t,["values"]);return Ve(a,n)&&Ve(r,o)}));Tt.displayName="MemoizedFormattedMessage";const Bt=Tt;var xt,Nt,Pt;!function(e){e.NobleGas="noble gas",e.DiatomicNonmetal="diatomic nonmetal",e.PolyatomicNonmetal="polyatomic nonmetal",e.TransitionMetal="transition metal",e.PostTransitionMetal="post-transition metal",e.Metalloid="metalloid",e.AlkaliMetal="alkali metal",e.AlkalineEarthMetal="alkaline earth metal",e.UnknownTransitionMetal="unknown, probably transition metal",e.UnknownPostTransitionMetal="unknown, probably post-transition metal",e.UnknownMetalloid="unknown, probably metalloid",e.UnknownNobleGas="unknown, predicted to be noble gas",e.UnknownAlkaliMetal="unknown, but predicted to be an alkali metal",e.Actinide="actinide",e.Lanthanide="lanthanide"}(xt||(xt={})),function(e){e.NobleGases="Noble gases",e.ReactiveNonMetals="Reactive non-metals",e.TransitionMetals="Transition metals",e.PostTransitionMetals="Post-transition metals",e.Metalloids="Metalloids",e.AlkaliMetals="Alkali metals",e.AlkalineEarthMetals="Alkaline earth metals",e.UnknownProperties="Unknown properties",e.Actinides="Actinides",e.Lanthanides="Lanthanides"}(Nt||(Nt={})),function(e){e.English="en",e.Russian="ru"}(Pt||(Pt={}));const Lt={en:Pt.English,"en-US":Pt.English,ru:Pt.Russian,"ru-RU":Pt.Russian},Mt={language:function(){const e=navigator.language;return Lt[e]}()||Pt.Russian,messages:{},isLoading:!0,periodicElements:[],selectedElement:void 0,selectedCategory:void 0,onSelectLanguage:()=>()=>{},onSelectElement:()=>()=>{},onSelectCategory:()=>()=>{}},Rt=(0,e.createContext)(Mt),Ot=({children:t})=>{const[n,r]=(0,e.useState)(Mt.language),[a,l]=(0,e.useState)(Mt.messages),[i,s]=(0,e.useState)(Mt.isLoading),[u,c]=(0,e.useState)(Mt.periodicElements),[f,d]=(0,e.useState)(Mt.selectedElement),[p,h]=(0,e.useState)(Mt.selectedCategory),m=(0,e.useCallback)((e=>()=>{r(e)}),[]),g=(0,e.useCallback)((e=>()=>{e&&e?.symbol!==f?.symbol?document.body.classList.add("hide"):document.body.classList.remove("hide"),h(void 0),d(e?.symbol===f?.symbol?void 0:e)}),[f]),y=(0,e.useCallback)((e=>()=>{h(e===p?void 0:e),d(void 0)}),[p]);(0,e.useEffect)((()=>{!async function(){try{const[t,r]=await Promise.all((e=n,e===Pt.Russian?[o.e(687).then(o.t.bind(o,687,19)),o.e(741).then(o.t.bind(o,741,19))]:[o.e(853).then(o.t.bind(o,853,19)),o.e(283).then(o.t.bind(o,283,19))]));l(t),c(r),s(!1)}catch(e){console.error(e)}var e}()}),[n]);const v={language:n,messages:a,isLoading:i,periodicElements:u,selectedElement:f,selectedCategory:p,onSelectLanguage:m,onSelectElement:g,onSelectCategory:y};return e.createElement(Rt.Provider,{value:v},t)},Ht=()=>(0,e.useContext)(Rt);var Dt=o(942),zt=o.n(Dt);function Ut(e,t){const n=[];for(let r=e;r<=t;r++)n.push(r);return n}const Ft=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],[3,4,0,0,0,0,0,0,0,0,0,0,5,6,7,8,9,10],[11,12,0,0,0,0,0,0,0,0,0,0,13,14,15,16,17,18],Ut(19,36),Ut(37,54),[55,56,0].concat(Ut(72,86)),[87,88,0].concat(Ut(104,118)),[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0].concat(Ut(57,71)),[0,0,0].concat(Ut(89,103))],Gt=new Array(Ft[0].length).fill(0).map(((e,t)=>t+1)),jt=["","1","2","3","4","5","6","7",""],Vt=[Nt.AlkaliMetals,Nt.AlkalineEarthMetals,Nt.TransitionMetals,Nt.PostTransitionMetals,Nt.Metalloids,Nt.ReactiveNonMetals,Nt.NobleGases,Nt.Lanthanides,Nt.Actinides,Nt.UnknownProperties],Wt={[Nt.AlkaliMetals]:[xt.AlkaliMetal],[Nt.AlkalineEarthMetals]:[xt.AlkalineEarthMetal],[Nt.TransitionMetals]:[xt.TransitionMetal],[Nt.PostTransitionMetals]:[xt.PostTransitionMetal],[Nt.Metalloids]:[xt.Metalloid],[Nt.ReactiveNonMetals]:[xt.DiatomicNonmetal,xt.PolyatomicNonmetal],[Nt.NobleGases]:[xt.NobleGas],[Nt.Lanthanides]:[xt.Lanthanide],[Nt.Actinides]:[xt.Actinide],[Nt.UnknownProperties]:[xt.UnknownAlkaliMetal,xt.UnknownMetalloid,xt.UnknownNobleGas,xt.UnknownPostTransitionMetal,xt.UnknownTransitionMetal]};var $t=o(72),Yt=o.n($t),Qt=o(825),Kt=o.n(Qt),Xt=o(659),Zt=o.n(Xt),qt=o(56),Jt=o.n(qt),en=o(159),tn=o.n(en),nn=o(113),rn=o.n(nn),an=o(809),ln={};ln.styleTagTransform=rn(),ln.setAttributes=Jt(),ln.insert=Zt().bind(null,"head"),ln.domAPI=Kt(),ln.insertStyleElement=tn(),Yt()(an.A,ln);const on=an.A&&an.A.locals?an.A.locals:void 0;var sn=o(638),un={};un.styleTagTransform=rn(),un.setAttributes=Jt(),un.insert=Zt().bind(null,"head"),un.domAPI=Kt(),un.insertStyleElement=tn(),Yt()(sn.A,un);const cn=sn.A&&sn.A.locals?sn.A.locals:void 0,fn=function(){const t=kt(),n=(0,e.useMemo)((()=>[...jt,t.formatMessage({id:"Lanthanides"}),t.formatMessage({id:"Actinides"})]),[t]);return e.createElement("div",{className:cn.container},e.createElement("h4",null,e.createElement(Bt,{id:"PeriodsTitle"})),e.createElement("ul",{className:cn.list},n.map(((t,n)=>e.createElement("li",{key:n,className:zt()(on.periodItem,cn.item)},t)))))};var dn=o(924),pn={};pn.styleTagTransform=rn(),pn.setAttributes=Jt(),pn.insert=Zt().bind(null,"head"),pn.domAPI=Kt(),pn.insertStyleElement=tn(),Yt()(dn.A,pn);const hn=dn.A&&dn.A.locals?dn.A.locals:void 0,mn=function(){return e.createElement("div",{className:hn.container},e.createElement("h4",null,e.createElement(Bt,{id:"GroupsTitle"})),e.createElement("ul",{className:zt()(on.groups,hn.list)},Gt.map((t=>e.createElement("li",{key:t,className:on.groupItem},t)))))},gn=e=>{switch(!0){case e===xt.NobleGas:return"nobleGas";case e===xt.DiatomicNonmetal||e===xt.PolyatomicNonmetal:return"diatomicNonMetals";case e===xt.TransitionMetal:return"transitionMetal";case e===xt.PostTransitionMetal:return"postTransitionMetal";case e===xt.Metalloid:return"metalloid";case e===xt.AlkaliMetal:return"alkaliMetal";case e===xt.AlkalineEarthMetal:return"alkalineEarthMetal";case e===xt.UnknownTransitionMetal||e===xt.UnknownPostTransitionMetal||e===xt.UnknownMetalloid||e===xt.UnknownNobleGas||e===xt.UnknownAlkaliMetal:return"unknownProperties";case e===xt.Actinide:return"actinide";case e===xt.Lanthanide:return"lanthanide";default:return""}};var yn=o(916),vn={};vn.styleTagTransform=rn(),vn.setAttributes=Jt(),vn.insert=Zt().bind(null,"head"),vn.domAPI=Kt(),vn.insertStyleElement=tn(),Yt()(yn.A,vn);const bn=yn.A&&yn.A.locals?yn.A.locals:void 0,An=function({cell:t}){const{periodicElements:n,selectedElement:r,selectedCategory:a,onSelectElement:l}=Ht();if(0===t)return e.createElement("li",{className:on.emptyCell});const o=n[t-1];return e.createElement("li",{key:o.symbol,className:zt()(on.cell,bn.cell,{[on[gn(o.category)]]:!0,[bn.selectedCell]:a&&Wt[a].includes(o.category)||r?.symbol===o.symbol})},e.createElement("button",{className:bn.cellButton,onClick:l(o)},e.createElement("div",{className:bn.top},e.createElement("span",null,o.number),e.createElement("span",null,(i=o.atomic_mass,Math.round(1e4*i)/1e4))),e.createElement("strong",{className:bn.symbol},o.symbol),e.createElement("span",{className:bn.elementName},o.name)));var i};var _n=o(413),En={};En.styleTagTransform=rn(),En.setAttributes=Jt(),En.insert=Zt().bind(null,"head"),En.domAPI=Kt(),En.insertStyleElement=tn(),Yt()(_n.A,En);const wn=_n.A&&_n.A.locals?_n.A.locals:void 0,Cn=function(){return e.createElement("ul",{className:wn.list},Ft.map(((t,n)=>e.createElement("li",{key:n,className:zt()(on.row,wn.row)},e.createElement("ul",null,t.map((t=>e.createElement(An,{cell:t}))))))))};var Sn=o(19),kn={};kn.styleTagTransform=rn(),kn.setAttributes=Jt(),kn.insert=Zt().bind(null,"head"),kn.domAPI=Kt(),kn.insertStyleElement=tn(),Yt()(Sn.A,kn);const In=Sn.A&&Sn.A.locals?Sn.A.locals:void 0,Tn=function(){return e.createElement("div",{className:In.container},e.createElement(fn,null),e.createElement("div",null,e.createElement(mn,null),e.createElement(Cn,null)))},Bn=e=>{switch(!0){case e===Nt.NobleGases:return"nobleGas";case e===Nt.ReactiveNonMetals:return"diatomicNonMetals";case e===Nt.TransitionMetals:return"transitionMetal";case e===Nt.PostTransitionMetals:return"postTransitionMetal";case e===Nt.Metalloids:return"metalloid";case e===Nt.AlkaliMetals:return"alkaliMetal";case e===Nt.AlkalineEarthMetals:return"alkalineEarthMetal";case e===Nt.UnknownProperties:return"unknownProperties";case e===Nt.Actinides:return"actinide";case e===Nt.Lanthanides:return"lanthanide";default:return""}};var xn=o(292),Nn={};Nn.styleTagTransform=rn(),Nn.setAttributes=Jt(),Nn.insert=Zt().bind(null,"head"),Nn.domAPI=Kt(),Nn.insertStyleElement=tn(),Yt()(xn.A,Nn);const Pn=xn.A&&xn.A.locals?xn.A.locals:void 0,Ln=function(){const{selectedCategory:t,onSelectCategory:n}=Ht();return e.createElement("div",{className:Pn.container},e.createElement("ul",{className:Pn.categories},Vt.map((r=>e.createElement("li",{key:r,className:zt()(Pn.category,{[Pn.selectedCategory]:t===r})},e.createElement("button",{onClick:n(r)},e.createElement("span",{className:zt()(Pn.categoryIcon,on[Bn(r)])}),e.createElement(Bt,{id:r})))))))};var Mn=o(961);var Rn=o(346),On={};On.styleTagTransform=rn(),On.setAttributes=Jt(),On.insert=Zt().bind(null,"head"),On.domAPI=Kt(),On.insertStyleElement=tn(),Yt()(Rn.A,On);const Hn=Rn.A&&Rn.A.locals?Rn.A.locals:void 0,Dn=(t,{dimension:n,returnEmpty:r=!1,hasBrackets:a=!1}={})=>{const l=n?` ${n}`:"",o=r?"":" —";return"string"==typeof t&&t||"number"==typeof t?e.createElement("span",null,`${a?"(":""}${t}${l}${a?")":""}`):o},zn=t=>{const n=t.replace(/[a-zA-Z]([0-9]+)(\s|$)/g,((e,t,n)=>`${e[0]}<sup>${t}</sup>${n}`));return e.createElement("span",{dangerouslySetInnerHTML:{__html:n}})},Un=e=>{var t;if("number"==typeof e)return t=e-273.15,Math.round(100*t)/100},Fn=function(){const t=kt(),{selectedElement:n,onSelectElement:r}=Ht(),a=function(t){const n=(0,e.useRef)(null);function r(e){n.current&&!n.current.contains(e.target)&&t()}return(0,e.useEffect)((()=>(document.addEventListener("mousedown",r),()=>{document.removeEventListener("mousedown",r)})),[]),n}(r(void 0));return l=r(void 0),(0,e.useEffect)((()=>{function e(e){"Escape"===e.key&&(e.preventDefault(),l())}return document.addEventListener("keydown",e),()=>{document.removeEventListener("keydown",e)}}),[]),n?(0,Mn.createPortal)(e.createElement("div",{className:Hn.backOverlay},e.createElement("div",{ref:a,className:Hn.container},e.createElement("button",{title:t.formatMessage({id:"ClosePopupButtonTitle"}),className:Hn.closeButton,onClick:r(void 0)}),e.createElement("div",{className:Hn.scrollContainer},e.createElement("div",{className:Hn.contentContainer},e.createElement("model-viewer",{alt:n.summary,src:n.bohr_model_3d,ar:!0,"shadow-intensity":"0","camera-controls":!0,"touch-action":"pan-y"}),e.createElement("h2",null,`${n.name} (${n.symbol})`),e.createElement("p",null,n.summary," ",e.createElement("a",{href:n.source,className:Hn.linkToSource,target:"_blank",rel:"nofollow noopener"},e.createElement(Bt,{id:"LinkToSource"}))),e.createElement("ul",null,e.createElement("li",null,e.createElement(Bt,{id:"Appearance"}),Dn(n.appearance)),e.createElement("li",null,e.createElement(Bt,{id:"StandardAtomicWeight"}),Dn(n.atomic_mass))),e.createElement("h3",null,e.createElement(Bt,{id:"NameInPeriodicTable",values:{name:n.name}})),e.createElement("ul",null,e.createElement("li",null,e.createElement(Bt,{id:"AtomicNumber"}),Dn(n.number)),e.createElement("li",null,e.createElement(Bt,{id:"Group"}),Dn(n.group)),e.createElement("li",null,e.createElement(Bt,{id:"Period"}),Dn(n.period)),e.createElement("li",null,e.createElement(Bt,{id:"Block"}),Dn(n.block))),e.createElement("h3",null,e.createElement(Bt,{id:"PhysicalProperties"})),e.createElement("ul",null,e.createElement("li",null,e.createElement(Bt,{id:"PhaseAtSTP"}),Dn(n.phase)),e.createElement("li",null,e.createElement(Bt,{id:"MeltingPoint"}),e.createElement("span",{className:Hn.temperature},Dn(n.melt,{dimension:"K"}),Dn(Un(n.melt),{dimension:"°C",returnEmpty:!0,hasBrackets:!0}))),e.createElement("li",null,e.createElement(Bt,{id:"BoilingPoint"}),e.createElement("span",{className:Hn.temperature},Dn(n.boil,{dimension:"K"}),Dn(Un(n.boil),{dimension:"°C",returnEmpty:!0,hasBrackets:!0}))),e.createElement("li",null,e.createElement(Bt,{id:"Density"}),Dn(n.density,{dimension:"g/L"})),e.createElement("li",null,e.createElement(Bt,{id:"MolarHeatCapacity"}),Dn(n.molar_heat,{dimension:"J/(mol·K)"}))),e.createElement("h3",null,e.createElement(Bt,{id:"AtomicProperties"})),e.createElement("ul",null,e.createElement("li",null,e.createElement(Bt,{id:"ElectronConfiguration"}),e.createElement("span",{className:Hn.electronConfiguration},zn(n.electron_configuration),zn(n.electron_configuration_semantic))),e.createElement("li",null,e.createElement(Bt,{id:"ElectronsPerShell"}),Dn(n.shells.join(", "))),e.createElement("li",null,e.createElement(Bt,{id:"ElectronegativityPaulingScale"}),Dn(n.electronegativity_pauling)),e.createElement("li",null,e.createElement(Bt,{id:"IonizationEnergies"}),Dn(n.ionization_energies.join(", ")))),e.createElement("h3",null,e.createElement(Bt,{id:"History"})),e.createElement("ul",null,e.createElement("li",null,e.createElement(Bt,{id:"DiscoveredBy"}),Dn(n.discovered_by)),e.createElement("li",null,e.createElement(Bt,{id:"NamedBy"}),Dn(n.named_by))),e.createElement("img",{src:n.image.url,alt:n.image.title,className:Hn.image}),e.createElement("small",null,n.image.title),e.createElement("small",{className:Hn.attribution},n.image.attribution))))),document.body):null;var l};var Gn=o(739),jn={};jn.styleTagTransform=rn(),jn.setAttributes=Jt(),jn.insert=Zt().bind(null,"head"),jn.domAPI=Kt(),jn.insertStyleElement=tn(),Yt()(Gn.A,jn);const Vn=Gn.A&&Gn.A.locals?Gn.A.locals:void 0,Wn=[{label:"Рус",value:Pt.Russian},{label:"Eng",value:Pt.English}],$n=function(){const{language:t,onSelectLanguage:n}=Ht();return e.createElement("ul",{className:Vn.container},Wn.map((r=>e.createElement("li",{key:r.value,className:zt()({[Vn.active]:t===r.value})},e.createElement("button",{onClick:n(r.value)},r.label)))))};var Yn=o(765),Qn={};Qn.styleTagTransform=rn(),Qn.setAttributes=Jt(),Qn.insert=Zt().bind(null,"head"),Qn.domAPI=Kt(),Qn.insertStyleElement=tn(),Yt()(Yn.A,Qn);const Kn=Yn.A&&Yn.A.locals?Yn.A.locals:void 0,Xn=function(){return e.createElement("div",{className:Kn.container},e.createElement("h1",null,e.createElement(Bt,{id:"MainTitle"})),e.createElement($n,null))};var Zn=o(219),qn={};qn.styleTagTransform=rn(),qn.setAttributes=Jt(),qn.insert=Zt().bind(null,"head"),qn.domAPI=Kt(),qn.insertStyleElement=tn(),Yt()(Zn.A,qn);const Jn=Zn.A&&Zn.A.locals?Zn.A.locals:void 0,er=()=>{const{messages:t,language:n,isLoading:r,selectedElement:a}=Ht();return e.createElement(St,{locale:n,messages:t},e.createElement("div",{className:Jn.container},r?e.createElement("div",{className:Jn.loader},e.createElement(Bt,{id:"Loading"})):e.createElement(e.Fragment,null,e.createElement(Xn,null),e.createElement(Tn,null),e.createElement(Ln,null),a&&e.createElement(Fn,null))))};var tr=o(478),nr={};nr.styleTagTransform=rn(),nr.setAttributes=Jt(),nr.insert=Zt().bind(null,"head"),nr.domAPI=Kt(),nr.insertStyleElement=tn(),Yt()(tr.A,nr),tr.A&&tr.A.locals&&tr.A.locals,(async()=>{const n=document.getElementById("root");(0,t.H)(n).render(e.createElement(Ot,null,e.createElement(er,null)))})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,