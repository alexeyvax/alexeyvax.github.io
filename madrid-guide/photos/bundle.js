/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e,t,n,r,a={50:(e,t,n)=>{"use strict";e.exports=n.p+"17882b6060d4e4ac23ec.jpeg"},56:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},59:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});var r=n(354),a=n.n(r),o=n(314),i=n.n(o),l=n(735),u=i()(a());u.i(l.A),u.push([e.id,".styles__wideContainer___xJstx {\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 1;\n    width: 100%;\n    height: var(--header-height);\n    padding: 0 var(--container-padding-horizontal);\n    box-sizing: border-box;\n    background-color: var(--background);\n    box-shadow: 0px 0px 10px 2px rgba(0, 0, 0, 0);\n    transition: box-shadow 0.3s;\n}\n\n.styles__sticky___gsgVo {\n    box-shadow: 0px 0px 10px 2px rgba(0, 0, 0, 0.2);\n}\n\n.styles__container___R9TG_ {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    max-width: var(--mobile-page-width);\n    padding: 0 70px 0 70px;\n    margin: 0 auto;\n    box-sizing: border-box;\n}\n\n.styles__container___R9TG_ a {\n    position: absolute;\n    top: 50%;\n    left: 0;\n    display: inline-block;\n    width: 40px;\n    height: 40px;\n    transform: translateY(-50%);\n}\n\n.styles__container___R9TG_ a img {\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: 10px;\n}\n\n.styles__mainTitle___FukR6 {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    font-size: var(--main-title-font-size-mobile);\n    margin: 0;\n    text-align: center;\n    color: var(--text);\n}\n\n@media screen and (min-width: 768px) {\n    .styles__container___R9TG_ {\n        max-width: var(--tablets-page-width);\n    }\n\n    .styles__mainTitle___FukR6 {\n        font-size: var(--main-title-font-size-tablet);\n    }\n}\n\n@media screen and (min-width: 1024px) {\n    .styles__container___R9TG_ {\n        max-width: var(--desktop-page-width);\n    }\n\n    .styles__mainTitle___FukR6 {\n        font-size: var(--main-title-font-size-desktop);\n    }\n}\n","",{version:3,sources:["webpack://./photos/src/components/Header/styles.css"],names:[],mappings:"AAEA;IACI,eAAe;IACf,MAAM;IACN,OAAO;IACP,UAAU;IACV,WAAW;IACX,4BAA4B;IAC5B,8CAA8C;IAC9C,sBAAsB;IACtB,mCAAmC;IACnC,6CAA6C;IAC7C,2BAA2B;AAC/B;;AAEA;IACI,+CAA+C;AACnD;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,mCAAmC;IACnC,sBAAsB;IACtB,cAAc;IACd,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,OAAO;IACP,qBAAqB;IACrB,WAAW;IACX,YAAY;IACZ,2BAA2B;AAC/B;;AAEA;IACI,cAAc;IACd,WAAW;IACX,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;IACZ,6CAA6C;IAC7C,SAAS;IACT,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI;QACI,oCAAoC;IACxC;;IAEA;QACI,6CAA6C;IACjD;AACJ;;AAEA;IACI;QACI,oCAAoC;IACxC;;IAEA;QACI,8CAA8C;IAClD;AACJ",sourcesContent:['@import "../../variables.css";\n\n.wideContainer {\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 1;\n    width: 100%;\n    height: var(--header-height);\n    padding: 0 var(--container-padding-horizontal);\n    box-sizing: border-box;\n    background-color: var(--background);\n    box-shadow: 0px 0px 10px 2px rgba(0, 0, 0, 0);\n    transition: box-shadow 0.3s;\n}\n\n.sticky {\n    box-shadow: 0px 0px 10px 2px rgba(0, 0, 0, 0.2);\n}\n\n.container {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    max-width: var(--mobile-page-width);\n    padding: 0 70px 0 70px;\n    margin: 0 auto;\n    box-sizing: border-box;\n}\n\n.container a {\n    position: absolute;\n    top: 50%;\n    left: 0;\n    display: inline-block;\n    width: 40px;\n    height: 40px;\n    transform: translateY(-50%);\n}\n\n.container a img {\n    display: block;\n    width: 100%;\n    height: 100%;\n    border-radius: 10px;\n}\n\n.mainTitle {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    font-size: var(--main-title-font-size-mobile);\n    margin: 0;\n    text-align: center;\n    color: var(--text);\n}\n\n@media screen and (min-width: 768px) {\n    .container {\n        max-width: var(--tablets-page-width);\n    }\n\n    .mainTitle {\n        font-size: var(--main-title-font-size-tablet);\n    }\n}\n\n@media screen and (min-width: 1024px) {\n    .container {\n        max-width: var(--desktop-page-width);\n    }\n\n    .mainTitle {\n        font-size: var(--main-title-font-size-desktop);\n    }\n}\n'],sourceRoot:""}]),u.locals={wideContainer:"styles__wideContainer___xJstx",sticky:"styles__sticky___gsgVo",container:"styles__container___R9TG_",mainTitle:"styles__mainTitle___FukR6"};const s=u},72:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var o={},i=[],l=0;l<e.length;l++){var u=e[l],s=r.base?u[0]+r.base:u[0],c=o[s]||0,f="".concat(s," ").concat(c);o[s]=c+1;var d=n(f),p={css:u[1],media:u[2],sourceMap:u[3],supports:u[4],layer:u[5]};if(-1!==d)t[d].references++,t[d].updater(p);else{var h=a(p,r);r.byIndex=l,t.splice(l,0,{identifier:f,updater:h,references:1})}i.push(f)}return i}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var l=n(o[i]);t[l].references--}for(var u=r(e,a),s=0;s<o.length;s++){var c=n(o[s]);0===t[c].references&&(t[c].updater(),t.splice(c,1))}o=u}}},113:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},146:(e,t,n)=>{"use strict";var r=n(363),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},i={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?i:l[e.$$typeof]||a}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=i;var s=Object.defineProperty,c=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var a=p(n);a&&a!==h&&e(t,a,r)}var i=c(n);f&&(i=i.concat(f(n)));for(var l=u(t),m=u(n),g=0;g<i.length;++g){var v=i[g];if(!(o[v]||r&&r[v]||m&&m[v]||l&&l[v])){var y=d(n,v);try{s(t,v,y)}catch(e){}}}}return t}},159:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},173:(e,t,n)=>{"use strict";e.exports=n.p+"092ab803d259c86526fb.png"},175:(e,t,n)=>{"use strict";n.d(t,{A:()=>p});var r=n(354),a=n.n(r),o=n(314),i=n.n(o),l=n(735),u=n(417),s=n.n(u),c=new URL(n(173),n.b),f=i()(a());f.i(l.A);var d=s()(c);f.push([e.id,`.styles__container___hsmU0 a {\n    position: relative;\n    padding-right: 30px;\n    font-size: var(--title-font-size-mobile);\n    color: var(--text);\n    text-decoration: none;\n}\n.styles__container___hsmU0 a::before {\n    position: absolute;\n    top: 50%;\n    right: 0;\n    display: block;\n    width: 18px;\n    height: 18px;\n    content: "";\n    opacity: 0;\n    background: url(${d}) no-repeat center/contain;\n    transform: translateY(-50%);\n    transition: opacity .2s;\n}\n.styles__container___hsmU0 a:hover::before,\n.styles__container___hsmU0 a:focus::before {\n    opacity: 1;\n}\n\n@media screen and (min-width: 768px) {\n    .styles__container___hsmU0 a {\n        font-size: var(--title-font-size-desktop);\n    }\n}\n`,"",{version:3,sources:["webpack://./photos/src/components/Anchor/styles.css"],names:[],mappings:"AAEA;IACI,kBAAkB;IAClB,mBAAmB;IACnB,wCAAwC;IACxC,kBAAkB;IAClB,qBAAqB;AACzB;AACA;IACI,kBAAkB;IAClB,QAAQ;IACR,QAAQ;IACR,cAAc;IACd,WAAW;IACX,YAAY;IACZ,WAAW;IACX,UAAU;IACV,4EAAuE;IACvE,2BAA2B;IAC3B,uBAAuB;AAC3B;AACA;;IAEI,UAAU;AACd;;AAEA;IACI;QACI,yCAAyC;IAC7C;AACJ",sourcesContent:['@import "../../variables.css";\n\n.container a {\n    position: relative;\n    padding-right: 30px;\n    font-size: var(--title-font-size-mobile);\n    color: var(--text);\n    text-decoration: none;\n}\n.container a::before {\n    position: absolute;\n    top: 50%;\n    right: 0;\n    display: block;\n    width: 18px;\n    height: 18px;\n    content: "";\n    opacity: 0;\n    background: url(../../../../assets/anchor.png) no-repeat center/contain;\n    transform: translateY(-50%);\n    transition: opacity .2s;\n}\n.container a:hover::before,\n.container a:focus::before {\n    opacity: 1;\n}\n\n@media screen and (min-width: 768px) {\n    .container a {\n        font-size: var(--title-font-size-desktop);\n    }\n}\n'],sourceRoot:""}]),f.locals={container:"styles__container___hsmU0"};const p=f},287:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),l=Symbol.for("react.provider"),u=Symbol.for("react.context"),s=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),f=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator,h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function v(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||h}function y(){}function b(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||h}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=v.prototype;var A=b.prototype=new y;A.constructor=b,m(A,v.prototype),A.isPureReactComponent=!0;var E=Array.isArray,w=Object.prototype.hasOwnProperty,_={current:null},C={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,r){var a,o={},i=null,l=null;if(null!=t)for(a in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)w.call(t,a)&&!C.hasOwnProperty(a)&&(o[a]=t[a]);var u=arguments.length-2;if(1===u)o.children=r;else if(1<u){for(var s=Array(u),c=0;c<u;c++)s[c]=arguments[c+2];o.children=s}if(e&&e.defaultProps)for(a in u=e.defaultProps)void 0===o[a]&&(o[a]=u[a]);return{$$typeof:n,type:e,key:i,ref:l,props:o,_owner:_.current}}function k(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var T=/\/+/g;function x(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,function(e){return t[e]})}(""+e.key):t.toString(36)}function I(e,t,a,o,i){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case n:case r:u=!0}}if(u)return i=i(u=e),e=""===o?"."+x(u,0):o,E(i)?(a="",null!=e&&(a=e.replace(T,"$&/")+"/"),I(i,t,a,"",function(e){return e})):null!=i&&(k(i)&&(i=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,a+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(T,"$&/")+"/")+e)),t.push(i)),1;if(u=0,o=""===o?".":o+":",E(e))for(var s=0;s<e.length;s++){var c=o+x(l=e[s],s);u+=I(l,t,a,c,i)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),s=0;!(l=e.next()).done;)u+=I(l=l.value,t,a,c=o+x(l,s++),i);else if("object"===l)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return u}function P(e,t,n){if(null==e)return e;var r=[],a=0;return I(e,r,"","",function(e){return t.call(n,e,a++)}),r}function N(e){if(-1===e._status){var t=e._result;(t=t()).then(function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)},function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)}),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var B={current:null},L={transition:null},R={ReactCurrentDispatcher:B,ReactCurrentBatchConfig:L,ReactCurrentOwner:_};function M(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:P,forEach:function(e,t,n){P(e,function(){t.apply(this,arguments)},n)},count:function(e){var t=0;return P(e,function(){t++}),t},toArray:function(e){return P(e,function(e){return e})||[]},only:function(e){if(!k(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=v,t.Fragment=a,t.Profiler=i,t.PureComponent=b,t.StrictMode=o,t.Suspense=c,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=R,t.act=M,t.cloneElement=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=m({},e.props),o=e.key,i=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,l=_.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(s in t)w.call(t,s)&&!C.hasOwnProperty(s)&&(a[s]=void 0===t[s]&&void 0!==u?u[s]:t[s])}var s=arguments.length-2;if(1===s)a.children=r;else if(1<s){u=Array(s);for(var c=0;c<s;c++)u[c]=arguments[c+2];a.children=u}return{$$typeof:n,type:e.type,key:o,ref:i,props:a,_owner:l}},t.createContext=function(e){return(e={$$typeof:u,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:l,_context:e},e.Consumer=e},t.createElement=S,t.createFactory=function(e){var t=S.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:s,render:e}},t.isValidElement=k,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:N}},t.memo=function(e,t){return{$$typeof:f,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=L.transition;L.transition={};try{e()}finally{L.transition=t}},t.unstable_act=M,t.useCallback=function(e,t){return B.current.useCallback(e,t)},t.useContext=function(e){return B.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return B.current.useDeferredValue(e)},t.useEffect=function(e,t){return B.current.useEffect(e,t)},t.useId=function(){return B.current.useId()},t.useImperativeHandle=function(e,t,n){return B.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return B.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return B.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return B.current.useMemo(e,t)},t.useReducer=function(e,t,n){return B.current.useReducer(e,t,n)},t.useRef=function(e){return B.current.useRef(e)},t.useState=function(e){return B.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return B.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return B.current.useTransition()},t.version="18.3.1"},314:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n}).join("")},t.i=function(e,n,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var l=0;l<this.length;l++){var u=this[l][0];null!=u&&(i[u]=!0)}for(var s=0;s<e.length;s++){var c=[].concat(e[s]);r&&i[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),n&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=n):c[2]=n),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),t.push(c))}},t}},321:(e,t,n)=>{"use strict";e.exports=n.p+"015968e942038938ebd5.jpeg"},338:(e,t,n)=>{"use strict";var r=n(961);t.H=r.createRoot,r.hydrateRoot},354:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[t].concat([o]).join("\n")}return[t].join("\n")}},355:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});var r=n(354),a=n.n(r),o=n(314),i=n.n(o),l=n(735),u=i()(a());u.i(l.A),u.push([e.id,".styles__wideContainer___eEgPF {\n    width: 100%;\n    height: 100%;\n    padding: 0 var(--container-padding-horizontal);\n    box-sizing: border-box;\n}\n\n.styles__container___RU7mU {\n    width: 100%;\n    height: 100%;\n    max-width: var(--mobile-page-width);\n    margin: 0 auto;\n    padding: 70px 0; /* header footer heights + 20px */\n}\n\n@media screen and (min-width: 768px) {\n    .styles__container___RU7mU {\n        max-width: var(--tablets-page-width);\n        padding: 80px 0;\n    }\n}\n\n@media screen and (min-width: 1024px) {\n    .styles__container___RU7mU {\n        max-width: var(--desktop-page-width);\n    }\n}\n","",{version:3,sources:["webpack://./photos/src/components/Main/styles.css"],names:[],mappings:"AAEA;IACI,WAAW;IACX,YAAY;IACZ,8CAA8C;IAC9C,sBAAsB;AAC1B;;AAEA;IACI,WAAW;IACX,YAAY;IACZ,mCAAmC;IACnC,cAAc;IACd,eAAe,EAAE,iCAAiC;AACtD;;AAEA;IACI;QACI,oCAAoC;QACpC,eAAe;IACnB;AACJ;;AAEA;IACI;QACI,oCAAoC;IACxC;AACJ",sourcesContent:['@import "../../variables.css";\n\n.wideContainer {\n    width: 100%;\n    height: 100%;\n    padding: 0 var(--container-padding-horizontal);\n    box-sizing: border-box;\n}\n\n.container {\n    width: 100%;\n    height: 100%;\n    max-width: var(--mobile-page-width);\n    margin: 0 auto;\n    padding: 70px 0; /* header footer heights + 20px */\n}\n\n@media screen and (min-width: 768px) {\n    .container {\n        max-width: var(--tablets-page-width);\n        padding: 80px 0;\n    }\n}\n\n@media screen and (min-width: 1024px) {\n    .container {\n        max-width: var(--desktop-page-width);\n    }\n}\n'],sourceRoot:""}]),u.locals={wideContainer:"styles__wideContainer___eEgPF",container:"styles__container___RU7mU"};const s=u},363:(e,t,n)=>{"use strict";e.exports=n(799)},405:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});var r=n(354),a=n.n(r),o=n(314),i=n.n(o),l=n(735),u=i()(a());u.i(l.A),u.push([e.id,".styles__container___hIftv {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 100%;\n    height: 100%;\n    min-width: var(--min-mobile-page-width);\n}\n","",{version:3,sources:["webpack://./photos/src/components/App/styles.css"],names:[],mappings:"AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,8BAA8B;IAC9B,WAAW;IACX,YAAY;IACZ,uCAAuC;AAC3C",sourcesContent:['@import "../../variables.css";\n\n.container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 100%;\n    height: 100%;\n    min-width: var(--min-mobile-page-width);\n}\n'],sourceRoot:""}]),u.locals={container:"styles__container___hIftv"};const s=u},417:e=>{"use strict";e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},428:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});var r=n(354),a=n.n(r),o=n(314),i=n.n(o),l=n(735),u=i()(a());u.i(l.A),u.push([e.id,'html {\n    height: 100%;\n    scroll-behavior: smooth;\n}\n\nbody {\n    margin: 0;\n    height: 100%;\n    font-size: var(--main-font-size);\n    font-family: "Montserrat", serif;\n    background-color: var(--background);\n}\n',"",{version:3,sources:["webpack://./photos/src/styles.css"],names:[],mappings:"AAEA;IACI,YAAY;IACZ,uBAAuB;AAC3B;;AAEA;IACI,SAAS;IACT,YAAY;IACZ,gCAAgC;IAChC,gCAAgC;IAChC,mCAAmC;AACvC",sourcesContent:['@import "./variables.css";\n\nhtml {\n    height: 100%;\n    scroll-behavior: smooth;\n}\n\nbody {\n    margin: 0;\n    height: 100%;\n    font-size: var(--main-font-size);\n    font-family: "Montserrat", serif;\n    background-color: var(--background);\n}\n'],sourceRoot:""}]),u.locals={};const s=u},463:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,a=e[r];if(!(0<o(a,t)))break e;e[r]=t,e[n]=a,n=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length,i=a>>>1;r<i;){var l=2*(r+1)-1,u=e[l],s=l+1,c=e[s];if(0>o(u,n))s<a&&0>o(c,u)?(e[r]=c,e[s]=n,r=s):(e[r]=u,e[l]=n,r=l);else{if(!(s<a&&0>o(c,n)))break e;e[r]=c,e[s]=n,r=s}}}return t}function o(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var l=Date,u=l.now();t.unstable_now=function(){return l.now()-u}}var s=[],c=[],f=1,d=null,p=3,h=!1,m=!1,g=!1,v="function"==typeof setTimeout?setTimeout:null,y="function"==typeof clearTimeout?clearTimeout:null,b="undefined"!=typeof setImmediate?setImmediate:null;function A(e){for(var t=r(c);null!==t;){if(null===t.callback)a(c);else{if(!(t.startTime<=e))break;a(c),t.sortIndex=t.expirationTime,n(s,t)}t=r(c)}}function E(e){if(g=!1,A(e),!m)if(null!==r(s))m=!0,L(w);else{var t=r(c);null!==t&&R(E,t.startTime-e)}}function w(e,n){m=!1,g&&(g=!1,y(k),k=-1),h=!0;var o=p;try{for(A(n),d=r(s);null!==d&&(!(d.expirationTime>n)||e&&!I());){var i=d.callback;if("function"==typeof i){d.callback=null,p=d.priorityLevel;var l=i(d.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?d.callback=l:d===r(s)&&a(s),A(n)}else a(s);d=r(s)}if(null!==d)var u=!0;else{var f=r(c);null!==f&&R(E,f.startTime-n),u=!1}return u}finally{d=null,p=o,h=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var _,C=!1,S=null,k=-1,T=5,x=-1;function I(){return!(t.unstable_now()-x<T)}function P(){if(null!==S){var e=t.unstable_now();x=e;var n=!0;try{n=S(!0,e)}finally{n?_():(C=!1,S=null)}}else C=!1}if("function"==typeof b)_=function(){b(P)};else if("undefined"!=typeof MessageChannel){var N=new MessageChannel,B=N.port2;N.port1.onmessage=P,_=function(){B.postMessage(null)}}else _=function(){v(P,0)};function L(e){S=e,C||(C=!0,_())}function R(e,n){k=v(function(){e(t.unstable_now())},n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||h||(m=!0,L(w))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):T=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return r(s)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,a,o){var i=t.unstable_now();switch(o="object"==typeof o&&null!==o&&"number"==typeof(o=o.delay)&&0<o?i+o:i,e){case 1:var l=-1;break;case 2:l=250;break;case 5:l=1073741823;break;case 4:l=1e4;break;default:l=5e3}return e={id:f++,callback:a,priorityLevel:e,startTime:o,expirationTime:l=o+l,sortIndex:-1},o>i?(e.sortIndex=o,n(c,e),null===r(s)&&e===r(c)&&(g?(y(k),k=-1):g=!0,R(E,o-i))):(e.sortIndex=l,n(s,e),m||h||(m=!0,L(w))),e},t.unstable_shouldYield=I,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},477:(e,t,n)=>{"use strict";n.d(t,{A:()=>l});var r=n(354),a=n.n(r),o=n(314),i=n.n(o)()(a());i.push([e.id,".styles__container___mIK70 {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 50px;\n}\n","",{version:3,sources:["webpack://./photos/src/components/Loader/styles.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,MAAM;IACN,QAAQ;IACR,SAAS;IACT,OAAO;IACP,WAAW;IACX,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;AACnB",sourcesContent:[".container {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 50px;\n}\n"],sourceRoot:""}]),i.locals={container:"styles__container___mIK70"};const l=i},533:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});var r=n(354),a=n.n(r),o=n(314),i=n.n(o),l=n(735),u=i()(a());u.i(l.A),u.push([e.id,".styles__wideContainer___vqaFl {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: var(--footer-height);\n    padding: 0 var(--container-padding-horizontal);\n    box-sizing: border-box;\n    background-color: var(--black);\n}\n\n.styles__container___Wi79A {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    max-width: var(--mobile-page-width);\n    margin: 0 auto;\n}\n\n.styles__currentYear___QOgAv,\n.styles__author___wX3Cb {\n    color: var(--white);\n    font-size: 14px;\n}\n\n@media screen and (min-width: 768px) {\n    .styles__container___Wi79A {\n        max-width: var(--tablets-page-width);\n    }\n}\n\n@media screen and (min-width: 1024px) {\n    .styles__container___Wi79A {\n        max-width: var(--desktop-page-width);\n    }\n}\n","",{version:3,sources:["webpack://./photos/src/components/Footer/styles.css"],names:[],mappings:"AAEA;IACI,eAAe;IACf,SAAS;IACT,OAAO;IACP,WAAW;IACX,4BAA4B;IAC5B,8CAA8C;IAC9C,sBAAsB;IACtB,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;IACnB,WAAW;IACX,YAAY;IACZ,mCAAmC;IACnC,cAAc;AAClB;;AAEA;;IAEI,mBAAmB;IACnB,eAAe;AACnB;;AAEA;IACI;QACI,oCAAoC;IACxC;AACJ;;AAEA;IACI;QACI,oCAAoC;IACxC;AACJ",sourcesContent:['@import "../../variables.css";\n\n.wideContainer {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: var(--footer-height);\n    padding: 0 var(--container-padding-horizontal);\n    box-sizing: border-box;\n    background-color: var(--black);\n}\n\n.container {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    max-width: var(--mobile-page-width);\n    margin: 0 auto;\n}\n\n.currentYear,\n.author {\n    color: var(--white);\n    font-size: 14px;\n}\n\n@media screen and (min-width: 768px) {\n    .container {\n        max-width: var(--tablets-page-width);\n    }\n}\n\n@media screen and (min-width: 1024px) {\n    .container {\n        max-width: var(--desktop-page-width);\n    }\n}\n'],sourceRoot:""}]),u.locals={wideContainer:"styles__wideContainer___vqaFl",container:"styles__container___Wi79A",currentYear:"styles__currentYear___QOgAv",author:"styles__author___wX3Cb"};const s=u},540:(e,t,n)=>{"use strict";e.exports=n(287)},551:(e,t,n)=>{"use strict";var r=n(540),a=n(982);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,l={};function u(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(l[e]=t,e=0;e<t.length;e++)i.add(t[e])}var c=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),f=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},h={};function m(e,t,n,r,a,o,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=i}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){g[e]=new m(e,0,!1,e,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){g[e]=new m(e,2,!1,e,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(e){g[e]=new m(e,3,!0,e,null,!1,!1)}),["capture","download"].forEach(function(e){g[e]=new m(e,4,!1,e,null,!1,!1)}),["cols","rows","size","span"].forEach(function(e){g[e]=new m(e,6,!1,e,null,!1,!1)}),["rowSpan","start"].forEach(function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)});var v=/[\-:]([a-z])/g;function y(e){return e[1].toUpperCase()}function b(e,t,n,r){var a=g.hasOwnProperty(t)?g[t]:null;(null!==a?0!==a.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!f.call(h,e)||!f.call(p,e)&&(d.test(e)?h[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(v,y);g[t]=new m(t,1,!1,e,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(v,y);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(v,y);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)}),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)});var A=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,E=Symbol.for("react.element"),w=Symbol.for("react.portal"),_=Symbol.for("react.fragment"),C=Symbol.for("react.strict_mode"),S=Symbol.for("react.profiler"),k=Symbol.for("react.provider"),T=Symbol.for("react.context"),x=Symbol.for("react.forward_ref"),I=Symbol.for("react.suspense"),P=Symbol.for("react.suspense_list"),N=Symbol.for("react.memo"),B=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var L=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var R=Symbol.iterator;function M(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=R&&e[R]||e["@@iterator"])?e:null}var O,H=Object.assign;function F(e){if(void 0===O)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);O=t&&t[1]||""}return"\n"+O+e}var D=!1;function z(e,t){if(!e||D)return"";D=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(t){if(t&&r&&"string"==typeof t.stack){for(var a=t.stack.split("\n"),o=r.stack.split("\n"),i=a.length-1,l=o.length-1;1<=i&&0<=l&&a[i]!==o[l];)l--;for(;1<=i&&0<=l;i--,l--)if(a[i]!==o[l]){if(1!==i||1!==l)do{if(i--,0>--l||a[i]!==o[l]){var u="\n"+a[i].replace(" at new "," at ");return e.displayName&&u.includes("<anonymous>")&&(u=u.replace("<anonymous>",e.displayName)),u}}while(1<=i&&0<=l);break}}}finally{D=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?F(e):""}function U(e){switch(e.tag){case 5:return F(e.type);case 16:return F("Lazy");case 13:return F("Suspense");case 19:return F("SuspenseList");case 0:case 2:case 15:return z(e.type,!1);case 11:return z(e.type.render,!1);case 1:return z(e.type,!0);default:return""}}function j(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case _:return"Fragment";case w:return"Portal";case S:return"Profiler";case C:return"StrictMode";case I:return"Suspense";case P:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case T:return(e.displayName||"Context")+".Consumer";case k:return(e._context.displayName||"Context")+".Provider";case x:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case N:return null!==(t=e.displayName||null)?t:j(e.type)||"Memo";case B:t=e._payload,e=e._init;try{return j(e(t))}catch(e){}}return null}function G(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return j(t);case 8:return t===C?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function V(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function W(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function $(e){e._valueTracker||(e._valueTracker=function(e){var t=W(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=W(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Y(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function X(e,t){var n=t.checked;return H({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function K(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=V(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function q(e,t){null!=(t=t.checked)&&b(e,"checked",t,!1)}function Z(e,t){q(e,t);var n=V(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,V(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function J(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&Y(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+V(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return H({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(te(n)){if(1<n.length)throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:V(n)}}function oe(e,t){var n=V(t.value),r=V(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function le(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ue(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?le(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var se,ce,fe=(ce=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((se=se||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=se.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return ce(e,t)})}:ce);function de(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},he=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=me(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(pe).forEach(function(e){he.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]})});var ve=H({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ye(e,t){if(t){if(ve[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(o(62))}}function be(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Ae=null;function Ee(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var we=null,_e=null,Ce=null;function Se(e){if(e=ba(e)){if("function"!=typeof we)throw Error(o(280));var t=e.stateNode;t&&(t=Ea(t),we(e.stateNode,e.type,t))}}function ke(e){_e?Ce?Ce.push(e):Ce=[e]:_e=e}function Te(){if(_e){var e=_e,t=Ce;if(Ce=_e=null,Se(e),t)for(e=0;e<t.length;e++)Se(t[e])}}function xe(e,t){return e(t)}function Ie(){}var Pe=!1;function Ne(e,t,n){if(Pe)return e(t,n);Pe=!0;try{return xe(e,t,n)}finally{Pe=!1,(null!==_e||null!==Ce)&&(Ie(),Te())}}function Be(e,t){var n=e.stateNode;if(null===n)return null;var r=Ea(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(o(231,t,typeof n));return n}var Le=!1;if(c)try{var Re={};Object.defineProperty(Re,"passive",{get:function(){Le=!0}}),window.addEventListener("test",Re,Re),window.removeEventListener("test",Re,Re)}catch(ce){Le=!1}function Me(e,t,n,r,a,o,i,l,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var Oe=!1,He=null,Fe=!1,De=null,ze={onError:function(e){Oe=!0,He=e}};function Ue(e,t,n,r,a,o,i,l,u){Oe=!1,He=null,Me.apply(ze,arguments)}function je(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{!!(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ve(e){if(je(e)!==e)throw Error(o(188))}function We(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=je(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var i=a.alternate;if(null===i){if(null!==(r=a.return)){n=r;continue}break}if(a.child===i.child){for(i=a.child;i;){if(i===n)return Ve(a),e;if(i===r)return Ve(a),t;i=i.sibling}throw Error(o(188))}if(n.return!==r.return)n=a,r=i;else{for(var l=!1,u=a.child;u;){if(u===n){l=!0,n=a,r=i;break}if(u===r){l=!0,r=a,n=i;break}u=u.sibling}if(!l){for(u=i.child;u;){if(u===n){l=!0,n=i,r=a;break}if(u===r){l=!0,r=i,n=a;break}u=u.sibling}if(!l)throw Error(o(189))}}if(n.alternate!==r)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e))?$e(e):null}function $e(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=$e(e);if(null!==t)return t;e=e.sibling}return null}var Qe=a.unstable_scheduleCallback,Ye=a.unstable_cancelCallback,Xe=a.unstable_shouldYield,Ke=a.unstable_requestPaint,qe=a.unstable_now,Ze=a.unstable_getCurrentPriorityLevel,Je=a.unstable_ImmediatePriority,et=a.unstable_UserBlockingPriority,tt=a.unstable_NormalPriority,nt=a.unstable_LowPriority,rt=a.unstable_IdlePriority,at=null,ot=null,it=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(lt(e)/ut|0)|0},lt=Math.log,ut=Math.LN2,st=64,ct=4194304;function ft(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,a=e.suspendedLanes,o=e.pingedLanes,i=268435455&n;if(0!==i){var l=i&~a;0!==l?r=ft(l):0!==(o&=i)&&(r=ft(o))}else 0!==(i=n&~a)?r=ft(i):0!==o&&(r=ft(o));if(0===r)return 0;if(0!==t&&t!==r&&0===(t&a)&&((a=r&-r)>=(o=t&-t)||16===a&&4194240&o))return t;if(4&r&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-it(t)),r|=e[n],t&=~a;return r}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ht(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=st;return!(4194240&(st<<=1))&&(st=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function vt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-it(t)]=n}function yt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-it(n),a=1<<r;a&t|e[r]&t&&(e[r]|=t),n&=~a}}var bt=0;function At(e){return 1<(e&=-e)?4<e?268435455&e?16:536870912:4:1}var Et,wt,_t,Ct,St,kt=!1,Tt=[],xt=null,It=null,Pt=null,Nt=new Map,Bt=new Map,Lt=[],Rt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Mt(e,t){switch(e){case"focusin":case"focusout":xt=null;break;case"dragenter":case"dragleave":It=null;break;case"mouseover":case"mouseout":Pt=null;break;case"pointerover":case"pointerout":Nt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Bt.delete(t.pointerId)}}function Ot(e,t,n,r,a,o){return null===e||e.nativeEvent!==o?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:o,targetContainers:[a]},null!==t&&null!==(t=ba(t))&&wt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function Ht(e){var t=ya(e.target);if(null!==t){var n=je(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void St(e.priority,function(){_t(n)})}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Ft(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Xt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=ba(n))&&wt(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);Ae=r,n.target.dispatchEvent(r),Ae=null,t.shift()}return!0}function Dt(e,t,n){Ft(e)&&n.delete(t)}function zt(){kt=!1,null!==xt&&Ft(xt)&&(xt=null),null!==It&&Ft(It)&&(It=null),null!==Pt&&Ft(Pt)&&(Pt=null),Nt.forEach(Dt),Bt.forEach(Dt)}function Ut(e,t){e.blockedOn===t&&(e.blockedOn=null,kt||(kt=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,zt)))}function jt(e){function t(t){return Ut(t,e)}if(0<Tt.length){Ut(Tt[0],e);for(var n=1;n<Tt.length;n++){var r=Tt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==xt&&Ut(xt,e),null!==It&&Ut(It,e),null!==Pt&&Ut(Pt,e),Nt.forEach(t),Bt.forEach(t),n=0;n<Lt.length;n++)(r=Lt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Lt.length&&null===(n=Lt[0]).blockedOn;)Ht(n),null===n.blockedOn&&Lt.shift()}var Gt=A.ReactCurrentBatchConfig,Vt=!0;function Wt(e,t,n,r){var a=bt,o=Gt.transition;Gt.transition=null;try{bt=1,Qt(e,t,n,r)}finally{bt=a,Gt.transition=o}}function $t(e,t,n,r){var a=bt,o=Gt.transition;Gt.transition=null;try{bt=4,Qt(e,t,n,r)}finally{bt=a,Gt.transition=o}}function Qt(e,t,n,r){if(Vt){var a=Xt(e,t,n,r);if(null===a)Vr(e,t,r,Yt,n),Mt(e,r);else if(function(e,t,n,r,a){switch(t){case"focusin":return xt=Ot(xt,e,t,n,r,a),!0;case"dragenter":return It=Ot(It,e,t,n,r,a),!0;case"mouseover":return Pt=Ot(Pt,e,t,n,r,a),!0;case"pointerover":var o=a.pointerId;return Nt.set(o,Ot(Nt.get(o)||null,e,t,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,Bt.set(o,Ot(Bt.get(o)||null,e,t,n,r,a)),!0}return!1}(a,e,t,n,r))r.stopPropagation();else if(Mt(e,r),4&t&&-1<Rt.indexOf(e)){for(;null!==a;){var o=ba(a);if(null!==o&&Et(o),null===(o=Xt(e,t,n,r))&&Vr(e,t,r,Yt,n),o===a)break;a=o}null!==a&&r.stopPropagation()}else Vr(e,t,r,null,n)}}var Yt=null;function Xt(e,t,n,r){if(Yt=null,null!==(e=ya(e=Ee(r))))if(null===(t=je(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ge(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Yt=e,null}function Kt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Ze()){case Je:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var qt=null,Zt=null,Jt=null;function en(){if(Jt)return Jt;var e,t,n=Zt,r=n.length,a="value"in qt?qt.value:qt.textContent,o=a.length;for(e=0;e<r&&n[e]===a[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===a[o-t];t++);return Jt=a.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function an(e){function t(t,n,r,a,o){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return H(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var on,ln,un,sn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},cn=an(sn),fn=H({},sn,{view:0,detail:0}),dn=an(fn),pn=H({},fn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Sn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==un&&(un&&"mousemove"===e.type?(on=e.screenX-un.screenX,ln=e.screenY-un.screenY):ln=on=0,un=e),on)},movementY:function(e){return"movementY"in e?e.movementY:ln}}),hn=an(pn),mn=an(H({},pn,{dataTransfer:0})),gn=an(H({},fn,{relatedTarget:0})),vn=an(H({},sn,{animationName:0,elapsedTime:0,pseudoElement:0})),yn=H({},sn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),bn=an(yn),An=an(H({},sn,{data:0})),En={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},wn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},_n={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Cn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=_n[e])&&!!t[e]}function Sn(){return Cn}var kn=H({},fn,{key:function(e){if(e.key){var t=En[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?wn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Sn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Tn=an(kn),xn=an(H({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),In=an(H({},fn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Sn})),Pn=an(H({},sn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Nn=H({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Bn=an(Nn),Ln=[9,13,27,32],Rn=c&&"CompositionEvent"in window,Mn=null;c&&"documentMode"in document&&(Mn=document.documentMode);var On=c&&"TextEvent"in window&&!Mn,Hn=c&&(!Rn||Mn&&8<Mn&&11>=Mn),Fn=String.fromCharCode(32),Dn=!1;function zn(e,t){switch(e){case"keyup":return-1!==Ln.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Un(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var jn=!1,Gn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Gn[e.type]:"textarea"===t}function Wn(e,t,n,r){ke(r),0<(t=$r(t,"onChange")).length&&(n=new cn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var $n=null,Qn=null;function Yn(e){Fr(e,0)}function Xn(e){if(Q(Aa(e)))return e}function Kn(e,t){if("change"===e)return t}var qn=!1;if(c){var Zn;if(c){var Jn="oninput"in document;if(!Jn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Jn="function"==typeof er.oninput}Zn=Jn}else Zn=!1;qn=Zn&&(!document.documentMode||9<document.documentMode)}function tr(){$n&&($n.detachEvent("onpropertychange",nr),Qn=$n=null)}function nr(e){if("value"===e.propertyName&&Xn(Qn)){var t=[];Wn(t,Qn,e,Ee(e)),Ne(Yn,t)}}function rr(e,t,n){"focusin"===e?(tr(),Qn=n,($n=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function ar(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Xn(Qn)}function or(e,t){if("click"===e)return Xn(t)}function ir(e,t){if("input"===e||"change"===e)return Xn(t)}var lr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function ur(e,t){if(lr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var a=n[r];if(!f.call(t,a)||!lr(e[a],t[a]))return!1}return!0}function sr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=sr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sr(r)}}function fr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?fr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dr(){for(var e=window,t=Y();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Y((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function hr(e){var t=dr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&fr(n.ownerDocument.documentElement,n)){if(null!==r&&pr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=n.textContent.length,o=Math.min(r.start,a);r=void 0===r.end?o:Math.min(r.end,a),!e.extend&&o>r&&(a=r,r=o,o=a),a=cr(n,o);var i=cr(n,r);a&&i&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),o>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var mr=c&&"documentMode"in document&&11>=document.documentMode,gr=null,vr=null,yr=null,br=!1;function Ar(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;br||null==gr||gr!==Y(r)||(r="selectionStart"in(r=gr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},yr&&ur(yr,r)||(yr=r,0<(r=$r(vr,"onSelect")).length&&(t=new cn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=gr)))}function Er(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var wr={animationend:Er("Animation","AnimationEnd"),animationiteration:Er("Animation","AnimationIteration"),animationstart:Er("Animation","AnimationStart"),transitionend:Er("Transition","TransitionEnd")},_r={},Cr={};function Sr(e){if(_r[e])return _r[e];if(!wr[e])return e;var t,n=wr[e];for(t in n)if(n.hasOwnProperty(t)&&t in Cr)return _r[e]=n[t];return e}c&&(Cr=document.createElement("div").style,"AnimationEvent"in window||(delete wr.animationend.animation,delete wr.animationiteration.animation,delete wr.animationstart.animation),"TransitionEvent"in window||delete wr.transitionend.transition);var kr=Sr("animationend"),Tr=Sr("animationiteration"),xr=Sr("animationstart"),Ir=Sr("transitionend"),Pr=new Map,Nr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Br(e,t){Pr.set(e,t),u(t,[e])}for(var Lr=0;Lr<Nr.length;Lr++){var Rr=Nr[Lr];Br(Rr.toLowerCase(),"on"+(Rr[0].toUpperCase()+Rr.slice(1)))}Br(kr,"onAnimationEnd"),Br(Tr,"onAnimationIteration"),Br(xr,"onAnimationStart"),Br("dblclick","onDoubleClick"),Br("focusin","onFocus"),Br("focusout","onBlur"),Br(Ir,"onTransitionEnd"),s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Mr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Or=new Set("cancel close invalid load scroll toggle".split(" ").concat(Mr));function Hr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,i,l,u,s){if(Ue.apply(this,arguments),Oe){if(!Oe)throw Error(o(198));var c=He;Oe=!1,He=null,Fe||(Fe=!0,De=c)}}(r,t,void 0,e),e.currentTarget=null}function Fr(e,t){t=!!(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var i=r.length-1;0<=i;i--){var l=r[i],u=l.instance,s=l.currentTarget;if(l=l.listener,u!==o&&a.isPropagationStopped())break e;Hr(a,l,s),o=u}else for(i=0;i<r.length;i++){if(u=(l=r[i]).instance,s=l.currentTarget,l=l.listener,u!==o&&a.isPropagationStopped())break e;Hr(a,l,s),o=u}}}if(Fe)throw e=De,Fe=!1,De=null,e}function Dr(e,t){var n=t[ma];void 0===n&&(n=t[ma]=new Set);var r=e+"__bubble";n.has(r)||(Gr(t,e,2,!1),n.add(r))}function zr(e,t,n){var r=0;t&&(r|=4),Gr(n,e,r,t)}var Ur="_reactListening"+Math.random().toString(36).slice(2);function jr(e){if(!e[Ur]){e[Ur]=!0,i.forEach(function(t){"selectionchange"!==t&&(Or.has(t)||zr(t,!1,e),zr(t,!0,e))});var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Ur]||(t[Ur]=!0,zr("selectionchange",!1,t))}}function Gr(e,t,n,r){switch(Kt(t)){case 1:var a=Wt;break;case 4:a=$t;break;default:a=Qt}n=a.bind(null,t,n,e),a=void 0,!Le||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Vr(e,t,n,r,a){var o=r;if(!(1&t||2&t||null===r))e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var l=r.stateNode.containerInfo;if(l===a||8===l.nodeType&&l.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var u=i.tag;if((3===u||4===u)&&((u=i.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;i=i.return}for(;null!==l;){if(null===(i=ya(l)))return;if(5===(u=i.tag)||6===u){r=o=i;continue e}l=l.parentNode}}r=r.return}Ne(function(){var r=o,a=Ee(n),i=[];e:{var l=Pr.get(e);if(void 0!==l){var u=cn,s=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":u=Tn;break;case"focusin":s="focus",u=gn;break;case"focusout":s="blur",u=gn;break;case"beforeblur":case"afterblur":u=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=hn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=In;break;case kr:case Tr:case xr:u=vn;break;case Ir:u=Pn;break;case"scroll":u=dn;break;case"wheel":u=Bn;break;case"copy":case"cut":case"paste":u=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=xn}var c=!!(4&t),f=!c&&"scroll"===e,d=c?null!==l?l+"Capture":null:l;c=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=Be(h,d))&&c.push(Wr(h,m,p))),f)break;h=h.return}0<c.length&&(l=new u(l,s,null,n,a),i.push({event:l,listeners:c}))}}if(!(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||n===Ae||!(s=n.relatedTarget||n.fromElement)||!ya(s)&&!s[ha])&&(u||l)&&(l=a.window===a?a:(l=a.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=r,null!==(s=(s=n.relatedTarget||n.toElement)?ya(s):null)&&(s!==(f=je(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=r),u!==s)){if(c=hn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=xn,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?l:Aa(u),p=null==s?l:Aa(s),(l=new c(m,h+"leave",u,n,a)).target=f,l.relatedTarget=p,m=null,ya(a)===r&&((c=new c(d,h+"enter",s,n,a)).target=p,c.relatedTarget=f,m=c),f=m,u&&s)e:{for(d=s,h=0,p=c=u;p;p=Qr(p))h++;for(p=0,m=d;m;m=Qr(m))p++;for(;0<h-p;)c=Qr(c),h--;for(;0<p-h;)d=Qr(d),p--;for(;h--;){if(c===d||null!==d&&c===d.alternate)break e;c=Qr(c),d=Qr(d)}c=null}else c=null;null!==u&&Yr(i,l,u,c,!1),null!==s&&null!==f&&Yr(i,f,s,c,!0)}if("select"===(u=(l=r?Aa(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var g=Kn;else if(Vn(l))if(qn)g=ir;else{g=ar;var v=rr}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(g=or);switch(g&&(g=g(e,r))?Wn(i,g,n,a):(v&&v(e,l,r),"focusout"===e&&(v=l._wrapperState)&&v.controlled&&"number"===l.type&&ee(l,"number",l.value)),v=r?Aa(r):window,e){case"focusin":(Vn(v)||"true"===v.contentEditable)&&(gr=v,vr=r,yr=null);break;case"focusout":yr=vr=gr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,Ar(i,n,a);break;case"selectionchange":if(mr)break;case"keydown":case"keyup":Ar(i,n,a)}var y;if(Rn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else jn?zn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Hn&&"ko"!==n.locale&&(jn||"onCompositionStart"!==b?"onCompositionEnd"===b&&jn&&(y=en()):(Zt="value"in(qt=a)?qt.value:qt.textContent,jn=!0)),0<(v=$r(r,b)).length&&(b=new An(b,e,null,n,a),i.push({event:b,listeners:v}),(y||null!==(y=Un(n)))&&(b.data=y))),(y=On?function(e,t){switch(e){case"compositionend":return Un(t);case"keypress":return 32!==t.which?null:(Dn=!0,Fn);case"textInput":return(e=t.data)===Fn&&Dn?null:e;default:return null}}(e,n):function(e,t){if(jn)return"compositionend"===e||!Rn&&zn(e,t)?(e=en(),Jt=Zt=qt=null,jn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Hn&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(r=$r(r,"onBeforeInput")).length&&(a=new An("onBeforeInput","beforeinput",null,n,a),i.push({event:a,listeners:r}),a.data=y)}Fr(i,t)})}function Wr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function $r(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=Be(e,n))&&r.unshift(Wr(e,o,a)),null!=(o=Be(e,t))&&r.push(Wr(e,o,a))),e=e.return}return r}function Qr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Yr(e,t,n,r,a){for(var o=t._reactName,i=[];null!==n&&n!==r;){var l=n,u=l.alternate,s=l.stateNode;if(null!==u&&u===r)break;5===l.tag&&null!==s&&(l=s,a?null!=(u=Be(n,o))&&i.unshift(Wr(n,u,l)):a||null!=(u=Be(n,o))&&i.push(Wr(n,u,l))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}var Xr=/\r\n?/g,Kr=/\u0000|\uFFFD/g;function qr(e){return("string"==typeof e?e:""+e).replace(Xr,"\n").replace(Kr,"")}function Zr(e,t,n){if(t=qr(t),qr(e)!==t&&n)throw Error(o(425))}function Jr(){}var ea=null,ta=null;function na(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ra="function"==typeof setTimeout?setTimeout:void 0,aa="function"==typeof clearTimeout?clearTimeout:void 0,oa="function"==typeof Promise?Promise:void 0,ia="function"==typeof queueMicrotask?queueMicrotask:void 0!==oa?function(e){return oa.resolve(null).then(e).catch(la)}:ra;function la(e){setTimeout(function(){throw e})}function ua(e,t){var n=t,r=0;do{var a=n.nextSibling;if(e.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0===r)return e.removeChild(a),void jt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=a}while(n);jt(t)}function sa(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ca(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var fa=Math.random().toString(36).slice(2),da="__reactFiber$"+fa,pa="__reactProps$"+fa,ha="__reactContainer$"+fa,ma="__reactEvents$"+fa,ga="__reactListeners$"+fa,va="__reactHandles$"+fa;function ya(e){var t=e[da];if(t)return t;for(var n=e.parentNode;n;){if(t=n[ha]||n[da]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ca(e);null!==e;){if(n=e[da])return n;e=ca(e)}return t}n=(e=n).parentNode}return null}function ba(e){return!(e=e[da]||e[ha])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Aa(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function Ea(e){return e[pa]||null}var wa=[],_a=-1;function Ca(e){return{current:e}}function Sa(e){0>_a||(e.current=wa[_a],wa[_a]=null,_a--)}function ka(e,t){_a++,wa[_a]=e.current,e.current=t}var Ta={},xa=Ca(Ta),Ia=Ca(!1),Pa=Ta;function Na(e,t){var n=e.type.contextTypes;if(!n)return Ta;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function Ba(e){return null!=e.childContextTypes}function La(){Sa(Ia),Sa(xa)}function Ra(e,t,n){if(xa.current!==Ta)throw Error(o(168));ka(xa,t),ka(Ia,n)}function Ma(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in t))throw Error(o(108,G(e)||"Unknown",a));return H({},n,r)}function Oa(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ta,Pa=xa.current,ka(xa,e),ka(Ia,Ia.current),!0}function Ha(e,t,n){var r=e.stateNode;if(!r)throw Error(o(169));n?(e=Ma(e,t,Pa),r.__reactInternalMemoizedMergedChildContext=e,Sa(Ia),Sa(xa),ka(xa,e)):Sa(Ia),ka(Ia,n)}var Fa=null,Da=!1,za=!1;function Ua(e){null===Fa?Fa=[e]:Fa.push(e)}function ja(){if(!za&&null!==Fa){za=!0;var e=0,t=bt;try{var n=Fa;for(bt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}Fa=null,Da=!1}catch(t){throw null!==Fa&&(Fa=Fa.slice(e+1)),Qe(Je,ja),t}finally{bt=t,za=!1}}return null}var Ga=[],Va=0,Wa=null,$a=0,Qa=[],Ya=0,Xa=null,Ka=1,qa="";function Za(e,t){Ga[Va++]=$a,Ga[Va++]=Wa,Wa=e,$a=t}function Ja(e,t,n){Qa[Ya++]=Ka,Qa[Ya++]=qa,Qa[Ya++]=Xa,Xa=e;var r=Ka;e=qa;var a=32-it(r)-1;r&=~(1<<a),n+=1;var o=32-it(t)+a;if(30<o){var i=a-a%5;o=(r&(1<<i)-1).toString(32),r>>=i,a-=i,Ka=1<<32-it(t)+a|n<<a|r,qa=o+e}else Ka=1<<o|n<<a|r,qa=e}function eo(e){null!==e.return&&(Za(e,1),Ja(e,1,0))}function to(e){for(;e===Wa;)Wa=Ga[--Va],Ga[Va]=null,$a=Ga[--Va],Ga[Va]=null;for(;e===Xa;)Xa=Qa[--Ya],Qa[Ya]=null,qa=Qa[--Ya],Qa[Ya]=null,Ka=Qa[--Ya],Qa[Ya]=null}var no=null,ro=null,ao=!1,oo=null;function io(e,t){var n=Ns(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function lo(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,no=e,ro=sa(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,no=e,ro=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Xa?{id:Ka,overflow:qa}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Ns(18,null,null,0)).stateNode=t,n.return=e,e.child=n,no=e,ro=null,!0);default:return!1}}function uo(e){return!(!(1&e.mode)||128&e.flags)}function so(e){if(ao){var t=ro;if(t){var n=t;if(!lo(e,t)){if(uo(e))throw Error(o(418));t=sa(n.nextSibling);var r=no;t&&lo(e,t)?io(r,n):(e.flags=-4097&e.flags|2,ao=!1,no=e)}}else{if(uo(e))throw Error(o(418));e.flags=-4097&e.flags|2,ao=!1,no=e}}}function co(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;no=e}function fo(e){if(e!==no)return!1;if(!ao)return co(e),ao=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!na(e.type,e.memoizedProps)),t&&(t=ro)){if(uo(e))throw po(),Error(o(418));for(;t;)io(e,t),t=sa(t.nextSibling)}if(co(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){ro=sa(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}ro=null}}else ro=no?sa(e.stateNode.nextSibling):null;return!0}function po(){for(var e=ro;e;)e=sa(e.nextSibling)}function ho(){ro=no=null,ao=!1}function mo(e){null===oo?oo=[e]:oo.push(e)}var go=A.ReactCurrentBatchConfig;function vo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var r=n.stateNode}if(!r)throw Error(o(147,e));var a=r,i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:(t=function(e){var t=a.refs;null===e?delete t[i]:t[i]=e},t._stringRef=i,t)}if("string"!=typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function yo(e,t){throw e=Object.prototype.toString.call(t),Error(o(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function bo(e){return(0,e._init)(e._payload)}function Ao(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Ls(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function l(t){return e&&null===t.alternate&&(t.flags|=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Hs(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function s(e,t,n,r){var o=n.type;return o===_?f(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===o||"object"==typeof o&&null!==o&&o.$$typeof===B&&bo(o)===t.type)?((r=a(t,n.props)).ref=vo(e,t,n),r.return=e,r):((r=Rs(n.type,n.key,n.props,null,e.mode,r)).ref=vo(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Fs(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function f(e,t,n,r,o){return null===t||7!==t.tag?((t=Ms(n,e.mode,r,o)).return=e,t):((t=a(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Hs(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case E:return(n=Rs(t.type,t.key,t.props,null,e.mode,n)).ref=vo(e,null,t),n.return=e,n;case w:return(t=Fs(t,e.mode,n)).return=e,t;case B:return d(e,(0,t._init)(t._payload),n)}if(te(t)||M(t))return(t=Ms(t,e.mode,n,null)).return=e,t;yo(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case E:return n.key===a?s(e,t,n,r):null;case w:return n.key===a?c(e,t,n,r):null;case B:return p(e,t,(a=n._init)(n._payload),r)}if(te(n)||M(n))return null!==a?null:f(e,t,n,r,null);yo(e,n)}return null}function h(e,t,n,r,a){if("string"==typeof r&&""!==r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case E:return s(t,e=e.get(null===r.key?n:r.key)||null,r,a);case w:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a);case B:return h(e,t,n,(0,r._init)(r._payload),a)}if(te(r)||M(r))return f(t,e=e.get(n)||null,r,a,null);yo(t,r)}return null}function m(a,o,l,u){for(var s=null,c=null,f=o,m=o=0,g=null;null!==f&&m<l.length;m++){f.index>m?(g=f,f=null):g=f.sibling;var v=p(a,f,l[m],u);if(null===v){null===f&&(f=g);break}e&&f&&null===v.alternate&&t(a,f),o=i(v,o,m),null===c?s=v:c.sibling=v,c=v,f=g}if(m===l.length)return n(a,f),ao&&Za(a,m),s;if(null===f){for(;m<l.length;m++)null!==(f=d(a,l[m],u))&&(o=i(f,o,m),null===c?s=f:c.sibling=f,c=f);return ao&&Za(a,m),s}for(f=r(a,f);m<l.length;m++)null!==(g=h(f,a,m,l[m],u))&&(e&&null!==g.alternate&&f.delete(null===g.key?m:g.key),o=i(g,o,m),null===c?s=g:c.sibling=g,c=g);return e&&f.forEach(function(e){return t(a,e)}),ao&&Za(a,m),s}function g(a,l,u,s){var c=M(u);if("function"!=typeof c)throw Error(o(150));if(null==(u=c.call(u)))throw Error(o(151));for(var f=c=null,m=l,g=l=0,v=null,y=u.next();null!==m&&!y.done;g++,y=u.next()){m.index>g?(v=m,m=null):v=m.sibling;var b=p(a,m,y.value,s);if(null===b){null===m&&(m=v);break}e&&m&&null===b.alternate&&t(a,m),l=i(b,l,g),null===f?c=b:f.sibling=b,f=b,m=v}if(y.done)return n(a,m),ao&&Za(a,g),c;if(null===m){for(;!y.done;g++,y=u.next())null!==(y=d(a,y.value,s))&&(l=i(y,l,g),null===f?c=y:f.sibling=y,f=y);return ao&&Za(a,g),c}for(m=r(a,m);!y.done;g++,y=u.next())null!==(y=h(m,a,g,y.value,s))&&(e&&null!==y.alternate&&m.delete(null===y.key?g:y.key),l=i(y,l,g),null===f?c=y:f.sibling=y,f=y);return e&&m.forEach(function(e){return t(a,e)}),ao&&Za(a,g),c}return function e(r,o,i,u){if("object"==typeof i&&null!==i&&i.type===_&&null===i.key&&(i=i.props.children),"object"==typeof i&&null!==i){switch(i.$$typeof){case E:e:{for(var s=i.key,c=o;null!==c;){if(c.key===s){if((s=i.type)===_){if(7===c.tag){n(r,c.sibling),(o=a(c,i.props.children)).return=r,r=o;break e}}else if(c.elementType===s||"object"==typeof s&&null!==s&&s.$$typeof===B&&bo(s)===c.type){n(r,c.sibling),(o=a(c,i.props)).ref=vo(r,c,i),o.return=r,r=o;break e}n(r,c);break}t(r,c),c=c.sibling}i.type===_?((o=Ms(i.props.children,r.mode,u,i.key)).return=r,r=o):((u=Rs(i.type,i.key,i.props,null,r.mode,u)).ref=vo(r,o,i),u.return=r,r=u)}return l(r);case w:e:{for(c=i.key;null!==o;){if(o.key===c){if(4===o.tag&&o.stateNode.containerInfo===i.containerInfo&&o.stateNode.implementation===i.implementation){n(r,o.sibling),(o=a(o,i.children||[])).return=r,r=o;break e}n(r,o);break}t(r,o),o=o.sibling}(o=Fs(i,r.mode,u)).return=r,r=o}return l(r);case B:return e(r,o,(c=i._init)(i._payload),u)}if(te(i))return m(r,o,i,u);if(M(i))return g(r,o,i,u);yo(r,i)}return"string"==typeof i&&""!==i||"number"==typeof i?(i=""+i,null!==o&&6===o.tag?(n(r,o.sibling),(o=a(o,i)).return=r,r=o):(n(r,o),(o=Hs(i,r.mode,u)).return=r,r=o),l(r)):n(r,o)}}var Eo=Ao(!0),wo=Ao(!1),_o=Ca(null),Co=null,So=null,ko=null;function To(){ko=So=Co=null}function xo(e){var t=_o.current;Sa(_o),e._currentValue=t}function Io(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function Po(e,t){Co=e,ko=So=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(bl=!0),e.firstContext=null)}function No(e){var t=e._currentValue;if(ko!==e)if(e={context:e,memoizedValue:t,next:null},null===So){if(null===Co)throw Error(o(308));So=e,Co.dependencies={lanes:0,firstContext:e}}else So=So.next=e;return t}var Bo=null;function Lo(e){null===Bo?Bo=[e]:Bo.push(e)}function Ro(e,t,n,r){var a=t.interleaved;return null===a?(n.next=n,Lo(t)):(n.next=a.next,a.next=n),t.interleaved=n,Mo(e,r)}function Mo(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var Oo=!1;function Ho(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Fo(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Do(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function zo(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,2&xu){var a=r.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),r.pending=t,Mo(e,n)}return null===(a=r.interleaved)?(t.next=t,Lo(r)):(t.next=a.next,a.next=t),r.interleaved=t,Mo(e,n)}function Uo(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,yt(e,n)}}function jo(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?a=o=i:o=o.next=i,n=n.next}while(null!==n);null===o?a=o=t:o=o.next=t}else a=o=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Go(e,t,n,r){var a=e.updateQueue;Oo=!1;var o=a.firstBaseUpdate,i=a.lastBaseUpdate,l=a.shared.pending;if(null!==l){a.shared.pending=null;var u=l,s=u.next;u.next=null,null===i?o=s:i.next=s,i=u;var c=e.alternate;null!==c&&(l=(c=c.updateQueue).lastBaseUpdate)!==i&&(null===l?c.firstBaseUpdate=s:l.next=s,c.lastBaseUpdate=u)}if(null!==o){var f=a.baseState;for(i=0,c=s=u=null,l=o;;){var d=l.lane,p=l.eventTime;if((r&d)===d){null!==c&&(c=c.next={eventTime:p,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});e:{var h=e,m=l;switch(d=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){f=h.call(p,f,d);break e}f=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null==(d="function"==typeof(h=m.payload)?h.call(p,f,d):h))break e;f=H({},f,d);break e;case 2:Oo=!0}}null!==l.callback&&0!==l.lane&&(e.flags|=64,null===(d=a.effects)?a.effects=[l]:d.push(l))}else p={eventTime:p,lane:d,tag:l.tag,payload:l.payload,callback:l.callback,next:null},null===c?(s=c=p,u=f):c=c.next=p,i|=d;if(null===(l=l.next)){if(null===(l=a.shared.pending))break;l=(d=l).next,d.next=null,a.lastBaseUpdate=d,a.shared.pending=null}}if(null===c&&(u=f),a.baseState=u,a.firstBaseUpdate=s,a.lastBaseUpdate=c,null!==(t=a.shared.interleaved)){a=t;do{i|=a.lane,a=a.next}while(a!==t)}else null===o&&(a.shared.lanes=0);Ou|=i,e.lanes=i,e.memoizedState=f}}function Vo(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(o(191,a));a.call(r)}}}var Wo={},$o=Ca(Wo),Qo=Ca(Wo),Yo=Ca(Wo);function Xo(e){if(e===Wo)throw Error(o(174));return e}function Ko(e,t){switch(ka(Yo,t),ka(Qo,e),ka($o,Wo),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ue(null,"");break;default:t=ue(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Sa($o),ka($o,t)}function qo(){Sa($o),Sa(Qo),Sa(Yo)}function Zo(e){Xo(Yo.current);var t=Xo($o.current),n=ue(t,e.type);t!==n&&(ka(Qo,e),ka($o,n))}function Jo(e){Qo.current===e&&(Sa($o),Sa(Qo))}var ei=Ca(0);function ti(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(128&t.flags)return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ni=[];function ri(){for(var e=0;e<ni.length;e++)ni[e]._workInProgressVersionPrimary=null;ni.length=0}var ai=A.ReactCurrentDispatcher,oi=A.ReactCurrentBatchConfig,ii=0,li=null,ui=null,si=null,ci=!1,fi=!1,di=0,pi=0;function hi(){throw Error(o(321))}function mi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!lr(e[n],t[n]))return!1;return!0}function gi(e,t,n,r,a,i){if(ii=i,li=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ai.current=null===e||null===e.memoizedState?Ji:el,e=n(r,a),fi){i=0;do{if(fi=!1,di=0,25<=i)throw Error(o(301));i+=1,si=ui=null,t.updateQueue=null,ai.current=tl,e=n(r,a)}while(fi)}if(ai.current=Zi,t=null!==ui&&null!==ui.next,ii=0,si=ui=li=null,ci=!1,t)throw Error(o(300));return e}function vi(){var e=0!==di;return di=0,e}function yi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===si?li.memoizedState=si=e:si=si.next=e,si}function bi(){if(null===ui){var e=li.alternate;e=null!==e?e.memoizedState:null}else e=ui.next;var t=null===si?li.memoizedState:si.next;if(null!==t)si=t,ui=e;else{if(null===e)throw Error(o(310));e={memoizedState:(ui=e).memoizedState,baseState:ui.baseState,baseQueue:ui.baseQueue,queue:ui.queue,next:null},null===si?li.memoizedState=si=e:si=si.next=e}return si}function Ai(e,t){return"function"==typeof t?t(e):t}function Ei(e){var t=bi(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=ui,a=r.baseQueue,i=n.pending;if(null!==i){if(null!==a){var l=a.next;a.next=i.next,i.next=l}r.baseQueue=a=i,n.pending=null}if(null!==a){i=a.next,r=r.baseState;var u=l=null,s=null,c=i;do{var f=c.lane;if((ii&f)===f)null!==s&&(s=s.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var d={lane:f,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===s?(u=s=d,l=r):s=s.next=d,li.lanes|=f,Ou|=f}c=c.next}while(null!==c&&c!==i);null===s?l=r:s.next=u,lr(r,t.memoizedState)||(bl=!0),t.memoizedState=r,t.baseState=l,t.baseQueue=s,n.lastRenderedState=r}if(null!==(e=n.interleaved)){a=e;do{i=a.lane,li.lanes|=i,Ou|=i,a=a.next}while(a!==e)}else null===a&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function wi(e){var t=bi(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,i=t.memoizedState;if(null!==a){n.pending=null;var l=a=a.next;do{i=e(i,l.action),l=l.next}while(l!==a);lr(i,t.memoizedState)||(bl=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function _i(){}function Ci(e,t){var n=li,r=bi(),a=t(),i=!lr(r.memoizedState,a);if(i&&(r.memoizedState=a,bl=!0),r=r.queue,Oi(Ti.bind(null,n,r,e),[e]),r.getSnapshot!==t||i||null!==si&&1&si.memoizedState.tag){if(n.flags|=2048,Ni(9,ki.bind(null,n,r,a,t),void 0,null),null===Iu)throw Error(o(349));30&ii||Si(n,t,a)}return a}function Si(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=li.updateQueue)?(t={lastEffect:null,stores:null},li.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function ki(e,t,n,r){t.value=n,t.getSnapshot=r,xi(t)&&Ii(e)}function Ti(e,t,n){return n(function(){xi(t)&&Ii(e)})}function xi(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!lr(e,n)}catch(e){return!0}}function Ii(e){var t=Mo(e,1);null!==t&&ns(t,e,1,-1)}function Pi(e){var t=yi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ai,lastRenderedState:e},t.queue=e,e=e.dispatch=Yi.bind(null,li,e),[t.memoizedState,e]}function Ni(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=li.updateQueue)?(t={lastEffect:null,stores:null},li.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Bi(){return bi().memoizedState}function Li(e,t,n,r){var a=yi();li.flags|=e,a.memoizedState=Ni(1|t,n,void 0,void 0===r?null:r)}function Ri(e,t,n,r){var a=bi();r=void 0===r?null:r;var o=void 0;if(null!==ui){var i=ui.memoizedState;if(o=i.destroy,null!==r&&mi(r,i.deps))return void(a.memoizedState=Ni(t,n,o,r))}li.flags|=e,a.memoizedState=Ni(1|t,n,o,r)}function Mi(e,t){return Li(8390656,8,e,t)}function Oi(e,t){return Ri(2048,8,e,t)}function Hi(e,t){return Ri(4,2,e,t)}function Fi(e,t){return Ri(4,4,e,t)}function Di(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function zi(e,t,n){return n=null!=n?n.concat([e]):null,Ri(4,4,Di.bind(null,t,e),n)}function Ui(){}function ji(e,t){var n=bi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&mi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Gi(e,t){var n=bi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&mi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Vi(e,t,n){return 21&ii?(lr(n,t)||(n=mt(),li.lanes|=n,Ou|=n,e.baseState=!0),t):(e.baseState&&(e.baseState=!1,bl=!0),e.memoizedState=n)}function Wi(e,t){var n=bt;bt=0!==n&&4>n?n:4,e(!0);var r=oi.transition;oi.transition={};try{e(!1),t()}finally{bt=n,oi.transition=r}}function $i(){return bi().memoizedState}function Qi(e,t,n){var r=ts(e);n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},Xi(e)?Ki(t,n):null!==(n=Ro(e,t,n,r))&&(ns(n,e,r,es()),qi(n,t,r))}function Yi(e,t,n){var r=ts(e),a={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(Xi(e))Ki(t,a);else{var o=e.alternate;if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=t.lastRenderedReducer))try{var i=t.lastRenderedState,l=o(i,n);if(a.hasEagerState=!0,a.eagerState=l,lr(l,i)){var u=t.interleaved;return null===u?(a.next=a,Lo(t)):(a.next=u.next,u.next=a),void(t.interleaved=a)}}catch(e){}null!==(n=Ro(e,t,a,r))&&(ns(n,e,r,a=es()),qi(n,t,r))}}function Xi(e){var t=e.alternate;return e===li||null!==t&&t===li}function Ki(e,t){fi=ci=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function qi(e,t,n){if(4194240&n){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,yt(e,n)}}var Zi={readContext:No,useCallback:hi,useContext:hi,useEffect:hi,useImperativeHandle:hi,useInsertionEffect:hi,useLayoutEffect:hi,useMemo:hi,useReducer:hi,useRef:hi,useState:hi,useDebugValue:hi,useDeferredValue:hi,useTransition:hi,useMutableSource:hi,useSyncExternalStore:hi,useId:hi,unstable_isNewReconciler:!1},Ji={readContext:No,useCallback:function(e,t){return yi().memoizedState=[e,void 0===t?null:t],e},useContext:No,useEffect:Mi,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Li(4194308,4,Di.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Li(4194308,4,e,t)},useInsertionEffect:function(e,t){return Li(4,2,e,t)},useMemo:function(e,t){var n=yi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=yi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=Qi.bind(null,li,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},yi().memoizedState=e},useState:Pi,useDebugValue:Ui,useDeferredValue:function(e){return yi().memoizedState=e},useTransition:function(){var e=Pi(!1),t=e[0];return e=Wi.bind(null,e[1]),yi().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=li,a=yi();if(ao){if(void 0===n)throw Error(o(407));n=n()}else{if(n=t(),null===Iu)throw Error(o(349));30&ii||Si(r,t,n)}a.memoizedState=n;var i={value:n,getSnapshot:t};return a.queue=i,Mi(Ti.bind(null,r,i,e),[e]),r.flags|=2048,Ni(9,ki.bind(null,r,i,n,t),void 0,null),n},useId:function(){var e=yi(),t=Iu.identifierPrefix;if(ao){var n=qa;t=":"+t+"R"+(n=(Ka&~(1<<32-it(Ka)-1)).toString(32)+n),0<(n=di++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=pi++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},el={readContext:No,useCallback:ji,useContext:No,useEffect:Oi,useImperativeHandle:zi,useInsertionEffect:Hi,useLayoutEffect:Fi,useMemo:Gi,useReducer:Ei,useRef:Bi,useState:function(){return Ei(Ai)},useDebugValue:Ui,useDeferredValue:function(e){return Vi(bi(),ui.memoizedState,e)},useTransition:function(){return[Ei(Ai)[0],bi().memoizedState]},useMutableSource:_i,useSyncExternalStore:Ci,useId:$i,unstable_isNewReconciler:!1},tl={readContext:No,useCallback:ji,useContext:No,useEffect:Oi,useImperativeHandle:zi,useInsertionEffect:Hi,useLayoutEffect:Fi,useMemo:Gi,useReducer:wi,useRef:Bi,useState:function(){return wi(Ai)},useDebugValue:Ui,useDeferredValue:function(e){var t=bi();return null===ui?t.memoizedState=e:Vi(t,ui.memoizedState,e)},useTransition:function(){return[wi(Ai)[0],bi().memoizedState]},useMutableSource:_i,useSyncExternalStore:Ci,useId:$i,unstable_isNewReconciler:!1};function nl(e,t){if(e&&e.defaultProps){for(var n in t=H({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}function rl(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:H({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var al={isMounted:function(e){return!!(e=e._reactInternals)&&je(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=es(),a=ts(e),o=Do(r,a);o.payload=t,null!=n&&(o.callback=n),null!==(t=zo(e,o,a))&&(ns(t,e,a,r),Uo(t,e,a))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=es(),a=ts(e),o=Do(r,a);o.tag=1,o.payload=t,null!=n&&(o.callback=n),null!==(t=zo(e,o,a))&&(ns(t,e,a,r),Uo(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=es(),r=ts(e),a=Do(n,r);a.tag=2,null!=t&&(a.callback=t),null!==(t=zo(e,a,r))&&(ns(t,e,r,n),Uo(t,e,r))}};function ol(e,t,n,r,a,o,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,i):!(t.prototype&&t.prototype.isPureReactComponent&&ur(n,r)&&ur(a,o))}function il(e,t,n){var r=!1,a=Ta,o=t.contextType;return"object"==typeof o&&null!==o?o=No(o):(a=Ba(t)?Pa:xa.current,o=(r=null!=(r=t.contextTypes))?Na(e,a):Ta),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=al,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),t}function ll(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&al.enqueueReplaceState(t,t.state,null)}function ul(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs={},Ho(e);var o=t.contextType;"object"==typeof o&&null!==o?a.context=No(o):(o=Ba(t)?Pa:xa.current,a.context=Na(e,o)),a.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(rl(e,t,o,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&al.enqueueReplaceState(a,a.state,null),Go(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4194308)}function sl(e,t){try{var n="",r=t;do{n+=U(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a,digest:null}}function cl(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function fl(e,t){try{console.error(t.value)}catch(e){setTimeout(function(){throw e})}}var dl="function"==typeof WeakMap?WeakMap:Map;function pl(e,t,n){(n=Do(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Vu||(Vu=!0,Wu=r),fl(0,t)},n}function hl(e,t,n){(n=Do(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return r(a)},n.callback=function(){fl(0,t)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){fl(0,t),"function"!=typeof r&&(null===$u?$u=new Set([this]):$u.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function ml(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new dl;var a=new Set;r.set(t,a)}else void 0===(a=r.get(t))&&(a=new Set,r.set(t,a));a.has(n)||(a.add(n),e=Ss.bind(null,e,t,n),t.then(e,e))}function gl(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function vl(e,t,n,r,a){return 1&e.mode?(e.flags|=65536,e.lanes=a,e):(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Do(-1,1)).tag=2,zo(n,t,1))),n.lanes|=1),e)}var yl=A.ReactCurrentOwner,bl=!1;function Al(e,t,n,r){t.child=null===e?wo(t,null,n,r):Eo(t,e.child,n,r)}function El(e,t,n,r,a){n=n.render;var o=t.ref;return Po(t,a),r=gi(e,t,n,r,o,a),n=vi(),null===e||bl?(ao&&n&&eo(t),t.flags|=1,Al(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Vl(e,t,a))}function wl(e,t,n,r,a){if(null===e){var o=n.type;return"function"!=typeof o||Bs(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Rs(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,_l(e,t,o,r,a))}if(o=e.child,0===(e.lanes&a)){var i=o.memoizedProps;if((n=null!==(n=n.compare)?n:ur)(i,r)&&e.ref===t.ref)return Vl(e,t,a)}return t.flags|=1,(e=Ls(o,r)).ref=t.ref,e.return=t,t.child=e}function _l(e,t,n,r,a){if(null!==e){var o=e.memoizedProps;if(ur(o,r)&&e.ref===t.ref){if(bl=!1,t.pendingProps=r=o,0===(e.lanes&a))return t.lanes=e.lanes,Vl(e,t,a);131072&e.flags&&(bl=!0)}}return kl(e,t,n,r,a)}function Cl(e,t,n){var r=t.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(1&t.mode){if(!(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,ka(Lu,Bu),Bu|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==o?o.baseLanes:n,ka(Lu,Bu),Bu|=r}else t.memoizedState={baseLanes:0,cachePool:null,transitions:null},ka(Lu,Bu),Bu|=n;else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,ka(Lu,Bu),Bu|=r;return Al(e,t,a,n),t.child}function Sl(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function kl(e,t,n,r,a){var o=Ba(n)?Pa:xa.current;return o=Na(t,o),Po(t,a),n=gi(e,t,n,r,o,a),r=vi(),null===e||bl?(ao&&r&&eo(t),t.flags|=1,Al(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Vl(e,t,a))}function Tl(e,t,n,r,a){if(Ba(n)){var o=!0;Oa(t)}else o=!1;if(Po(t,a),null===t.stateNode)Gl(e,t),il(t,n,r),ul(t,n,r,a),r=!0;else if(null===e){var i=t.stateNode,l=t.memoizedProps;i.props=l;var u=i.context,s=n.contextType;s="object"==typeof s&&null!==s?No(s):Na(t,s=Ba(n)?Pa:xa.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==r||u!==s)&&ll(t,i,r,s),Oo=!1;var d=t.memoizedState;i.state=d,Go(t,r,i,a),u=t.memoizedState,l!==r||d!==u||Ia.current||Oo?("function"==typeof c&&(rl(t,n,c,r),u=t.memoizedState),(l=Oo||ol(t,n,l,r,d,u,s))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4194308)):("function"==typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=s,r=l):("function"==typeof i.componentDidMount&&(t.flags|=4194308),r=!1)}else{i=t.stateNode,Fo(e,t),l=t.memoizedProps,s=t.type===t.elementType?l:nl(t.type,l),i.props=s,f=t.pendingProps,d=i.context,u="object"==typeof(u=n.contextType)&&null!==u?No(u):Na(t,u=Ba(n)?Pa:xa.current);var p=n.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(l!==f||d!==u)&&ll(t,i,r,u),Oo=!1,d=t.memoizedState,i.state=d,Go(t,r,i,a);var h=t.memoizedState;l!==f||d!==h||Ia.current||Oo?("function"==typeof p&&(rl(t,n,p,r),h=t.memoizedState),(s=Oo||ol(t,n,s,r,d,h,u)||!1)?(c||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,h,u),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=h),i.props=r,i.state=h,i.context=u,r=s):("function"!=typeof i.componentDidUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||l===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),r=!1)}return xl(e,t,n,r,o,a)}function xl(e,t,n,r,a,o){Sl(e,t);var i=!!(128&t.flags);if(!r&&!i)return a&&Ha(t,n,!1),Vl(e,t,o);r=t.stateNode,yl.current=t;var l=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=Eo(t,e.child,null,o),t.child=Eo(t,null,l,o)):Al(e,t,l,o),t.memoizedState=r.state,a&&Ha(t,n,!0),t.child}function Il(e){var t=e.stateNode;t.pendingContext?Ra(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ra(0,t.context,!1),Ko(e,t.containerInfo)}function Pl(e,t,n,r,a){return ho(),mo(a),t.flags|=256,Al(e,t,n,r),t.child}var Nl,Bl,Ll,Rl,Ml={dehydrated:null,treeContext:null,retryLane:0};function Ol(e){return{baseLanes:e,cachePool:null,transitions:null}}function Hl(e,t,n){var r,a=t.pendingProps,i=ei.current,l=!1,u=!!(128&t.flags);if((r=u)||(r=(null===e||null!==e.memoizedState)&&!!(2&i)),r?(l=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),ka(ei,1&i),null===e)return so(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(1&t.mode?"$!"===e.data?t.lanes=8:t.lanes=1073741824:t.lanes=1,null):(u=a.children,e=a.fallback,l?(a=t.mode,l=t.child,u={mode:"hidden",children:u},1&a||null===l?l=Os(u,a,0,null):(l.childLanes=0,l.pendingProps=u),e=Ms(e,a,n,null),l.return=t,e.return=t,l.sibling=e,t.child=l,t.child.memoizedState=Ol(n),t.memoizedState=Ml,e):Fl(t,u));if(null!==(i=e.memoizedState)&&null!==(r=i.dehydrated))return function(e,t,n,r,a,i,l){if(n)return 256&t.flags?(t.flags&=-257,Dl(e,t,l,r=cl(Error(o(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(i=r.fallback,a=t.mode,r=Os({mode:"visible",children:r.children},a,0,null),(i=Ms(i,a,l,null)).flags|=2,r.return=t,i.return=t,r.sibling=i,t.child=r,1&t.mode&&Eo(t,e.child,null,l),t.child.memoizedState=Ol(l),t.memoizedState=Ml,i);if(!(1&t.mode))return Dl(e,t,l,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var u=r.dgst;return r=u,Dl(e,t,l,r=cl(i=Error(o(419)),r,void 0))}if(u=0!==(l&e.childLanes),bl||u){if(null!==(r=Iu)){switch(l&-l){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=0!==(a&(r.suspendedLanes|l))?0:a)&&a!==i.retryLane&&(i.retryLane=a,Mo(e,a),ns(r,e,a,-1))}return ms(),Dl(e,t,l,r=cl(Error(o(421))))}return"$?"===a.data?(t.flags|=128,t.child=e.child,t=Ts.bind(null,e),a._reactRetry=t,null):(e=i.treeContext,ro=sa(a.nextSibling),no=t,ao=!0,oo=null,null!==e&&(Qa[Ya++]=Ka,Qa[Ya++]=qa,Qa[Ya++]=Xa,Ka=e.id,qa=e.overflow,Xa=t),(t=Fl(t,r.children)).flags|=4096,t)}(e,t,u,a,r,i,n);if(l){l=a.fallback,u=t.mode,r=(i=e.child).sibling;var s={mode:"hidden",children:a.children};return 1&u||t.child===i?(a=Ls(i,s)).subtreeFlags=14680064&i.subtreeFlags:((a=t.child).childLanes=0,a.pendingProps=s,t.deletions=null),null!==r?l=Ls(r,l):(l=Ms(l,u,n,null)).flags|=2,l.return=t,a.return=t,a.sibling=l,t.child=a,a=l,l=t.child,u=null===(u=e.child.memoizedState)?Ol(n):{baseLanes:u.baseLanes|n,cachePool:null,transitions:u.transitions},l.memoizedState=u,l.childLanes=e.childLanes&~n,t.memoizedState=Ml,a}return e=(l=e.child).sibling,a=Ls(l,{mode:"visible",children:a.children}),!(1&t.mode)&&(a.lanes=n),a.return=t,a.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=a,t.memoizedState=null,a}function Fl(e,t){return(t=Os({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Dl(e,t,n,r){return null!==r&&mo(r),Eo(t,e.child,null,n),(e=Fl(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function zl(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),Io(e.return,t,n)}function Ul(e,t,n,r,a){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=a)}function jl(e,t,n){var r=t.pendingProps,a=r.revealOrder,o=r.tail;if(Al(e,t,r.children,n),2&(r=ei.current))r=1&r|2,t.flags|=128;else{if(null!==e&&128&e.flags)e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&zl(e,n,t);else if(19===e.tag)zl(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ka(ei,r),1&t.mode)switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===ti(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Ul(t,!1,a,n,o);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===ti(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Ul(t,!0,n,null,o);break;case"together":Ul(t,!1,null,null,void 0);break;default:t.memoizedState=null}else t.memoizedState=null;return t.child}function Gl(e,t){!(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Vl(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ou|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=Ls(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Ls(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Wl(e,t){if(!ao)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function $l(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Ql(e,t,n){var r=t.pendingProps;switch(to(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return $l(t),null;case 1:case 17:return Ba(t.type)&&La(),$l(t),null;case 3:return r=t.stateNode,qo(),Sa(Ia),Sa(xa),ri(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(fo(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&!(256&t.flags)||(t.flags|=1024,null!==oo&&(is(oo),oo=null))),Bl(e,t),$l(t),null;case 5:Jo(t);var a=Xo(Yo.current);if(n=t.type,null!==e&&null!=t.stateNode)Ll(e,t,n,r,a),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(o(166));return $l(t),null}if(e=Xo($o.current),fo(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[da]=t,r[pa]=i,e=!!(1&t.mode),n){case"dialog":Dr("cancel",r),Dr("close",r);break;case"iframe":case"object":case"embed":Dr("load",r);break;case"video":case"audio":for(a=0;a<Mr.length;a++)Dr(Mr[a],r);break;case"source":Dr("error",r);break;case"img":case"image":case"link":Dr("error",r),Dr("load",r);break;case"details":Dr("toggle",r);break;case"input":K(r,i),Dr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Dr("invalid",r);break;case"textarea":ae(r,i),Dr("invalid",r)}for(var u in ye(n,i),a=null,i)if(i.hasOwnProperty(u)){var s=i[u];"children"===u?"string"==typeof s?r.textContent!==s&&(!0!==i.suppressHydrationWarning&&Zr(r.textContent,s,e),a=["children",s]):"number"==typeof s&&r.textContent!==""+s&&(!0!==i.suppressHydrationWarning&&Zr(r.textContent,s,e),a=["children",""+s]):l.hasOwnProperty(u)&&null!=s&&"onScroll"===u&&Dr("scroll",r)}switch(n){case"input":$(r),J(r,i,!0);break;case"textarea":$(r),ie(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Jr)}r=a,t.updateQueue=r,null!==r&&(t.flags|=4)}else{u=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=le(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=u.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=u.createElement(n,{is:r.is}):(e=u.createElement(n),"select"===n&&(u=e,r.multiple?u.multiple=!0:r.size&&(u.size=r.size))):e=u.createElementNS(e,n),e[da]=t,e[pa]=r,Nl(e,t,!1,!1),t.stateNode=e;e:{switch(u=be(n,r),n){case"dialog":Dr("cancel",e),Dr("close",e),a=r;break;case"iframe":case"object":case"embed":Dr("load",e),a=r;break;case"video":case"audio":for(a=0;a<Mr.length;a++)Dr(Mr[a],e);a=r;break;case"source":Dr("error",e),a=r;break;case"img":case"image":case"link":Dr("error",e),Dr("load",e),a=r;break;case"details":Dr("toggle",e),a=r;break;case"input":K(e,r),a=X(e,r),Dr("invalid",e);break;case"option":default:a=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=H({},r,{value:void 0}),Dr("invalid",e);break;case"textarea":ae(e,r),a=re(e,r),Dr("invalid",e)}for(i in ye(n,a),s=a)if(s.hasOwnProperty(i)){var c=s[i];"style"===i?ge(e,c):"dangerouslySetInnerHTML"===i?null!=(c=c?c.__html:void 0)&&fe(e,c):"children"===i?"string"==typeof c?("textarea"!==n||""!==c)&&de(e,c):"number"==typeof c&&de(e,""+c):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(l.hasOwnProperty(i)?null!=c&&"onScroll"===i&&Dr("scroll",e):null!=c&&b(e,i,c,u))}switch(n){case"input":$(e),J(e,r,!1);break;case"textarea":$(e),ie(e);break;case"option":null!=r.value&&e.setAttribute("value",""+V(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?ne(e,!!r.multiple,i,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Jr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return $l(t),null;case 6:if(e&&null!=t.stateNode)Rl(e,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(o(166));if(n=Xo(Yo.current),Xo($o.current),fo(t)){if(r=t.stateNode,n=t.memoizedProps,r[da]=t,(i=r.nodeValue!==n)&&null!==(e=no))switch(e.tag){case 3:Zr(r.nodeValue,n,!!(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Zr(r.nodeValue,n,!!(1&e.mode))}i&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[da]=t,t.stateNode=r}return $l(t),null;case 13:if(Sa(ei),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ao&&null!==ro&&1&t.mode&&!(128&t.flags))po(),ho(),t.flags|=98560,i=!1;else if(i=fo(t),null!==r&&null!==r.dehydrated){if(null===e){if(!i)throw Error(o(318));if(!(i=null!==(i=t.memoizedState)?i.dehydrated:null))throw Error(o(317));i[da]=t}else ho(),!(128&t.flags)&&(t.memoizedState=null),t.flags|=4;$l(t),i=!1}else null!==oo&&(is(oo),oo=null),i=!0;if(!i)return 65536&t.flags?t:null}return 128&t.flags?(t.lanes=n,t):((r=null!==r)!=(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,1&t.mode&&(null===e||1&ei.current?0===Ru&&(Ru=3):ms())),null!==t.updateQueue&&(t.flags|=4),$l(t),null);case 4:return qo(),Bl(e,t),null===e&&jr(t.stateNode.containerInfo),$l(t),null;case 10:return xo(t.type._context),$l(t),null;case 19:if(Sa(ei),null===(i=t.memoizedState))return $l(t),null;if(r=!!(128&t.flags),null===(u=i.rendering))if(r)Wl(i,!1);else{if(0!==Ru||null!==e&&128&e.flags)for(e=t.child;null!==e;){if(null!==(u=ti(e))){for(t.flags|=128,Wl(i,!1),null!==(r=u.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=14680066,null===(u=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=u.childLanes,i.lanes=u.lanes,i.child=u.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=u.memoizedProps,i.memoizedState=u.memoizedState,i.updateQueue=u.updateQueue,i.type=u.type,e=u.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return ka(ei,1&ei.current|2),t.child}e=e.sibling}null!==i.tail&&qe()>ju&&(t.flags|=128,r=!0,Wl(i,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=ti(u))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Wl(i,!0),null===i.tail&&"hidden"===i.tailMode&&!u.alternate&&!ao)return $l(t),null}else 2*qe()-i.renderingStartTime>ju&&1073741824!==n&&(t.flags|=128,r=!0,Wl(i,!1),t.lanes=4194304);i.isBackwards?(u.sibling=t.child,t.child=u):(null!==(n=i.last)?n.sibling=u:t.child=u,i.last=u)}return null!==i.tail?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=qe(),t.sibling=null,n=ei.current,ka(ei,r?1&n|2:1&n),t):($l(t),null);case 22:case 23:return fs(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&1&t.mode?!!(1073741824&Bu)&&($l(t),6&t.subtreeFlags&&(t.flags|=8192)):$l(t),null;case 24:case 25:return null}throw Error(o(156,t.tag))}function Yl(e,t){switch(to(t),t.tag){case 1:return Ba(t.type)&&La(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return qo(),Sa(Ia),Sa(xa),ri(),65536&(e=t.flags)&&!(128&e)?(t.flags=-65537&e|128,t):null;case 5:return Jo(t),null;case 13:if(Sa(ei),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(o(340));ho()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Sa(ei),null;case 4:return qo(),null;case 10:return xo(t.type._context),null;case 22:case 23:return fs(),null;default:return null}}Nl=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Bl=function(){},Ll=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,Xo($o.current);var o,i=null;switch(n){case"input":a=X(e,a),r=X(e,r),i=[];break;case"select":a=H({},a,{value:void 0}),r=H({},r,{value:void 0}),i=[];break;case"textarea":a=re(e,a),r=re(e,r),i=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Jr)}for(c in ye(n,r),n=null,a)if(!r.hasOwnProperty(c)&&a.hasOwnProperty(c)&&null!=a[c])if("style"===c){var u=a[c];for(o in u)u.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(l.hasOwnProperty(c)?i||(i=[]):(i=i||[]).push(c,null));for(c in r){var s=r[c];if(u=null!=a?a[c]:void 0,r.hasOwnProperty(c)&&s!==u&&(null!=s||null!=u))if("style"===c)if(u){for(o in u)!u.hasOwnProperty(o)||s&&s.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in s)s.hasOwnProperty(o)&&u[o]!==s[o]&&(n||(n={}),n[o]=s[o])}else n||(i||(i=[]),i.push(c,n)),n=s;else"dangerouslySetInnerHTML"===c?(s=s?s.__html:void 0,u=u?u.__html:void 0,null!=s&&u!==s&&(i=i||[]).push(c,s)):"children"===c?"string"!=typeof s&&"number"!=typeof s||(i=i||[]).push(c,""+s):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(l.hasOwnProperty(c)?(null!=s&&"onScroll"===c&&Dr("scroll",e),i||u===s||(i=[])):(i=i||[]).push(c,s))}n&&(i=i||[]).push("style",n);var c=i;(t.updateQueue=c)&&(t.flags|=4)}},Rl=function(e,t,n,r){n!==r&&(t.flags|=4)};var Xl=!1,Kl=!1,ql="function"==typeof WeakSet?WeakSet:Set,Zl=null;function Jl(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){Cs(e,t,n)}else n.current=null}function eu(e,t,n){try{n()}catch(n){Cs(e,t,n)}}var tu=!1;function nu(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var o=a.destroy;a.destroy=void 0,void 0!==o&&eu(t,n,o)}a=a.next}while(a!==r)}}function ru(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function au(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function ou(e){var t=e.alternate;null!==t&&(e.alternate=null,ou(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[da],delete t[pa],delete t[ma],delete t[ga],delete t[va]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function iu(e){return 5===e.tag||3===e.tag||4===e.tag}function lu(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||iu(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function uu(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Jr));else if(4!==r&&null!==(e=e.child))for(uu(e,t,n),e=e.sibling;null!==e;)uu(e,t,n),e=e.sibling}function su(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(su(e,t,n),e=e.sibling;null!==e;)su(e,t,n),e=e.sibling}var cu=null,fu=!1;function du(e,t,n){for(n=n.child;null!==n;)pu(e,t,n),n=n.sibling}function pu(e,t,n){if(ot&&"function"==typeof ot.onCommitFiberUnmount)try{ot.onCommitFiberUnmount(at,n)}catch(e){}switch(n.tag){case 5:Kl||Jl(n,t);case 6:var r=cu,a=fu;cu=null,du(e,t,n),fu=a,null!==(cu=r)&&(fu?(e=cu,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):cu.removeChild(n.stateNode));break;case 18:null!==cu&&(fu?(e=cu,n=n.stateNode,8===e.nodeType?ua(e.parentNode,n):1===e.nodeType&&ua(e,n),jt(e)):ua(cu,n.stateNode));break;case 4:r=cu,a=fu,cu=n.stateNode.containerInfo,fu=!0,du(e,t,n),cu=r,fu=a;break;case 0:case 11:case 14:case 15:if(!Kl&&null!==(r=n.updateQueue)&&null!==(r=r.lastEffect)){a=r=r.next;do{var o=a,i=o.destroy;o=o.tag,void 0!==i&&(2&o||4&o)&&eu(n,t,i),a=a.next}while(a!==r)}du(e,t,n);break;case 1:if(!Kl&&(Jl(n,t),"function"==typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(e){Cs(n,t,e)}du(e,t,n);break;case 21:du(e,t,n);break;case 22:1&n.mode?(Kl=(r=Kl)||null!==n.memoizedState,du(e,t,n),Kl=r):du(e,t,n);break;default:du(e,t,n)}}function hu(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ql),t.forEach(function(t){var r=xs.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))})}}function mu(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var a=n[r];try{var i=e,l=t,u=l;e:for(;null!==u;){switch(u.tag){case 5:cu=u.stateNode,fu=!1;break e;case 3:case 4:cu=u.stateNode.containerInfo,fu=!0;break e}u=u.return}if(null===cu)throw Error(o(160));pu(i,l,a),cu=null,fu=!1;var s=a.alternate;null!==s&&(s.return=null),a.return=null}catch(e){Cs(a,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gu(t,e),t=t.sibling}function gu(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(mu(t,e),vu(e),4&r){try{nu(3,e,e.return),ru(3,e)}catch(t){Cs(e,e.return,t)}try{nu(5,e,e.return)}catch(t){Cs(e,e.return,t)}}break;case 1:mu(t,e),vu(e),512&r&&null!==n&&Jl(n,n.return);break;case 5:if(mu(t,e),vu(e),512&r&&null!==n&&Jl(n,n.return),32&e.flags){var a=e.stateNode;try{de(a,"")}catch(t){Cs(e,e.return,t)}}if(4&r&&null!=(a=e.stateNode)){var i=e.memoizedProps,l=null!==n?n.memoizedProps:i,u=e.type,s=e.updateQueue;if(e.updateQueue=null,null!==s)try{"input"===u&&"radio"===i.type&&null!=i.name&&q(a,i),be(u,l);var c=be(u,i);for(l=0;l<s.length;l+=2){var f=s[l],d=s[l+1];"style"===f?ge(a,d):"dangerouslySetInnerHTML"===f?fe(a,d):"children"===f?de(a,d):b(a,f,d,c)}switch(u){case"input":Z(a,i);break;case"textarea":oe(a,i);break;case"select":var p=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!i.multiple;var h=i.value;null!=h?ne(a,!!i.multiple,h,!1):p!==!!i.multiple&&(null!=i.defaultValue?ne(a,!!i.multiple,i.defaultValue,!0):ne(a,!!i.multiple,i.multiple?[]:"",!1))}a[pa]=i}catch(t){Cs(e,e.return,t)}}break;case 6:if(mu(t,e),vu(e),4&r){if(null===e.stateNode)throw Error(o(162));a=e.stateNode,i=e.memoizedProps;try{a.nodeValue=i}catch(t){Cs(e,e.return,t)}}break;case 3:if(mu(t,e),vu(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{jt(t.containerInfo)}catch(t){Cs(e,e.return,t)}break;case 4:default:mu(t,e),vu(e);break;case 13:mu(t,e),vu(e),8192&(a=e.child).flags&&(i=null!==a.memoizedState,a.stateNode.isHidden=i,!i||null!==a.alternate&&null!==a.alternate.memoizedState||(Uu=qe())),4&r&&hu(e);break;case 22:if(f=null!==n&&null!==n.memoizedState,1&e.mode?(Kl=(c=Kl)||f,mu(t,e),Kl=c):mu(t,e),vu(e),8192&r){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!f&&1&e.mode)for(Zl=e,f=e.child;null!==f;){for(d=Zl=f;null!==Zl;){switch(h=(p=Zl).child,p.tag){case 0:case 11:case 14:case 15:nu(4,p,p.return);break;case 1:Jl(p,p.return);var m=p.stateNode;if("function"==typeof m.componentWillUnmount){r=p,n=p.return;try{t=r,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(e){Cs(r,n,e)}}break;case 5:Jl(p,p.return);break;case 22:if(null!==p.memoizedState){Eu(d);continue}}null!==h?(h.return=p,Zl=h):Eu(d)}f=f.sibling}e:for(f=null,d=e;;){if(5===d.tag){if(null===f){f=d;try{a=d.stateNode,c?"function"==typeof(i=a.style).setProperty?i.setProperty("display","none","important"):i.display="none":(u=d.stateNode,l=null!=(s=d.memoizedProps.style)&&s.hasOwnProperty("display")?s.display:null,u.style.display=me("display",l))}catch(t){Cs(e,e.return,t)}}}else if(6===d.tag){if(null===f)try{d.stateNode.nodeValue=c?"":d.memoizedProps}catch(t){Cs(e,e.return,t)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;f===d&&(f=null),d=d.return}f===d&&(f=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:mu(t,e),vu(e),4&r&&hu(e);case 21:}}function vu(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(iu(n)){var r=n;break e}n=n.return}throw Error(o(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(de(a,""),r.flags&=-33),su(e,lu(e),a);break;case 3:case 4:var i=r.stateNode.containerInfo;uu(e,lu(e),i);break;default:throw Error(o(161))}}catch(t){Cs(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function yu(e,t,n){Zl=e,bu(e,t,n)}function bu(e,t,n){for(var r=!!(1&e.mode);null!==Zl;){var a=Zl,o=a.child;if(22===a.tag&&r){var i=null!==a.memoizedState||Xl;if(!i){var l=a.alternate,u=null!==l&&null!==l.memoizedState||Kl;l=Xl;var s=Kl;if(Xl=i,(Kl=u)&&!s)for(Zl=a;null!==Zl;)u=(i=Zl).child,22===i.tag&&null!==i.memoizedState?wu(a):null!==u?(u.return=i,Zl=u):wu(a);for(;null!==o;)Zl=o,bu(o,t,n),o=o.sibling;Zl=a,Xl=l,Kl=s}Au(e)}else 8772&a.subtreeFlags&&null!==o?(o.return=a,Zl=o):Au(e)}}function Au(e){for(;null!==Zl;){var t=Zl;if(8772&t.flags){var n=t.alternate;try{if(8772&t.flags)switch(t.tag){case 0:case 11:case 15:Kl||ru(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!Kl)if(null===n)r.componentDidMount();else{var a=t.elementType===t.type?n.memoizedProps:nl(t.type,n.memoizedProps);r.componentDidUpdate(a,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;null!==i&&Vo(t,i,r);break;case 3:var l=t.updateQueue;if(null!==l){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Vo(t,l,n)}break;case 5:var u=t.stateNode;if(null===n&&4&t.flags){n=u;var s=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":s.autoFocus&&n.focus();break;case"img":s.src&&(n.src=s.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var c=t.alternate;if(null!==c){var f=c.memoizedState;if(null!==f){var d=f.dehydrated;null!==d&&jt(d)}}}break;default:throw Error(o(163))}Kl||512&t.flags&&au(t)}catch(e){Cs(t,t.return,e)}}if(t===e){Zl=null;break}if(null!==(n=t.sibling)){n.return=t.return,Zl=n;break}Zl=t.return}}function Eu(e){for(;null!==Zl;){var t=Zl;if(t===e){Zl=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Zl=n;break}Zl=t.return}}function wu(e){for(;null!==Zl;){var t=Zl;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{ru(4,t)}catch(e){Cs(t,n,e)}break;case 1:var r=t.stateNode;if("function"==typeof r.componentDidMount){var a=t.return;try{r.componentDidMount()}catch(e){Cs(t,a,e)}}var o=t.return;try{au(t)}catch(e){Cs(t,o,e)}break;case 5:var i=t.return;try{au(t)}catch(e){Cs(t,i,e)}}}catch(e){Cs(t,t.return,e)}if(t===e){Zl=null;break}var l=t.sibling;if(null!==l){l.return=t.return,Zl=l;break}Zl=t.return}}var _u,Cu=Math.ceil,Su=A.ReactCurrentDispatcher,ku=A.ReactCurrentOwner,Tu=A.ReactCurrentBatchConfig,xu=0,Iu=null,Pu=null,Nu=0,Bu=0,Lu=Ca(0),Ru=0,Mu=null,Ou=0,Hu=0,Fu=0,Du=null,zu=null,Uu=0,ju=1/0,Gu=null,Vu=!1,Wu=null,$u=null,Qu=!1,Yu=null,Xu=0,Ku=0,qu=null,Zu=-1,Ju=0;function es(){return 6&xu?qe():-1!==Zu?Zu:Zu=qe()}function ts(e){return 1&e.mode?2&xu&&0!==Nu?Nu&-Nu:null!==go.transition?(0===Ju&&(Ju=mt()),Ju):0!==(e=bt)?e:e=void 0===(e=window.event)?16:Kt(e.type):1}function ns(e,t,n,r){if(50<Ku)throw Ku=0,qu=null,Error(o(185));vt(e,n,r),2&xu&&e===Iu||(e===Iu&&(!(2&xu)&&(Hu|=n),4===Ru&&ls(e,Nu)),rs(e,r),1===n&&0===xu&&!(1&t.mode)&&(ju=qe()+500,Da&&ja()))}function rs(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,o=e.pendingLanes;0<o;){var i=31-it(o),l=1<<i,u=a[i];-1===u?0!==(l&n)&&0===(l&r)||(a[i]=pt(l,t)):u<=t&&(e.expiredLanes|=l),o&=~l}}(e,t);var r=dt(e,e===Iu?Nu:0);if(0===r)null!==n&&Ye(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Ye(n),1===t)0===e.tag?function(e){Da=!0,Ua(e)}(us.bind(null,e)):Ua(us.bind(null,e)),ia(function(){!(6&xu)&&ja()}),n=null;else{switch(At(r)){case 1:n=Je;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Is(n,as.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function as(e,t){if(Zu=-1,Ju=0,6&xu)throw Error(o(327));var n=e.callbackNode;if(ws()&&e.callbackNode!==n)return null;var r=dt(e,e===Iu?Nu:0);if(0===r)return null;if(30&r||0!==(r&e.expiredLanes)||t)t=gs(e,r);else{t=r;var a=xu;xu|=2;var i=hs();for(Iu===e&&Nu===t||(Gu=null,ju=qe()+500,ds(e,t));;)try{ys();break}catch(t){ps(e,t)}To(),Su.current=i,xu=a,null!==Pu?t=0:(Iu=null,Nu=0,t=Ru)}if(0!==t){if(2===t&&0!==(a=ht(e))&&(r=a,t=os(e,a)),1===t)throw n=Mu,ds(e,0),ls(e,r),rs(e,qe()),n;if(6===t)ls(e,r);else{if(a=e.current.alternate,!(30&r||function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var a=n[r],o=a.getSnapshot;a=a.value;try{if(!lr(o(),a))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)||(t=gs(e,r),2===t&&(i=ht(e),0!==i&&(r=i,t=os(e,i))),1!==t)))throw n=Mu,ds(e,0),ls(e,r),rs(e,qe()),n;switch(e.finishedWork=a,e.finishedLanes=r,t){case 0:case 1:throw Error(o(345));case 2:case 5:Es(e,zu,Gu);break;case 3:if(ls(e,r),(130023424&r)===r&&10<(t=Uu+500-qe())){if(0!==dt(e,0))break;if(((a=e.suspendedLanes)&r)!==r){es(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=ra(Es.bind(null,e,zu,Gu),t);break}Es(e,zu,Gu);break;case 4:if(ls(e,r),(4194240&r)===r)break;for(t=e.eventTimes,a=-1;0<r;){var l=31-it(r);i=1<<l,(l=t[l])>a&&(a=l),r&=~i}if(r=a,10<(r=(120>(r=qe()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*Cu(r/1960))-r)){e.timeoutHandle=ra(Es.bind(null,e,zu,Gu),r);break}Es(e,zu,Gu);break;default:throw Error(o(329))}}}return rs(e,qe()),e.callbackNode===n?as.bind(null,e):null}function os(e,t){var n=Du;return e.current.memoizedState.isDehydrated&&(ds(e,t).flags|=256),2!==(e=gs(e,t))&&(t=zu,zu=n,null!==t&&is(t)),e}function is(e){null===zu?zu=e:zu.push.apply(zu,e)}function ls(e,t){for(t&=~Fu,t&=~Hu,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-it(t),r=1<<n;e[n]=-1,t&=~r}}function us(e){if(6&xu)throw Error(o(327));ws();var t=dt(e,0);if(!(1&t))return rs(e,qe()),null;var n=gs(e,t);if(0!==e.tag&&2===n){var r=ht(e);0!==r&&(t=r,n=os(e,r))}if(1===n)throw n=Mu,ds(e,0),ls(e,t),rs(e,qe()),n;if(6===n)throw Error(o(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Es(e,zu,Gu),rs(e,qe()),null}function ss(e,t){var n=xu;xu|=1;try{return e(t)}finally{0===(xu=n)&&(ju=qe()+500,Da&&ja())}}function cs(e){null!==Yu&&0===Yu.tag&&!(6&xu)&&ws();var t=xu;xu|=1;var n=Tu.transition,r=bt;try{if(Tu.transition=null,bt=1,e)return e()}finally{bt=r,Tu.transition=n,!(6&(xu=t))&&ja()}}function fs(){Bu=Lu.current,Sa(Lu)}function ds(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,aa(n)),null!==Pu)for(n=Pu.return;null!==n;){var r=n;switch(to(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&La();break;case 3:qo(),Sa(Ia),Sa(xa),ri();break;case 5:Jo(r);break;case 4:qo();break;case 13:case 19:Sa(ei);break;case 10:xo(r.type._context);break;case 22:case 23:fs()}n=n.return}if(Iu=e,Pu=e=Ls(e.current,null),Nu=Bu=t,Ru=0,Mu=null,Fu=Hu=Ou=0,zu=Du=null,null!==Bo){for(t=0;t<Bo.length;t++)if(null!==(r=(n=Bo[t]).interleaved)){n.interleaved=null;var a=r.next,o=n.pending;if(null!==o){var i=o.next;o.next=a,r.next=i}n.pending=r}Bo=null}return e}function ps(e,t){for(;;){var n=Pu;try{if(To(),ai.current=Zi,ci){for(var r=li.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}ci=!1}if(ii=0,si=ui=li=null,fi=!1,di=0,ku.current=null,null===n||null===n.return){Ru=1,Mu=t,Pu=null;break}e:{var i=e,l=n.return,u=n,s=t;if(t=Nu,u.flags|=32768,null!==s&&"object"==typeof s&&"function"==typeof s.then){var c=s,f=u,d=f.tag;if(!(1&f.mode||0!==d&&11!==d&&15!==d)){var p=f.alternate;p?(f.updateQueue=p.updateQueue,f.memoizedState=p.memoizedState,f.lanes=p.lanes):(f.updateQueue=null,f.memoizedState=null)}var h=gl(l);if(null!==h){h.flags&=-257,vl(h,l,u,0,t),1&h.mode&&ml(i,c,t),s=c;var m=(t=h).updateQueue;if(null===m){var g=new Set;g.add(s),t.updateQueue=g}else m.add(s);break e}if(!(1&t)){ml(i,c,t),ms();break e}s=Error(o(426))}else if(ao&&1&u.mode){var v=gl(l);if(null!==v){!(65536&v.flags)&&(v.flags|=256),vl(v,l,u,0,t),mo(sl(s,u));break e}}i=s=sl(s,u),4!==Ru&&(Ru=2),null===Du?Du=[i]:Du.push(i),i=l;do{switch(i.tag){case 3:i.flags|=65536,t&=-t,i.lanes|=t,jo(i,pl(0,s,t));break e;case 1:u=s;var y=i.type,b=i.stateNode;if(!(128&i.flags||"function"!=typeof y.getDerivedStateFromError&&(null===b||"function"!=typeof b.componentDidCatch||null!==$u&&$u.has(b)))){i.flags|=65536,t&=-t,i.lanes|=t,jo(i,hl(i,u,t));break e}}i=i.return}while(null!==i)}As(n)}catch(e){t=e,Pu===n&&null!==n&&(Pu=n=n.return);continue}break}}function hs(){var e=Su.current;return Su.current=Zi,null===e?Zi:e}function ms(){0!==Ru&&3!==Ru&&2!==Ru||(Ru=4),null===Iu||!(268435455&Ou)&&!(268435455&Hu)||ls(Iu,Nu)}function gs(e,t){var n=xu;xu|=2;var r=hs();for(Iu===e&&Nu===t||(Gu=null,ds(e,t));;)try{vs();break}catch(t){ps(e,t)}if(To(),xu=n,Su.current=r,null!==Pu)throw Error(o(261));return Iu=null,Nu=0,Ru}function vs(){for(;null!==Pu;)bs(Pu)}function ys(){for(;null!==Pu&&!Xe();)bs(Pu)}function bs(e){var t=_u(e.alternate,e,Bu);e.memoizedProps=e.pendingProps,null===t?As(e):Pu=t,ku.current=null}function As(e){var t=e;do{var n=t.alternate;if(e=t.return,32768&t.flags){if(null!==(n=Yl(n,t)))return n.flags&=32767,void(Pu=n);if(null===e)return Ru=6,void(Pu=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}else if(null!==(n=Ql(n,t,Bu)))return void(Pu=n);if(null!==(t=t.sibling))return void(Pu=t);Pu=t=e}while(null!==t);0===Ru&&(Ru=5)}function Es(e,t,n){var r=bt,a=Tu.transition;try{Tu.transition=null,bt=1,function(e,t,n,r){do{ws()}while(null!==Yu);if(6&xu)throw Error(o(327));n=e.finishedWork;var a=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(o(177));e.callbackNode=null,e.callbackPriority=0;var i=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var a=31-it(n),o=1<<a;t[a]=0,r[a]=-1,e[a]=-1,n&=~o}}(e,i),e===Iu&&(Pu=Iu=null,Nu=0),!(2064&n.subtreeFlags)&&!(2064&n.flags)||Qu||(Qu=!0,Is(tt,function(){return ws(),null})),i=!!(15990&n.flags),15990&n.subtreeFlags||i){i=Tu.transition,Tu.transition=null;var l=bt;bt=1;var u=xu;xu|=4,ku.current=null,function(e,t){if(ea=Vt,pr(e=dr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var a=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{n.nodeType,i.nodeType}catch(e){n=null;break e}var l=0,u=-1,s=-1,c=0,f=0,d=e,p=null;t:for(;;){for(var h;d!==n||0!==a&&3!==d.nodeType||(u=l+a),d!==i||0!==r&&3!==d.nodeType||(s=l+r),3===d.nodeType&&(l+=d.nodeValue.length),null!==(h=d.firstChild);)p=d,d=h;for(;;){if(d===e)break t;if(p===n&&++c===a&&(u=l),p===i&&++f===r&&(s=l),null!==(h=d.nextSibling))break;p=(d=p).parentNode}d=h}n=-1===u||-1===s?null:{start:u,end:s}}else n=null}n=n||{start:0,end:0}}else n=null;for(ta={focusedElem:e,selectionRange:n},Vt=!1,Zl=t;null!==Zl;)if(e=(t=Zl).child,1028&t.subtreeFlags&&null!==e)e.return=t,Zl=e;else for(;null!==Zl;){t=Zl;try{var m=t.alternate;if(1024&t.flags)switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,v=m.memoizedState,y=t.stateNode,b=y.getSnapshotBeforeUpdate(t.elementType===t.type?g:nl(t.type,g),v);y.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var A=t.stateNode.containerInfo;1===A.nodeType?A.textContent="":9===A.nodeType&&A.documentElement&&A.removeChild(A.documentElement);break;default:throw Error(o(163))}}catch(e){Cs(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Zl=e;break}Zl=t.return}m=tu,tu=!1}(e,n),gu(n,e),hr(ta),Vt=!!ea,ta=ea=null,e.current=n,yu(n,e,a),Ke(),xu=u,bt=l,Tu.transition=i}else e.current=n;if(Qu&&(Qu=!1,Yu=e,Xu=a),0===(i=e.pendingLanes)&&($u=null),function(e){if(ot&&"function"==typeof ot.onCommitFiberRoot)try{ot.onCommitFiberRoot(at,e,void 0,!(128&~e.current.flags))}catch(e){}}(n.stateNode),rs(e,qe()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)r((a=t[n]).value,{componentStack:a.stack,digest:a.digest});if(Vu)throw Vu=!1,e=Wu,Wu=null,e;!!(1&Xu)&&0!==e.tag&&ws(),1&(i=e.pendingLanes)?e===qu?Ku++:(Ku=0,qu=e):Ku=0,ja()}(e,t,n,r)}finally{Tu.transition=a,bt=r}return null}function ws(){if(null!==Yu){var e=At(Xu),t=Tu.transition,n=bt;try{if(Tu.transition=null,bt=16>e?16:e,null===Yu)var r=!1;else{if(e=Yu,Yu=null,Xu=0,6&xu)throw Error(o(331));var a=xu;for(xu|=4,Zl=e.current;null!==Zl;){var i=Zl,l=i.child;if(16&Zl.flags){var u=i.deletions;if(null!==u){for(var s=0;s<u.length;s++){var c=u[s];for(Zl=c;null!==Zl;){var f=Zl;switch(f.tag){case 0:case 11:case 15:nu(8,f,i)}var d=f.child;if(null!==d)d.return=f,Zl=d;else for(;null!==Zl;){var p=(f=Zl).sibling,h=f.return;if(ou(f),f===c){Zl=null;break}if(null!==p){p.return=h,Zl=p;break}Zl=h}}}var m=i.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var v=g.sibling;g.sibling=null,g=v}while(null!==g)}}Zl=i}}if(2064&i.subtreeFlags&&null!==l)l.return=i,Zl=l;else e:for(;null!==Zl;){if(2048&(i=Zl).flags)switch(i.tag){case 0:case 11:case 15:nu(9,i,i.return)}var y=i.sibling;if(null!==y){y.return=i.return,Zl=y;break e}Zl=i.return}}var b=e.current;for(Zl=b;null!==Zl;){var A=(l=Zl).child;if(2064&l.subtreeFlags&&null!==A)A.return=l,Zl=A;else e:for(l=b;null!==Zl;){if(2048&(u=Zl).flags)try{switch(u.tag){case 0:case 11:case 15:ru(9,u)}}catch(e){Cs(u,u.return,e)}if(u===l){Zl=null;break e}var E=u.sibling;if(null!==E){E.return=u.return,Zl=E;break e}Zl=u.return}}if(xu=a,ja(),ot&&"function"==typeof ot.onPostCommitFiberRoot)try{ot.onPostCommitFiberRoot(at,e)}catch(e){}r=!0}return r}finally{bt=n,Tu.transition=t}}return!1}function _s(e,t,n){e=zo(e,t=pl(0,t=sl(n,t),1),1),t=es(),null!==e&&(vt(e,1,t),rs(e,t))}function Cs(e,t,n){if(3===e.tag)_s(e,e,n);else for(;null!==t;){if(3===t.tag){_s(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===$u||!$u.has(r))){t=zo(t,e=hl(t,e=sl(n,e),1),1),e=es(),null!==t&&(vt(t,1,e),rs(t,e));break}}t=t.return}}function Ss(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=es(),e.pingedLanes|=e.suspendedLanes&n,Iu===e&&(Nu&n)===n&&(4===Ru||3===Ru&&(130023424&Nu)===Nu&&500>qe()-Uu?ds(e,0):Fu|=n),rs(e,t)}function ks(e,t){0===t&&(1&e.mode?(t=ct,!(130023424&(ct<<=1))&&(ct=4194304)):t=1);var n=es();null!==(e=Mo(e,t))&&(vt(e,t,n),rs(e,n))}function Ts(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),ks(e,n)}function xs(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(n=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(o(314))}null!==r&&r.delete(t),ks(e,n)}function Is(e,t){return Qe(e,t)}function Ps(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Ns(e,t,n,r){return new Ps(e,t,n,r)}function Bs(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Ls(e,t){var n=e.alternate;return null===n?((n=Ns(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Rs(e,t,n,r,a,i){var l=2;if(r=e,"function"==typeof e)Bs(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case _:return Ms(n.children,a,i,t);case C:l=8,a|=8;break;case S:return(e=Ns(12,n,t,2|a)).elementType=S,e.lanes=i,e;case I:return(e=Ns(13,n,t,a)).elementType=I,e.lanes=i,e;case P:return(e=Ns(19,n,t,a)).elementType=P,e.lanes=i,e;case L:return Os(n,a,i,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case k:l=10;break e;case T:l=9;break e;case x:l=11;break e;case N:l=14;break e;case B:l=16,r=null;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=Ns(l,n,t,a)).elementType=e,t.type=r,t.lanes=i,t}function Ms(e,t,n,r){return(e=Ns(7,e,r,t)).lanes=n,e}function Os(e,t,n,r){return(e=Ns(22,e,r,t)).elementType=L,e.lanes=n,e.stateNode={isHidden:!1},e}function Hs(e,t,n){return(e=Ns(6,e,null,t)).lanes=n,e}function Fs(e,t,n){return(t=Ns(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Ds(e,t,n,r,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function zs(e,t,n,r,a,o,i,l,u){return e=new Ds(e,t,n,l,u),1===t?(t=1,!0===o&&(t|=8)):t=0,o=Ns(3,null,null,t),e.current=o,o.stateNode=e,o.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ho(o),e}function Us(e){if(!e)return Ta;e:{if(je(e=e._reactInternals)!==e||1!==e.tag)throw Error(o(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Ba(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(o(171))}if(1===e.tag){var n=e.type;if(Ba(n))return Ma(e,n,t)}return t}function js(e,t,n,r,a,o,i,l,u){return(e=zs(n,r,!0,e,0,o,0,l,u)).context=Us(null),n=e.current,(o=Do(r=es(),a=ts(n))).callback=null!=t?t:null,zo(n,o,a),e.current.lanes=a,vt(e,a,r),rs(e,r),e}function Gs(e,t,n,r){var a=t.current,o=es(),i=ts(a);return n=Us(n),null===t.context?t.context=n:t.pendingContext=n,(t=Do(o,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=zo(a,t,i))&&(ns(e,a,i,o),Uo(e,a,i)),i}function Vs(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Ws(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function $s(e,t){Ws(e,t),(e=e.alternate)&&Ws(e,t)}_u=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Ia.current)bl=!0;else{if(0===(e.lanes&n)&&!(128&t.flags))return bl=!1,function(e,t,n){switch(t.tag){case 3:Il(t),ho();break;case 5:Zo(t);break;case 1:Ba(t.type)&&Oa(t);break;case 4:Ko(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,a=t.memoizedProps.value;ka(_o,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(ka(ei,1&ei.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Hl(e,t,n):(ka(ei,1&ei.current),null!==(e=Vl(e,t,n))?e.sibling:null);ka(ei,1&ei.current);break;case 19:if(r=0!==(n&t.childLanes),128&e.flags){if(r)return jl(e,t,n);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ka(ei,ei.current),r)break;return null;case 22:case 23:return t.lanes=0,Cl(e,t,n)}return Vl(e,t,n)}(e,t,n);bl=!!(131072&e.flags)}else bl=!1,ao&&1048576&t.flags&&Ja(t,$a,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;Gl(e,t),e=t.pendingProps;var a=Na(t,xa.current);Po(t,n),a=gi(null,t,r,e,a,n);var i=vi();return t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ba(r)?(i=!0,Oa(t)):i=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Ho(t),a.updater=al,t.stateNode=a,a._reactInternals=t,ul(t,r,e,n),t=xl(null,t,r,!0,i,n)):(t.tag=0,ao&&i&&eo(t),Al(null,t,a,n),t=t.child),t;case 16:r=t.elementType;e:{switch(Gl(e,t),e=t.pendingProps,r=(a=r._init)(r._payload),t.type=r,a=t.tag=function(e){if("function"==typeof e)return Bs(e)?1:0;if(null!=e){if((e=e.$$typeof)===x)return 11;if(e===N)return 14}return 2}(r),e=nl(r,e),a){case 0:t=kl(null,t,r,e,n);break e;case 1:t=Tl(null,t,r,e,n);break e;case 11:t=El(null,t,r,e,n);break e;case 14:t=wl(null,t,r,nl(r.type,e),n);break e}throw Error(o(306,r,""))}return t;case 0:return r=t.type,a=t.pendingProps,kl(e,t,r,a=t.elementType===r?a:nl(r,a),n);case 1:return r=t.type,a=t.pendingProps,Tl(e,t,r,a=t.elementType===r?a:nl(r,a),n);case 3:e:{if(Il(t),null===e)throw Error(o(387));r=t.pendingProps,a=(i=t.memoizedState).element,Fo(e,t),Go(t,r,null,n);var l=t.memoizedState;if(r=l.element,i.isDehydrated){if(i={element:r,isDehydrated:!1,cache:l.cache,pendingSuspenseBoundaries:l.pendingSuspenseBoundaries,transitions:l.transitions},t.updateQueue.baseState=i,t.memoizedState=i,256&t.flags){t=Pl(e,t,r,n,a=sl(Error(o(423)),t));break e}if(r!==a){t=Pl(e,t,r,n,a=sl(Error(o(424)),t));break e}for(ro=sa(t.stateNode.containerInfo.firstChild),no=t,ao=!0,oo=null,n=wo(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(ho(),r===a){t=Vl(e,t,n);break e}Al(e,t,r,n)}t=t.child}return t;case 5:return Zo(t),null===e&&so(t),r=t.type,a=t.pendingProps,i=null!==e?e.memoizedProps:null,l=a.children,na(r,a)?l=null:null!==i&&na(r,i)&&(t.flags|=32),Sl(e,t),Al(e,t,l,n),t.child;case 6:return null===e&&so(t),null;case 13:return Hl(e,t,n);case 4:return Ko(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Eo(t,null,r,n):Al(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,El(e,t,r,a=t.elementType===r?a:nl(r,a),n);case 7:return Al(e,t,t.pendingProps,n),t.child;case 8:case 12:return Al(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,a=t.pendingProps,i=t.memoizedProps,l=a.value,ka(_o,r._currentValue),r._currentValue=l,null!==i)if(lr(i.value,l)){if(i.children===a.children&&!Ia.current){t=Vl(e,t,n);break e}}else for(null!==(i=t.child)&&(i.return=t);null!==i;){var u=i.dependencies;if(null!==u){l=i.child;for(var s=u.firstContext;null!==s;){if(s.context===r){if(1===i.tag){(s=Do(-1,n&-n)).tag=2;var c=i.updateQueue;if(null!==c){var f=(c=c.shared).pending;null===f?s.next=s:(s.next=f.next,f.next=s),c.pending=s}}i.lanes|=n,null!==(s=i.alternate)&&(s.lanes|=n),Io(i.return,n,t),u.lanes|=n;break}s=s.next}}else if(10===i.tag)l=i.type===t.type?null:i.child;else if(18===i.tag){if(null===(l=i.return))throw Error(o(341));l.lanes|=n,null!==(u=l.alternate)&&(u.lanes|=n),Io(l,n,t),l=i.sibling}else l=i.child;if(null!==l)l.return=i;else for(l=i;null!==l;){if(l===t){l=null;break}if(null!==(i=l.sibling)){i.return=l.return,l=i;break}l=l.return}i=l}Al(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=t.pendingProps.children,Po(t,n),r=r(a=No(a)),t.flags|=1,Al(e,t,r,n),t.child;case 14:return a=nl(r=t.type,t.pendingProps),wl(e,t,r,a=nl(r.type,a),n);case 15:return _l(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:nl(r,a),Gl(e,t),t.tag=1,Ba(r)?(e=!0,Oa(t)):e=!1,Po(t,n),il(t,r,a),ul(t,r,a,n),xl(null,t,r,!0,e,n);case 19:return jl(e,t,n);case 22:return Cl(e,t,n)}throw Error(o(156,t.tag))};var Qs="function"==typeof reportError?reportError:function(e){console.error(e)};function Ys(e){this._internalRoot=e}function Xs(e){this._internalRoot=e}function Ks(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function qs(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Zs(){}function Js(e,t,n,r,a){var o=n._reactRootContainer;if(o){var i=o;if("function"==typeof a){var l=a;a=function(){var e=Vs(i);l.call(e)}}Gs(t,i,e,a)}else i=function(e,t,n,r,a){if(a){if("function"==typeof r){var o=r;r=function(){var e=Vs(i);o.call(e)}}var i=js(t,r,e,0,null,!1,0,"",Zs);return e._reactRootContainer=i,e[ha]=i.current,jr(8===e.nodeType?e.parentNode:e),cs(),i}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof r){var l=r;r=function(){var e=Vs(u);l.call(e)}}var u=zs(e,0,!1,null,0,!1,0,"",Zs);return e._reactRootContainer=u,e[ha]=u.current,jr(8===e.nodeType?e.parentNode:e),cs(function(){Gs(t,u,n,r)}),u}(n,t,e,a,r);return Vs(i)}Xs.prototype.render=Ys.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(o(409));Gs(e,t,null,null)},Xs.prototype.unmount=Ys.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;cs(function(){Gs(null,e,null,null)}),t[ha]=null}},Xs.prototype.unstable_scheduleHydration=function(e){if(e){var t=Ct();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Lt.length&&0!==t&&t<Lt[n].priority;n++);Lt.splice(n,0,e),0===n&&Ht(e)}},Et=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ft(t.pendingLanes);0!==n&&(yt(t,1|n),rs(t,qe()),!(6&xu)&&(ju=qe()+500,ja()))}break;case 13:cs(function(){var t=Mo(e,1);if(null!==t){var n=es();ns(t,e,1,n)}}),$s(e,1)}},wt=function(e){if(13===e.tag){var t=Mo(e,134217728);null!==t&&ns(t,e,134217728,es()),$s(e,134217728)}},_t=function(e){if(13===e.tag){var t=ts(e),n=Mo(e,t);null!==n&&ns(n,e,t,es()),$s(e,t)}},Ct=function(){return bt},St=function(e,t){var n=bt;try{return bt=e,t()}finally{bt=n}},we=function(e,t,n){switch(t){case"input":if(Z(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=Ea(r);if(!a)throw Error(o(90));Q(r),Z(r,a)}}}break;case"textarea":oe(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},xe=ss,Ie=cs;var ec={usingClientEntryPoint:!1,Events:[ba,Aa,Ea,ke,Te,ss]},tc={findFiberByHostInstance:ya,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nc={bundleType:tc.bundleType,version:tc.version,rendererPackageName:tc.rendererPackageName,rendererConfig:tc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:A.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=We(e))?null:e.stateNode},findFiberByHostInstance:tc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var rc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!rc.isDisabled&&rc.supportsFiber)try{at=rc.inject(nc),ot=rc}catch(ce){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ec,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ks(t))throw Error(o(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:w,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!Ks(e))throw Error(o(299));var n=!1,r="",a=Qs;return null!=t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(a=t.onRecoverableError)),t=zs(e,1,!1,null,0,n,0,r,a),e[ha]=t.current,jr(8===e.nodeType?e.parentNode:e),new Ys(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(o(188));throw e=Object.keys(e).join(","),Error(o(268,e))}return null===(e=We(t))?null:e.stateNode},t.flushSync=function(e){return cs(e)},t.hydrate=function(e,t,n){if(!qs(t))throw Error(o(200));return Js(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Ks(e))throw Error(o(405));var r=null!=n&&n.hydratedSources||null,a=!1,i="",l=Qs;if(null!=n&&(!0===n.unstable_strictMode&&(a=!0),void 0!==n.identifierPrefix&&(i=n.identifierPrefix),void 0!==n.onRecoverableError&&(l=n.onRecoverableError)),t=js(t,null,e,1,null!=n?n:null,a,0,i,l),e[ha]=t.current,jr(e),r)for(e=0;e<r.length;e++)a=(a=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,a]:t.mutableSourceEagerHydrationData.push(n,a);return new Xs(t)},t.render=function(e,t,n){if(!qs(t))throw Error(o(200));return Js(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!qs(e))throw Error(o(40));return!!e._reactRootContainer&&(cs(function(){Js(null,null,e,!1,function(){e._reactRootContainer=null,e[ha]=null})}),!0)},t.unstable_batchedUpdates=ss,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!qs(n))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return Js(e,t,n,!1,r)},t.version="18.3.1-next-f1338f8080-20240426"},659:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},735:(e,t,n)=>{"use strict";n.d(t,{A:()=>l});var r=n(354),a=n.n(r),o=n(314),i=n.n(o)()(a());i.push([e.id,":root {\n    --main-font-size: 16px;\n    --title-font-size-mobile: 20px;\n    --title-font-size-desktop: 24px;\n    --main-title-font-size-mobile: 20px;\n    --main-title-font-size-tablet: 30px;\n    --main-title-font-size-desktop: 32px;\n\n    --min-mobile-page-width: 320px;\n    --mobile-page-width: 500px;\n    --tablets-page-width: 700px;\n    --desktop-page-width: 800px;\n\n    --header-height: 60px;\n    --footer-height: 50px;\n    --container-padding-horizontal: 10px;\n\n    --section-margin-bottom: 30px;\n\n    /* colors */\n    --white: #ffffff;\n    --black: #000000;\n    --text: #333333;\n    --background: #e5f2f7;\n}\n","",{version:3,sources:["webpack://./photos/src/variables.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,8BAA8B;IAC9B,+BAA+B;IAC/B,mCAAmC;IACnC,mCAAmC;IACnC,oCAAoC;;IAEpC,8BAA8B;IAC9B,0BAA0B;IAC1B,2BAA2B;IAC3B,2BAA2B;;IAE3B,qBAAqB;IACrB,qBAAqB;IACrB,oCAAoC;;IAEpC,6BAA6B;;IAE7B,WAAW;IACX,gBAAgB;IAChB,gBAAgB;IAChB,eAAe;IACf,qBAAqB;AACzB",sourcesContent:[":root {\n    --main-font-size: 16px;\n    --title-font-size-mobile: 20px;\n    --title-font-size-desktop: 24px;\n    --main-title-font-size-mobile: 20px;\n    --main-title-font-size-tablet: 30px;\n    --main-title-font-size-desktop: 32px;\n\n    --min-mobile-page-width: 320px;\n    --mobile-page-width: 500px;\n    --tablets-page-width: 700px;\n    --desktop-page-width: 800px;\n\n    --header-height: 60px;\n    --footer-height: 50px;\n    --container-padding-horizontal: 10px;\n\n    --section-margin-bottom: 30px;\n\n    /* colors */\n    --white: #ffffff;\n    --black: #000000;\n    --text: #333333;\n    --background: #e5f2f7;\n}\n"],sourceRoot:""}]),i.locals={};const l=i},739:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});var r=n(354),a=n.n(r),o=n(314),i=n.n(o),l=n(735),u=i()(a());u.i(l.A),u.push([e.id,".styles__container___PkP0J {\n    margin-bottom: var(--section-margin-bottom);\n    scroll-margin-top: 70px;\n}\n\n.styles__photos___gx0ht {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    align-items: flex-start;\n    gap: 2px;\n    margin: 0;\n    padding: 0;\n}\n\n.styles__photoItem___r74Dw {\n    max-width: calc(33.33% - 2px);\n    aspect-ratio: 1 / 1;\n    list-style: none;\n}\n\n.styles__photoItem___r74Dw img {\n    display: block;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n}\n","",{version:3,sources:["webpack://./photos/src/components/Photos/styles.css"],names:[],mappings:"AAEA;IACI,2CAA2C;IAC3C,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,eAAe;IACf,2BAA2B;IAC3B,uBAAuB;IACvB,QAAQ;IACR,SAAS;IACT,UAAU;AACd;;AAEA;IACI,6BAA6B;IAC7B,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,cAAc;IACd,WAAW;IACX,YAAY;IACZ,iBAAiB;AACrB",sourcesContent:['@import "../../variables.css";\n\n.container {\n    margin-bottom: var(--section-margin-bottom);\n    scroll-margin-top: 70px;\n}\n\n.photos {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    align-items: flex-start;\n    gap: 2px;\n    margin: 0;\n    padding: 0;\n}\n\n.photoItem {\n    max-width: calc(33.33% - 2px);\n    aspect-ratio: 1 / 1;\n    list-style: none;\n}\n\n.photoItem img {\n    display: block;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n}\n'],sourceRoot:""}]),u.locals={container:"styles__container___PkP0J",photos:"styles__photos___gx0ht",photoItem:"styles__photoItem___r74Dw"};const s=u},746:(e,t,n)=>{"use strict";e.exports=n.p+"f370a834f726addd4f84.png"},799:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,a=n?Symbol.for("react.portal"):60106,o=n?Symbol.for("react.fragment"):60107,i=n?Symbol.for("react.strict_mode"):60108,l=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,s=n?Symbol.for("react.context"):60110,c=n?Symbol.for("react.async_mode"):60111,f=n?Symbol.for("react.concurrent_mode"):60111,d=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,h=n?Symbol.for("react.suspense_list"):60120,m=n?Symbol.for("react.memo"):60115,g=n?Symbol.for("react.lazy"):60116,v=n?Symbol.for("react.block"):60121,y=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,A=n?Symbol.for("react.scope"):60119;function E(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case c:case f:case o:case l:case i:case p:return e;default:switch(e=e&&e.$$typeof){case s:case d:case g:case m:case u:return e;default:return t}}case a:return t}}}function w(e){return E(e)===f}t.AsyncMode=c,t.ConcurrentMode=f,t.ContextConsumer=s,t.ContextProvider=u,t.Element=r,t.ForwardRef=d,t.Fragment=o,t.Lazy=g,t.Memo=m,t.Portal=a,t.Profiler=l,t.StrictMode=i,t.Suspense=p,t.isAsyncMode=function(e){return w(e)||E(e)===c},t.isConcurrentMode=w,t.isContextConsumer=function(e){return E(e)===s},t.isContextProvider=function(e){return E(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return E(e)===d},t.isFragment=function(e){return E(e)===o},t.isLazy=function(e){return E(e)===g},t.isMemo=function(e){return E(e)===m},t.isPortal=function(e){return E(e)===a},t.isProfiler=function(e){return E(e)===l},t.isStrictMode=function(e){return E(e)===i},t.isSuspense=function(e){return E(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===o||e===f||e===l||e===i||e===p||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===g||e.$$typeof===m||e.$$typeof===u||e.$$typeof===s||e.$$typeof===d||e.$$typeof===y||e.$$typeof===b||e.$$typeof===A||e.$$typeof===v)},t.typeOf=E},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},942:(e,t)=>{var n;!function(){"use strict";var r={}.hasOwnProperty;function a(){for(var e="",t=0;t<arguments.length;t++){var n=arguments[t];n&&(e=i(e,o(n)))}return e}function o(e){if("string"==typeof e||"number"==typeof e)return e;if("object"!=typeof e)return"";if(Array.isArray(e))return a.apply(null,e);if(e.toString!==Object.prototype.toString&&!e.toString.toString().includes("[native code]"))return e.toString();var t="";for(var n in e)r.call(e,n)&&e[n]&&(t=i(t,n));return t}function i(e,t){return t?e?e+" "+t:e+t:e}e.exports?(a.default=a,e.exports=a):void 0===(n=function(){return a}.apply(t,[]))||(e.exports=n)}()},961:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(551)},982:(e,t,n)=>{"use strict";e.exports=n(463)}},o={};function i(e){var t=o[e];if(void 0!==t)return t.exports;var n=o[e]={id:e,exports:{}};return a[e](n,n.exports,i),n.exports}i.m=a,i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,i.t=function(n,r){if(1&r&&(n=this(n)),8&r)return n;if("object"==typeof n&&n){if(4&r&&n.__esModule)return n;if(16&r&&"function"==typeof n.then)return n}var a=Object.create(null);i.r(a);var o={};e=e||[null,t({}),t([]),t(t)];for(var l=2&r&&n;("object"==typeof l||"function"==typeof l)&&!~e.indexOf(l);l=t(l))Object.getOwnPropertyNames(l).forEach(e=>o[e]=()=>n[e]);return o.default=()=>n,i.d(a,o),a},i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.f={},i.e=e=>Promise.all(Object.keys(i.f).reduce((t,n)=>(i.f[n](e,t),t),[])),i.u=e=>e+".js",i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n={},r="madrid-guide:",i.l=(e,t,a,o)=>{if(n[e])n[e].push(t);else{var l,u;if(void 0!==a)for(var s=document.getElementsByTagName("script"),c=0;c<s.length;c++){var f=s[c];if(f.getAttribute("src")==e||f.getAttribute("data-webpack")==r+a){l=f;break}}l||(u=!0,(l=document.createElement("script")).charset="utf-8",l.timeout=120,i.nc&&l.setAttribute("nonce",i.nc),l.setAttribute("data-webpack",r+a),l.src=e),n[e]=[t];var d=(t,r)=>{l.onerror=l.onload=null,clearTimeout(p);var a=n[e];if(delete n[e],l.parentNode&&l.parentNode.removeChild(l),a&&a.forEach(e=>e(r)),t)return t(r)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:l}),12e4);l.onerror=d.bind(null,l.onerror),l.onload=d.bind(null,l.onload),u&&document.head.appendChild(l)}},i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;i.g.importScripts&&(e=i.g.location+"");var t=i.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");if(n.length)for(var r=n.length-1;r>-1&&(!e||!/^http(s?):/.test(e));)e=n[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),i.p=e})(),(()=>{i.b=document.baseURI||self.location.href;var e={23:0};i.f.j=(t,n)=>{var r=i.o(e,t)?e[t]:void 0;if(0!==r)if(r)n.push(r[2]);else{var a=new Promise((n,a)=>r=e[t]=[n,a]);n.push(r[2]=a);var o=i.p+i.u(t),l=new Error;i.l(o,n=>{if(i.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var a=n&&("load"===n.type?"missing":n.type),o=n&&n.target&&n.target.src;l.message="Loading chunk "+t+" failed.\n("+a+": "+o+")",l.name="ChunkLoadError",l.type=a,l.request=o,r[1](l)}},"chunk-"+t,t)}};var t=(t,n)=>{var r,a,[o,l,u]=n,s=0;if(o.some(t=>0!==e[t])){for(r in l)i.o(l,r)&&(i.m[r]=l[r]);u&&u(i)}for(t&&t(n);s<o.length;s++)a=o[s],i.o(e,a)&&e[a]&&e[a][0](),e[a]=0},n=self.webpackChunkmadrid_guide=self.webpackChunkmadrid_guide||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})(),i.nc=void 0,(()=>{"use strict";var e=i(540),t=i(338),n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},n(e,t)};function r(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}var a=function(){return a=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e},a.apply(this,arguments)};function o(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}function l(e,t,n){if(n||2===arguments.length)for(var r,a=0,o=t.length;a<o;a++)!r&&a in t||(r||(r=Array.prototype.slice.call(t,0,a)),r[a]=t[a]);return e.concat(r||Array.prototype.slice.call(t))}function u(e,t){var n=t&&t.cache?t.cache:y,r=t&&t.serializer?t.serializer:p;return(t&&t.strategy?t.strategy:d)(e,{cache:n,serializer:r})}function s(e,t,n,r){var a,o=null==(a=r)||"number"==typeof a||"boolean"==typeof a?r:n(r),i=t.get(o);return void 0===i&&(i=e.call(this,r),t.set(o,i)),i}function c(e,t,n){var r=Array.prototype.slice.call(arguments,3),a=n(r),o=t.get(a);return void 0===o&&(o=e.apply(this,r),t.set(a,o)),o}function f(e,t,n,r,a){return n.bind(t,e,r,a)}function d(e,t){return f(e,this,1===e.length?s:c,t.cache.create(),t.serializer)}Object.create,Object.create,"function"==typeof SuppressedError&&SuppressedError;var p=function(){return JSON.stringify(arguments)};function h(){this.cache=Object.create(null)}h.prototype.get=function(e){return this.cache[e]},h.prototype.set=function(e,t){this.cache[e]=t};var m,g,v,y={create:function(){return new h}},b={variadic:function(e,t){return f(e,this,c,t.cache.create(),t.serializer)},monadic:function(e,t){return f(e,this,s,t.cache.create(),t.serializer)}};function A(e){return e.type===g.literal}function E(e){return e.type===g.argument}function w(e){return e.type===g.number}function _(e){return e.type===g.date}function C(e){return e.type===g.time}function S(e){return e.type===g.select}function k(e){return e.type===g.plural}function T(e){return e.type===g.pound}function x(e){return e.type===g.tag}function I(e){return!(!e||"object"!=typeof e||e.type!==v.number)}function P(e){return!(!e||"object"!=typeof e||e.type!==v.dateTime)}!function(e){e[e.EXPECT_ARGUMENT_CLOSING_BRACE=1]="EXPECT_ARGUMENT_CLOSING_BRACE",e[e.EMPTY_ARGUMENT=2]="EMPTY_ARGUMENT",e[e.MALFORMED_ARGUMENT=3]="MALFORMED_ARGUMENT",e[e.EXPECT_ARGUMENT_TYPE=4]="EXPECT_ARGUMENT_TYPE",e[e.INVALID_ARGUMENT_TYPE=5]="INVALID_ARGUMENT_TYPE",e[e.EXPECT_ARGUMENT_STYLE=6]="EXPECT_ARGUMENT_STYLE",e[e.INVALID_NUMBER_SKELETON=7]="INVALID_NUMBER_SKELETON",e[e.INVALID_DATE_TIME_SKELETON=8]="INVALID_DATE_TIME_SKELETON",e[e.EXPECT_NUMBER_SKELETON=9]="EXPECT_NUMBER_SKELETON",e[e.EXPECT_DATE_TIME_SKELETON=10]="EXPECT_DATE_TIME_SKELETON",e[e.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE=11]="UNCLOSED_QUOTE_IN_ARGUMENT_STYLE",e[e.EXPECT_SELECT_ARGUMENT_OPTIONS=12]="EXPECT_SELECT_ARGUMENT_OPTIONS",e[e.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE=13]="EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE",e[e.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE=14]="INVALID_PLURAL_ARGUMENT_OFFSET_VALUE",e[e.EXPECT_SELECT_ARGUMENT_SELECTOR=15]="EXPECT_SELECT_ARGUMENT_SELECTOR",e[e.EXPECT_PLURAL_ARGUMENT_SELECTOR=16]="EXPECT_PLURAL_ARGUMENT_SELECTOR",e[e.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT=17]="EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT",e[e.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT=18]="EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT",e[e.INVALID_PLURAL_ARGUMENT_SELECTOR=19]="INVALID_PLURAL_ARGUMENT_SELECTOR",e[e.DUPLICATE_PLURAL_ARGUMENT_SELECTOR=20]="DUPLICATE_PLURAL_ARGUMENT_SELECTOR",e[e.DUPLICATE_SELECT_ARGUMENT_SELECTOR=21]="DUPLICATE_SELECT_ARGUMENT_SELECTOR",e[e.MISSING_OTHER_CLAUSE=22]="MISSING_OTHER_CLAUSE",e[e.INVALID_TAG=23]="INVALID_TAG",e[e.INVALID_TAG_NAME=25]="INVALID_TAG_NAME",e[e.UNMATCHED_CLOSING_TAG=26]="UNMATCHED_CLOSING_TAG",e[e.UNCLOSED_TAG=27]="UNCLOSED_TAG"}(m||(m={})),function(e){e[e.literal=0]="literal",e[e.argument=1]="argument",e[e.number=2]="number",e[e.date=3]="date",e[e.time=4]="time",e[e.select=5]="select",e[e.plural=6]="plural",e[e.pound=7]="pound",e[e.tag=8]="tag"}(g||(g={})),function(e){e[e.number=0]="number",e[e.dateTime=1]="dateTime"}(v||(v={}));var N=/[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/,B=/(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;function L(e){var t={};return e.replace(B,function(e){var n=e.length;switch(e[0]){case"G":t.era=4===n?"long":5===n?"narrow":"short";break;case"y":t.year=2===n?"2-digit":"numeric";break;case"Y":case"u":case"U":case"r":throw new RangeError("`Y/u/U/r` (year) patterns are not supported, use `y` instead");case"q":case"Q":throw new RangeError("`q/Q` (quarter) patterns are not supported");case"M":case"L":t.month=["numeric","2-digit","short","long","narrow"][n-1];break;case"w":case"W":throw new RangeError("`w/W` (week) patterns are not supported");case"d":t.day=["numeric","2-digit"][n-1];break;case"D":case"F":case"g":throw new RangeError("`D/F/g` (day) patterns are not supported, use `d` instead");case"E":t.weekday=4===n?"long":5===n?"narrow":"short";break;case"e":if(n<4)throw new RangeError("`e..eee` (weekday) patterns are not supported");t.weekday=["short","long","narrow","short"][n-4];break;case"c":if(n<4)throw new RangeError("`c..ccc` (weekday) patterns are not supported");t.weekday=["short","long","narrow","short"][n-4];break;case"a":t.hour12=!0;break;case"b":case"B":throw new RangeError("`b/B` (period) patterns are not supported, use `a` instead");case"h":t.hourCycle="h12",t.hour=["numeric","2-digit"][n-1];break;case"H":t.hourCycle="h23",t.hour=["numeric","2-digit"][n-1];break;case"K":t.hourCycle="h11",t.hour=["numeric","2-digit"][n-1];break;case"k":t.hourCycle="h24",t.hour=["numeric","2-digit"][n-1];break;case"j":case"J":case"C":throw new RangeError("`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead");case"m":t.minute=["numeric","2-digit"][n-1];break;case"s":t.second=["numeric","2-digit"][n-1];break;case"S":case"A":throw new RangeError("`S/A` (second) patterns are not supported, use `s` instead");case"z":t.timeZoneName=n<4?"short":"long";break;case"Z":case"O":case"v":case"V":case"X":case"x":throw new RangeError("`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead")}return""}),t}var R=/[\t-\r \x85\u200E\u200F\u2028\u2029]/i;function M(e){return e.replace(/^(.*?)-/,"")}var O=/^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g,H=/^(@+)?(\+|#+)?[rs]?$/g,F=/(\*)(0+)|(#+)(0+)|(0+)/g,D=/^(0+)$/;function z(e){var t={};return"r"===e[e.length-1]?t.roundingPriority="morePrecision":"s"===e[e.length-1]&&(t.roundingPriority="lessPrecision"),e.replace(H,function(e,n,r){return"string"!=typeof r?(t.minimumSignificantDigits=n.length,t.maximumSignificantDigits=n.length):"+"===r?t.minimumSignificantDigits=n.length:"#"===n[0]?t.maximumSignificantDigits=n.length:(t.minimumSignificantDigits=n.length,t.maximumSignificantDigits=n.length+("string"==typeof r?r.length:0)),""}),t}function U(e){switch(e){case"sign-auto":return{signDisplay:"auto"};case"sign-accounting":case"()":return{currencySign:"accounting"};case"sign-always":case"+!":return{signDisplay:"always"};case"sign-accounting-always":case"()!":return{signDisplay:"always",currencySign:"accounting"};case"sign-except-zero":case"+?":return{signDisplay:"exceptZero"};case"sign-accounting-except-zero":case"()?":return{signDisplay:"exceptZero",currencySign:"accounting"};case"sign-never":case"+_":return{signDisplay:"never"}}}function j(e){var t;if("E"===e[0]&&"E"===e[1]?(t={notation:"engineering"},e=e.slice(2)):"E"===e[0]&&(t={notation:"scientific"},e=e.slice(1)),t){var n=e.slice(0,2);if("+!"===n?(t.signDisplay="always",e=e.slice(2)):"+?"===n&&(t.signDisplay="exceptZero",e=e.slice(2)),!D.test(e))throw new Error("Malformed concise eng/scientific notation");t.minimumIntegerDigits=e.length}return t}function G(e){return U(e)||{}}function V(e){for(var t={},n=0,r=e;n<r.length;n++){var o=r[n];switch(o.stem){case"percent":case"%":t.style="percent";continue;case"%x100":t.style="percent",t.scale=100;continue;case"currency":t.style="currency",t.currency=o.options[0];continue;case"group-off":case",_":t.useGrouping=!1;continue;case"precision-integer":case".":t.maximumFractionDigits=0;continue;case"measure-unit":case"unit":t.style="unit",t.unit=M(o.options[0]);continue;case"compact-short":case"K":t.notation="compact",t.compactDisplay="short";continue;case"compact-long":case"KK":t.notation="compact",t.compactDisplay="long";continue;case"scientific":t=a(a(a({},t),{notation:"scientific"}),o.options.reduce(function(e,t){return a(a({},e),G(t))},{}));continue;case"engineering":t=a(a(a({},t),{notation:"engineering"}),o.options.reduce(function(e,t){return a(a({},e),G(t))},{}));continue;case"notation-simple":t.notation="standard";continue;case"unit-width-narrow":t.currencyDisplay="narrowSymbol",t.unitDisplay="narrow";continue;case"unit-width-short":t.currencyDisplay="code",t.unitDisplay="short";continue;case"unit-width-full-name":t.currencyDisplay="name",t.unitDisplay="long";continue;case"unit-width-iso-code":t.currencyDisplay="symbol";continue;case"scale":t.scale=parseFloat(o.options[0]);continue;case"rounding-mode-floor":t.roundingMode="floor";continue;case"rounding-mode-ceiling":t.roundingMode="ceil";continue;case"rounding-mode-down":t.roundingMode="trunc";continue;case"rounding-mode-up":t.roundingMode="expand";continue;case"rounding-mode-half-even":t.roundingMode="halfEven";continue;case"rounding-mode-half-down":t.roundingMode="halfTrunc";continue;case"rounding-mode-half-up":t.roundingMode="halfExpand";continue;case"integer-width":if(o.options.length>1)throw new RangeError("integer-width stems only accept a single optional option");o.options[0].replace(F,function(e,n,r,a,o,i){if(n)t.minimumIntegerDigits=r.length;else{if(a&&o)throw new Error("We currently do not support maximum integer digits");if(i)throw new Error("We currently do not support exact integer digits")}return""});continue}if(D.test(o.stem))t.minimumIntegerDigits=o.stem.length;else if(O.test(o.stem)){if(o.options.length>1)throw new RangeError("Fraction-precision stems only accept a single optional option");o.stem.replace(O,function(e,n,r,a,o,i){return"*"===r?t.minimumFractionDigits=n.length:a&&"#"===a[0]?t.maximumFractionDigits=a.length:o&&i?(t.minimumFractionDigits=o.length,t.maximumFractionDigits=o.length+i.length):(t.minimumFractionDigits=n.length,t.maximumFractionDigits=n.length),""});var i=o.options[0];"w"===i?t=a(a({},t),{trailingZeroDisplay:"stripIfInteger"}):i&&(t=a(a({},t),z(i)))}else if(H.test(o.stem))t=a(a({},t),z(o.stem));else{var l=U(o.stem);l&&(t=a(a({},t),l));var u=j(o.stem);u&&(t=a(a({},t),u))}}return t}var W,$={"001":["H","h"],419:["h","H","hB","hb"],AC:["H","h","hb","hB"],AD:["H","hB"],AE:["h","hB","hb","H"],AF:["H","hb","hB","h"],AG:["h","hb","H","hB"],AI:["H","h","hb","hB"],AL:["h","H","hB"],AM:["H","hB"],AO:["H","hB"],AR:["h","H","hB","hb"],AS:["h","H"],AT:["H","hB"],AU:["h","hb","H","hB"],AW:["H","hB"],AX:["H"],AZ:["H","hB","h"],BA:["H","hB","h"],BB:["h","hb","H","hB"],BD:["h","hB","H"],BE:["H","hB"],BF:["H","hB"],BG:["H","hB","h"],BH:["h","hB","hb","H"],BI:["H","h"],BJ:["H","hB"],BL:["H","hB"],BM:["h","hb","H","hB"],BN:["hb","hB","h","H"],BO:["h","H","hB","hb"],BQ:["H"],BR:["H","hB"],BS:["h","hb","H","hB"],BT:["h","H"],BW:["H","h","hb","hB"],BY:["H","h"],BZ:["H","h","hb","hB"],CA:["h","hb","H","hB"],CC:["H","h","hb","hB"],CD:["hB","H"],CF:["H","h","hB"],CG:["H","hB"],CH:["H","hB","h"],CI:["H","hB"],CK:["H","h","hb","hB"],CL:["h","H","hB","hb"],CM:["H","h","hB"],CN:["H","hB","hb","h"],CO:["h","H","hB","hb"],CP:["H"],CR:["h","H","hB","hb"],CU:["h","H","hB","hb"],CV:["H","hB"],CW:["H","hB"],CX:["H","h","hb","hB"],CY:["h","H","hb","hB"],CZ:["H"],DE:["H","hB"],DG:["H","h","hb","hB"],DJ:["h","H"],DK:["H"],DM:["h","hb","H","hB"],DO:["h","H","hB","hb"],DZ:["h","hB","hb","H"],EA:["H","h","hB","hb"],EC:["h","H","hB","hb"],EE:["H","hB"],EG:["h","hB","hb","H"],EH:["h","hB","hb","H"],ER:["h","H"],ES:["H","hB","h","hb"],ET:["hB","hb","h","H"],FI:["H"],FJ:["h","hb","H","hB"],FK:["H","h","hb","hB"],FM:["h","hb","H","hB"],FO:["H","h"],FR:["H","hB"],GA:["H","hB"],GB:["H","h","hb","hB"],GD:["h","hb","H","hB"],GE:["H","hB","h"],GF:["H","hB"],GG:["H","h","hb","hB"],GH:["h","H"],GI:["H","h","hb","hB"],GL:["H","h"],GM:["h","hb","H","hB"],GN:["H","hB"],GP:["H","hB"],GQ:["H","hB","h","hb"],GR:["h","H","hb","hB"],GT:["h","H","hB","hb"],GU:["h","hb","H","hB"],GW:["H","hB"],GY:["h","hb","H","hB"],HK:["h","hB","hb","H"],HN:["h","H","hB","hb"],HR:["H","hB"],HU:["H","h"],IC:["H","h","hB","hb"],ID:["H"],IE:["H","h","hb","hB"],IL:["H","hB"],IM:["H","h","hb","hB"],IN:["h","H"],IO:["H","h","hb","hB"],IQ:["h","hB","hb","H"],IR:["hB","H"],IS:["H"],IT:["H","hB"],JE:["H","h","hb","hB"],JM:["h","hb","H","hB"],JO:["h","hB","hb","H"],JP:["H","K","h"],KE:["hB","hb","H","h"],KG:["H","h","hB","hb"],KH:["hB","h","H","hb"],KI:["h","hb","H","hB"],KM:["H","h","hB","hb"],KN:["h","hb","H","hB"],KP:["h","H","hB","hb"],KR:["h","H","hB","hb"],KW:["h","hB","hb","H"],KY:["h","hb","H","hB"],KZ:["H","hB"],LA:["H","hb","hB","h"],LB:["h","hB","hb","H"],LC:["h","hb","H","hB"],LI:["H","hB","h"],LK:["H","h","hB","hb"],LR:["h","hb","H","hB"],LS:["h","H"],LT:["H","h","hb","hB"],LU:["H","h","hB"],LV:["H","hB","hb","h"],LY:["h","hB","hb","H"],MA:["H","h","hB","hb"],MC:["H","hB"],MD:["H","hB"],ME:["H","hB","h"],MF:["H","hB"],MG:["H","h"],MH:["h","hb","H","hB"],MK:["H","h","hb","hB"],ML:["H"],MM:["hB","hb","H","h"],MN:["H","h","hb","hB"],MO:["h","hB","hb","H"],MP:["h","hb","H","hB"],MQ:["H","hB"],MR:["h","hB","hb","H"],MS:["H","h","hb","hB"],MT:["H","h"],MU:["H","h"],MV:["H","h"],MW:["h","hb","H","hB"],MX:["h","H","hB","hb"],MY:["hb","hB","h","H"],MZ:["H","hB"],NA:["h","H","hB","hb"],NC:["H","hB"],NE:["H"],NF:["H","h","hb","hB"],NG:["H","h","hb","hB"],NI:["h","H","hB","hb"],NL:["H","hB"],NO:["H","h"],NP:["H","h","hB"],NR:["H","h","hb","hB"],NU:["H","h","hb","hB"],NZ:["h","hb","H","hB"],OM:["h","hB","hb","H"],PA:["h","H","hB","hb"],PE:["h","H","hB","hb"],PF:["H","h","hB"],PG:["h","H"],PH:["h","hB","hb","H"],PK:["h","hB","H"],PL:["H","h"],PM:["H","hB"],PN:["H","h","hb","hB"],PR:["h","H","hB","hb"],PS:["h","hB","hb","H"],PT:["H","hB"],PW:["h","H"],PY:["h","H","hB","hb"],QA:["h","hB","hb","H"],RE:["H","hB"],RO:["H","hB"],RS:["H","hB","h"],RU:["H"],RW:["H","h"],SA:["h","hB","hb","H"],SB:["h","hb","H","hB"],SC:["H","h","hB"],SD:["h","hB","hb","H"],SE:["H"],SG:["h","hb","H","hB"],SH:["H","h","hb","hB"],SI:["H","hB"],SJ:["H"],SK:["H"],SL:["h","hb","H","hB"],SM:["H","h","hB"],SN:["H","h","hB"],SO:["h","H"],SR:["H","hB"],SS:["h","hb","H","hB"],ST:["H","hB"],SV:["h","H","hB","hb"],SX:["H","h","hb","hB"],SY:["h","hB","hb","H"],SZ:["h","hb","H","hB"],TA:["H","h","hb","hB"],TC:["h","hb","H","hB"],TD:["h","H","hB"],TF:["H","h","hB"],TG:["H","hB"],TH:["H","h"],TJ:["H","h"],TL:["H","hB","hb","h"],TM:["H","h"],TN:["h","hB","hb","H"],TO:["h","H"],TR:["H","hB"],TT:["h","hb","H","hB"],TW:["hB","hb","h","H"],TZ:["hB","hb","H","h"],UA:["H","hB","h"],UG:["hB","hb","H","h"],UM:["h","hb","H","hB"],US:["h","hb","H","hB"],UY:["h","H","hB","hb"],UZ:["H","hB","h"],VA:["H","h","hB"],VC:["h","hb","H","hB"],VE:["h","H","hB","hb"],VG:["h","hb","H","hB"],VI:["h","hb","H","hB"],VN:["H","h"],VU:["h","H"],WF:["H","hB"],WS:["h","H"],XK:["H","hB","h"],YE:["h","hB","hb","H"],YT:["H","hB"],ZA:["H","h","hb","hB"],ZM:["h","hb","H","hB"],ZW:["H","h"],"af-ZA":["H","h","hB","hb"],"ar-001":["h","hB","hb","H"],"ca-ES":["H","h","hB"],"en-001":["h","hb","H","hB"],"en-HK":["h","hb","H","hB"],"en-IL":["H","h","hb","hB"],"en-MY":["h","hb","H","hB"],"es-BR":["H","h","hB","hb"],"es-ES":["H","h","hB","hb"],"es-GQ":["H","h","hB","hb"],"fr-CA":["H","h","hB"],"gl-ES":["H","h","hB"],"gu-IN":["hB","hb","h","H"],"hi-IN":["hB","h","H"],"it-CH":["H","h","hB"],"it-IT":["H","h","hB"],"kn-IN":["hB","h","H"],"ml-IN":["hB","h","H"],"mr-IN":["hB","hb","h","H"],"pa-IN":["hB","hb","h","H"],"ta-IN":["hB","h","hb","H"],"te-IN":["hB","h","H"],"zu-ZA":["H","hB","hb","h"]};function Q(e){var t=e.hourCycle;if(void 0===t&&e.hourCycles&&e.hourCycles.length&&(t=e.hourCycles[0]),t)switch(t){case"h24":return"k";case"h23":return"H";case"h12":return"h";case"h11":return"K";default:throw new Error("Invalid hourCycle")}var n,r=e.language;return"root"!==r&&(n=e.maximize().region),($[n||""]||$[r||""]||$["".concat(r,"-001")]||$["001"])[0]}var Y=new RegExp("^".concat(N.source,"*")),X=new RegExp("".concat(N.source,"*$"));function K(e,t){return{start:e,end:t}}var q=!!String.prototype.startsWith&&"_a".startsWith("a",1),Z=!!String.fromCodePoint,J=!!Object.fromEntries,ee=!!String.prototype.codePointAt,te=!!String.prototype.trimStart,ne=!!String.prototype.trimEnd,re=Number.isSafeInteger?Number.isSafeInteger:function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e&&Math.abs(e)<=9007199254740991},ae=!0;try{ae="a"===(null===(W=de("([^\\p{White_Space}\\p{Pattern_Syntax}]*)","yu").exec("a"))||void 0===W?void 0:W[0])}catch(e){ae=!1}var oe,ie=q?function(e,t,n){return e.startsWith(t,n)}:function(e,t,n){return e.slice(n,n+t.length)===t},le=Z?String.fromCodePoint:function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];for(var n,r="",a=e.length,o=0;a>o;){if((n=e[o++])>1114111)throw RangeError(n+" is not a valid code point");r+=n<65536?String.fromCharCode(n):String.fromCharCode(55296+((n-=65536)>>10),n%1024+56320)}return r},ue=J?Object.fromEntries:function(e){for(var t={},n=0,r=e;n<r.length;n++){var a=r[n],o=a[0],i=a[1];t[o]=i}return t},se=ee?function(e,t){return e.codePointAt(t)}:function(e,t){var n=e.length;if(!(t<0||t>=n)){var r,a=e.charCodeAt(t);return a<55296||a>56319||t+1===n||(r=e.charCodeAt(t+1))<56320||r>57343?a:r-56320+(a-55296<<10)+65536}},ce=te?function(e){return e.trimStart()}:function(e){return e.replace(Y,"")},fe=ne?function(e){return e.trimEnd()}:function(e){return e.replace(X,"")};function de(e,t){return new RegExp(e,t)}if(ae){var pe=de("([^\\p{White_Space}\\p{Pattern_Syntax}]*)","yu");oe=function(e,t){var n;return pe.lastIndex=t,null!==(n=pe.exec(e)[1])&&void 0!==n?n:""}}else oe=function(e,t){for(var n=[];;){var r=se(e,t);if(void 0===r||ye(r)||be(r))break;n.push(r),t+=r>=65536?2:1}return le.apply(void 0,n)};var he,me=function(){function e(e,t){void 0===t&&(t={}),this.message=e,this.position={offset:0,line:1,column:1},this.ignoreTag=!!t.ignoreTag,this.locale=t.locale,this.requiresOtherClause=!!t.requiresOtherClause,this.shouldParseSkeletons=!!t.shouldParseSkeletons}return e.prototype.parse=function(){if(0!==this.offset())throw Error("parser can only be used once");return this.parseMessage(0,"",!1)},e.prototype.parseMessage=function(e,t,n){for(var r=[];!this.isEOF();){var a=this.char();if(123===a){if((o=this.parseArgument(e,n)).err)return o;r.push(o.val)}else{if(125===a&&e>0)break;if(35!==a||"plural"!==t&&"selectordinal"!==t){if(60===a&&!this.ignoreTag&&47===this.peek()){if(n)break;return this.error(m.UNMATCHED_CLOSING_TAG,K(this.clonePosition(),this.clonePosition()))}if(60===a&&!this.ignoreTag&&ge(this.peek()||0)){if((o=this.parseTag(e,t)).err)return o;r.push(o.val)}else{var o;if((o=this.parseLiteral(e,t)).err)return o;r.push(o.val)}}else{var i=this.clonePosition();this.bump(),r.push({type:g.pound,location:K(i,this.clonePosition())})}}}return{val:r,err:null}},e.prototype.parseTag=function(e,t){var n=this.clonePosition();this.bump();var r=this.parseTagName();if(this.bumpSpace(),this.bumpIf("/>"))return{val:{type:g.literal,value:"<".concat(r,"/>"),location:K(n,this.clonePosition())},err:null};if(this.bumpIf(">")){var a=this.parseMessage(e+1,t,!0);if(a.err)return a;var o=a.val,i=this.clonePosition();if(this.bumpIf("</")){if(this.isEOF()||!ge(this.char()))return this.error(m.INVALID_TAG,K(i,this.clonePosition()));var l=this.clonePosition();return r!==this.parseTagName()?this.error(m.UNMATCHED_CLOSING_TAG,K(l,this.clonePosition())):(this.bumpSpace(),this.bumpIf(">")?{val:{type:g.tag,value:r,children:o,location:K(n,this.clonePosition())},err:null}:this.error(m.INVALID_TAG,K(i,this.clonePosition())))}return this.error(m.UNCLOSED_TAG,K(n,this.clonePosition()))}return this.error(m.INVALID_TAG,K(n,this.clonePosition()))},e.prototype.parseTagName=function(){var e=this.offset();for(this.bump();!this.isEOF()&&ve(this.char());)this.bump();return this.message.slice(e,this.offset())},e.prototype.parseLiteral=function(e,t){for(var n=this.clonePosition(),r="";;){var a=this.tryParseQuote(t);if(a)r+=a;else{var o=this.tryParseUnquoted(e,t);if(o)r+=o;else{var i=this.tryParseLeftAngleBracket();if(!i)break;r+=i}}}var l=K(n,this.clonePosition());return{val:{type:g.literal,value:r,location:l},err:null}},e.prototype.tryParseLeftAngleBracket=function(){return this.isEOF()||60!==this.char()||!this.ignoreTag&&(ge(e=this.peek()||0)||47===e)?null:(this.bump(),"<");var e},e.prototype.tryParseQuote=function(e){if(this.isEOF()||39!==this.char())return null;switch(this.peek()){case 39:return this.bump(),this.bump(),"'";case 123:case 60:case 62:case 125:break;case 35:if("plural"===e||"selectordinal"===e)break;return null;default:return null}this.bump();var t=[this.char()];for(this.bump();!this.isEOF();){var n=this.char();if(39===n){if(39!==this.peek()){this.bump();break}t.push(39),this.bump()}else t.push(n);this.bump()}return le.apply(void 0,t)},e.prototype.tryParseUnquoted=function(e,t){if(this.isEOF())return null;var n=this.char();return 60===n||123===n||35===n&&("plural"===t||"selectordinal"===t)||125===n&&e>0?null:(this.bump(),le(n))},e.prototype.parseArgument=function(e,t){var n=this.clonePosition();if(this.bump(),this.bumpSpace(),this.isEOF())return this.error(m.EXPECT_ARGUMENT_CLOSING_BRACE,K(n,this.clonePosition()));if(125===this.char())return this.bump(),this.error(m.EMPTY_ARGUMENT,K(n,this.clonePosition()));var r=this.parseIdentifierIfPossible().value;if(!r)return this.error(m.MALFORMED_ARGUMENT,K(n,this.clonePosition()));if(this.bumpSpace(),this.isEOF())return this.error(m.EXPECT_ARGUMENT_CLOSING_BRACE,K(n,this.clonePosition()));switch(this.char()){case 125:return this.bump(),{val:{type:g.argument,value:r,location:K(n,this.clonePosition())},err:null};case 44:return this.bump(),this.bumpSpace(),this.isEOF()?this.error(m.EXPECT_ARGUMENT_CLOSING_BRACE,K(n,this.clonePosition())):this.parseArgumentOptions(e,t,r,n);default:return this.error(m.MALFORMED_ARGUMENT,K(n,this.clonePosition()))}},e.prototype.parseIdentifierIfPossible=function(){var e=this.clonePosition(),t=this.offset(),n=oe(this.message,t),r=t+n.length;return this.bumpTo(r),{value:n,location:K(e,this.clonePosition())}},e.prototype.parseArgumentOptions=function(e,t,n,r){var o,i=this.clonePosition(),l=this.parseIdentifierIfPossible().value,u=this.clonePosition();switch(l){case"":return this.error(m.EXPECT_ARGUMENT_TYPE,K(i,u));case"number":case"date":case"time":this.bumpSpace();var s=null;if(this.bumpIf(",")){this.bumpSpace();var c=this.clonePosition();if((E=this.parseSimpleArgStyleIfPossible()).err)return E;if(0===(h=fe(E.val)).length)return this.error(m.EXPECT_ARGUMENT_STYLE,K(this.clonePosition(),this.clonePosition()));s={style:h,styleLocation:K(c,this.clonePosition())}}if((w=this.tryParseArgumentClose(r)).err)return w;var f=K(r,this.clonePosition());if(s&&ie(null==s?void 0:s.style,"::",0)){var d=ce(s.style.slice(2));if("number"===l)return(E=this.parseNumberSkeletonFromString(d,s.styleLocation)).err?E:{val:{type:g.number,value:n,location:f,style:E.val},err:null};if(0===d.length)return this.error(m.EXPECT_DATE_TIME_SKELETON,f);var p=d;this.locale&&(p=function(e,t){for(var n="",r=0;r<e.length;r++){var a=e.charAt(r);if("j"===a){for(var o=0;r+1<e.length&&e.charAt(r+1)===a;)o++,r++;var i=1+(1&o),l=o<2?1:3+(o>>1),u=Q(t);for("H"!=u&&"k"!=u||(l=0);l-- >0;)n+="a";for(;i-- >0;)n=u+n}else n+="J"===a?"H":a}return n}(d,this.locale));var h={type:v.dateTime,pattern:p,location:s.styleLocation,parsedOptions:this.shouldParseSkeletons?L(p):{}};return{val:{type:"date"===l?g.date:g.time,value:n,location:f,style:h},err:null}}return{val:{type:"number"===l?g.number:"date"===l?g.date:g.time,value:n,location:f,style:null!==(o=null==s?void 0:s.style)&&void 0!==o?o:null},err:null};case"plural":case"selectordinal":case"select":var y=this.clonePosition();if(this.bumpSpace(),!this.bumpIf(","))return this.error(m.EXPECT_SELECT_ARGUMENT_OPTIONS,K(y,a({},y)));this.bumpSpace();var b=this.parseIdentifierIfPossible(),A=0;if("select"!==l&&"offset"===b.value){if(!this.bumpIf(":"))return this.error(m.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE,K(this.clonePosition(),this.clonePosition()));var E;if(this.bumpSpace(),(E=this.tryParseDecimalInteger(m.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE,m.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE)).err)return E;this.bumpSpace(),b=this.parseIdentifierIfPossible(),A=E.val}var w,_=this.tryParsePluralOrSelectOptions(e,l,t,b);if(_.err)return _;if((w=this.tryParseArgumentClose(r)).err)return w;var C=K(r,this.clonePosition());return"select"===l?{val:{type:g.select,value:n,options:ue(_.val),location:C},err:null}:{val:{type:g.plural,value:n,options:ue(_.val),offset:A,pluralType:"plural"===l?"cardinal":"ordinal",location:C},err:null};default:return this.error(m.INVALID_ARGUMENT_TYPE,K(i,u))}},e.prototype.tryParseArgumentClose=function(e){return this.isEOF()||125!==this.char()?this.error(m.EXPECT_ARGUMENT_CLOSING_BRACE,K(e,this.clonePosition())):(this.bump(),{val:!0,err:null})},e.prototype.parseSimpleArgStyleIfPossible=function(){for(var e=0,t=this.clonePosition();!this.isEOF();)switch(this.char()){case 39:this.bump();var n=this.clonePosition();if(!this.bumpUntil("'"))return this.error(m.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE,K(n,this.clonePosition()));this.bump();break;case 123:e+=1,this.bump();break;case 125:if(!(e>0))return{val:this.message.slice(t.offset,this.offset()),err:null};e-=1;break;default:this.bump()}return{val:this.message.slice(t.offset,this.offset()),err:null}},e.prototype.parseNumberSkeletonFromString=function(e,t){var n=[];try{n=function(e){if(0===e.length)throw new Error("Number skeleton cannot be empty");for(var t=[],n=0,r=e.split(R).filter(function(e){return e.length>0});n<r.length;n++){var a=r[n].split("/");if(0===a.length)throw new Error("Invalid number skeleton");for(var o=a[0],i=a.slice(1),l=0,u=i;l<u.length;l++)if(0===u[l].length)throw new Error("Invalid number skeleton");t.push({stem:o,options:i})}return t}(e)}catch(e){return this.error(m.INVALID_NUMBER_SKELETON,t)}return{val:{type:v.number,tokens:n,location:t,parsedOptions:this.shouldParseSkeletons?V(n):{}},err:null}},e.prototype.tryParsePluralOrSelectOptions=function(e,t,n,r){for(var a,o=!1,i=[],l=new Set,u=r.value,s=r.location;;){if(0===u.length){var c=this.clonePosition();if("select"===t||!this.bumpIf("="))break;var f=this.tryParseDecimalInteger(m.EXPECT_PLURAL_ARGUMENT_SELECTOR,m.INVALID_PLURAL_ARGUMENT_SELECTOR);if(f.err)return f;s=K(c,this.clonePosition()),u=this.message.slice(c.offset,this.offset())}if(l.has(u))return this.error("select"===t?m.DUPLICATE_SELECT_ARGUMENT_SELECTOR:m.DUPLICATE_PLURAL_ARGUMENT_SELECTOR,s);"other"===u&&(o=!0),this.bumpSpace();var d=this.clonePosition();if(!this.bumpIf("{"))return this.error("select"===t?m.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT:m.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT,K(this.clonePosition(),this.clonePosition()));var p=this.parseMessage(e+1,t,n);if(p.err)return p;var h=this.tryParseArgumentClose(d);if(h.err)return h;i.push([u,{value:p.val,location:K(d,this.clonePosition())}]),l.add(u),this.bumpSpace(),u=(a=this.parseIdentifierIfPossible()).value,s=a.location}return 0===i.length?this.error("select"===t?m.EXPECT_SELECT_ARGUMENT_SELECTOR:m.EXPECT_PLURAL_ARGUMENT_SELECTOR,K(this.clonePosition(),this.clonePosition())):this.requiresOtherClause&&!o?this.error(m.MISSING_OTHER_CLAUSE,K(this.clonePosition(),this.clonePosition())):{val:i,err:null}},e.prototype.tryParseDecimalInteger=function(e,t){var n=1,r=this.clonePosition();this.bumpIf("+")||this.bumpIf("-")&&(n=-1);for(var a=!1,o=0;!this.isEOF();){var i=this.char();if(!(i>=48&&i<=57))break;a=!0,o=10*o+(i-48),this.bump()}var l=K(r,this.clonePosition());return a?re(o*=n)?{val:o,err:null}:this.error(t,l):this.error(e,l)},e.prototype.offset=function(){return this.position.offset},e.prototype.isEOF=function(){return this.offset()===this.message.length},e.prototype.clonePosition=function(){return{offset:this.position.offset,line:this.position.line,column:this.position.column}},e.prototype.char=function(){var e=this.position.offset;if(e>=this.message.length)throw Error("out of bound");var t=se(this.message,e);if(void 0===t)throw Error("Offset ".concat(e," is at invalid UTF-16 code unit boundary"));return t},e.prototype.error=function(e,t){return{val:null,err:{kind:e,message:this.message,location:t}}},e.prototype.bump=function(){if(!this.isEOF()){var e=this.char();10===e?(this.position.line+=1,this.position.column=1,this.position.offset+=1):(this.position.column+=1,this.position.offset+=e<65536?1:2)}},e.prototype.bumpIf=function(e){if(ie(this.message,e,this.offset())){for(var t=0;t<e.length;t++)this.bump();return!0}return!1},e.prototype.bumpUntil=function(e){var t=this.offset(),n=this.message.indexOf(e,t);return n>=0?(this.bumpTo(n),!0):(this.bumpTo(this.message.length),!1)},e.prototype.bumpTo=function(e){if(this.offset()>e)throw Error("targetOffset ".concat(e," must be greater than or equal to the current offset ").concat(this.offset()));for(e=Math.min(e,this.message.length);;){var t=this.offset();if(t===e)break;if(t>e)throw Error("targetOffset ".concat(e," is at invalid UTF-16 code unit boundary"));if(this.bump(),this.isEOF())break}},e.prototype.bumpSpace=function(){for(;!this.isEOF()&&ye(this.char());)this.bump()},e.prototype.peek=function(){if(this.isEOF())return null;var e=this.char(),t=this.offset(),n=this.message.charCodeAt(t+(e>=65536?2:1));return null!=n?n:null},e}();function ge(e){return e>=97&&e<=122||e>=65&&e<=90}function ve(e){return 45===e||46===e||e>=48&&e<=57||95===e||e>=97&&e<=122||e>=65&&e<=90||183==e||e>=192&&e<=214||e>=216&&e<=246||e>=248&&e<=893||e>=895&&e<=8191||e>=8204&&e<=8205||e>=8255&&e<=8256||e>=8304&&e<=8591||e>=11264&&e<=12271||e>=12289&&e<=55295||e>=63744&&e<=64975||e>=65008&&e<=65533||e>=65536&&e<=983039}function ye(e){return e>=9&&e<=13||32===e||133===e||e>=8206&&e<=8207||8232===e||8233===e}function be(e){return e>=33&&e<=35||36===e||e>=37&&e<=39||40===e||41===e||42===e||43===e||44===e||45===e||e>=46&&e<=47||e>=58&&e<=59||e>=60&&e<=62||e>=63&&e<=64||91===e||92===e||93===e||94===e||96===e||123===e||124===e||125===e||126===e||161===e||e>=162&&e<=165||166===e||167===e||169===e||171===e||172===e||174===e||176===e||177===e||182===e||187===e||191===e||215===e||247===e||e>=8208&&e<=8213||e>=8214&&e<=8215||8216===e||8217===e||8218===e||e>=8219&&e<=8220||8221===e||8222===e||8223===e||e>=8224&&e<=8231||e>=8240&&e<=8248||8249===e||8250===e||e>=8251&&e<=8254||e>=8257&&e<=8259||8260===e||8261===e||8262===e||e>=8263&&e<=8273||8274===e||8275===e||e>=8277&&e<=8286||e>=8592&&e<=8596||e>=8597&&e<=8601||e>=8602&&e<=8603||e>=8604&&e<=8607||8608===e||e>=8609&&e<=8610||8611===e||e>=8612&&e<=8613||8614===e||e>=8615&&e<=8621||8622===e||e>=8623&&e<=8653||e>=8654&&e<=8655||e>=8656&&e<=8657||8658===e||8659===e||8660===e||e>=8661&&e<=8691||e>=8692&&e<=8959||e>=8960&&e<=8967||8968===e||8969===e||8970===e||8971===e||e>=8972&&e<=8991||e>=8992&&e<=8993||e>=8994&&e<=9e3||9001===e||9002===e||e>=9003&&e<=9083||9084===e||e>=9085&&e<=9114||e>=9115&&e<=9139||e>=9140&&e<=9179||e>=9180&&e<=9185||e>=9186&&e<=9254||e>=9255&&e<=9279||e>=9280&&e<=9290||e>=9291&&e<=9311||e>=9472&&e<=9654||9655===e||e>=9656&&e<=9664||9665===e||e>=9666&&e<=9719||e>=9720&&e<=9727||e>=9728&&e<=9838||9839===e||e>=9840&&e<=10087||10088===e||10089===e||10090===e||10091===e||10092===e||10093===e||10094===e||10095===e||10096===e||10097===e||10098===e||10099===e||10100===e||10101===e||e>=10132&&e<=10175||e>=10176&&e<=10180||10181===e||10182===e||e>=10183&&e<=10213||10214===e||10215===e||10216===e||10217===e||10218===e||10219===e||10220===e||10221===e||10222===e||10223===e||e>=10224&&e<=10239||e>=10240&&e<=10495||e>=10496&&e<=10626||10627===e||10628===e||10629===e||10630===e||10631===e||10632===e||10633===e||10634===e||10635===e||10636===e||10637===e||10638===e||10639===e||10640===e||10641===e||10642===e||10643===e||10644===e||10645===e||10646===e||10647===e||10648===e||e>=10649&&e<=10711||10712===e||10713===e||10714===e||10715===e||e>=10716&&e<=10747||10748===e||10749===e||e>=10750&&e<=11007||e>=11008&&e<=11055||e>=11056&&e<=11076||e>=11077&&e<=11078||e>=11079&&e<=11084||e>=11085&&e<=11123||e>=11124&&e<=11125||e>=11126&&e<=11157||11158===e||e>=11159&&e<=11263||e>=11776&&e<=11777||11778===e||11779===e||11780===e||11781===e||e>=11782&&e<=11784||11785===e||11786===e||11787===e||11788===e||11789===e||e>=11790&&e<=11798||11799===e||e>=11800&&e<=11801||11802===e||11803===e||11804===e||11805===e||e>=11806&&e<=11807||11808===e||11809===e||11810===e||11811===e||11812===e||11813===e||11814===e||11815===e||11816===e||11817===e||e>=11818&&e<=11822||11823===e||e>=11824&&e<=11833||e>=11834&&e<=11835||e>=11836&&e<=11839||11840===e||11841===e||11842===e||e>=11843&&e<=11855||e>=11856&&e<=11857||11858===e||e>=11859&&e<=11903||e>=12289&&e<=12291||12296===e||12297===e||12298===e||12299===e||12300===e||12301===e||12302===e||12303===e||12304===e||12305===e||e>=12306&&e<=12307||12308===e||12309===e||12310===e||12311===e||12312===e||12313===e||12314===e||12315===e||12316===e||12317===e||e>=12318&&e<=12319||12320===e||12336===e||64830===e||64831===e||e>=65093&&e<=65094}function Ae(e){e.forEach(function(e){if(delete e.location,S(e)||k(e))for(var t in e.options)delete e.options[t].location,Ae(e.options[t].value);else w(e)&&I(e.style)||(_(e)||C(e))&&P(e.style)?delete e.style.location:x(e)&&Ae(e.children)})}function Ee(e,t){void 0===t&&(t={}),t=a({shouldParseSkeletons:!0,requiresOtherClause:!0},t);var n=new me(e,t).parse();if(n.err){var r=SyntaxError(m[n.err.kind]);throw r.location=n.err.location,r.originalMessage=n.err.message,r}return(null==t?void 0:t.captureLocation)||Ae(n.val),n.val}!function(e){e.MISSING_VALUE="MISSING_VALUE",e.INVALID_VALUE="INVALID_VALUE",e.MISSING_INTL_API="MISSING_INTL_API"}(he||(he={}));var we,_e=function(e){function t(t,n,r){var a=e.call(this,t)||this;return a.code=n,a.originalMessage=r,a}return r(t,e),t.prototype.toString=function(){return"[formatjs Error: ".concat(this.code,"] ").concat(this.message)},t}(Error),Ce=function(e){function t(t,n,r,a){return e.call(this,'Invalid values for "'.concat(t,'": "').concat(n,'". Options are "').concat(Object.keys(r).join('", "'),'"'),he.INVALID_VALUE,a)||this}return r(t,e),t}(_e),Se=function(e){function t(t,n,r){return e.call(this,'Value for "'.concat(t,'" must be of type ').concat(n),he.INVALID_VALUE,r)||this}return r(t,e),t}(_e),ke=function(e){function t(t,n){return e.call(this,'The intl string context variable "'.concat(t,'" was not provided to the string "').concat(n,'"'),he.MISSING_VALUE,n)||this}return r(t,e),t}(_e);function Te(e){return"function"==typeof e}function xe(e,t,n,r,a,o,i){if(1===e.length&&A(e[0]))return[{type:we.literal,value:e[0].value}];for(var l=[],u=0,s=e;u<s.length;u++){var c=s[u];if(A(c))l.push({type:we.literal,value:c.value});else if(T(c))"number"==typeof o&&l.push({type:we.literal,value:n.getNumberFormat(t).format(o)});else{var f=c.value;if(!a||!(f in a))throw new ke(f,i);var d=a[f];if(E(c))d&&"string"!=typeof d&&"number"!=typeof d||(d="string"==typeof d||"number"==typeof d?String(d):""),l.push({type:"string"==typeof d?we.literal:we.object,value:d});else if(_(c)){var p="string"==typeof c.style?r.date[c.style]:P(c.style)?c.style.parsedOptions:void 0;l.push({type:we.literal,value:n.getDateTimeFormat(t,p).format(d)})}else if(C(c))p="string"==typeof c.style?r.time[c.style]:P(c.style)?c.style.parsedOptions:r.time.medium,l.push({type:we.literal,value:n.getDateTimeFormat(t,p).format(d)});else if(w(c))(p="string"==typeof c.style?r.number[c.style]:I(c.style)?c.style.parsedOptions:void 0)&&p.scale&&(d*=p.scale||1),l.push({type:we.literal,value:n.getNumberFormat(t,p).format(d)});else{if(x(c)){var h=c.children,m=c.value,g=a[m];if(!Te(g))throw new Se(m,"function",i);var v=g(xe(h,t,n,r,a,o).map(function(e){return e.value}));Array.isArray(v)||(v=[v]),l.push.apply(l,v.map(function(e){return{type:"string"==typeof e?we.literal:we.object,value:e}}))}if(S(c)){if(!(y=c.options[d]||c.options.other))throw new Ce(c.value,d,Object.keys(c.options),i);l.push.apply(l,xe(y.value,t,n,r,a))}else if(k(c)){var y;if(!(y=c.options["=".concat(d)])){if(!Intl.PluralRules)throw new _e('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n',he.MISSING_INTL_API,i);var b=n.getPluralRules(t,{type:c.pluralType}).select(d-(c.offset||0));y=c.options[b]||c.options.other}if(!y)throw new Ce(c.value,d,Object.keys(c.options),i);l.push.apply(l,xe(y.value,t,n,r,a,d-(c.offset||0)))}}}}return(N=l).length<2?N:N.reduce(function(e,t){var n=e[e.length-1];return n&&n.type===we.literal&&t.type===we.literal?n.value+=t.value:e.push(t),e},[]);var N}function Ie(e){return{create:function(){return{get:function(t){return e[t]},set:function(t,n){e[t]=n}}}}}!function(e){e[e.literal=0]="literal",e[e.object=1]="object"}(we||(we={}));var Pe,Ne=function(){function e(t,n,r,i){void 0===n&&(n=e.defaultLocale);var s,c,f,d=this;if(this.formatterCache={number:{},dateTime:{},pluralRules:{}},this.format=function(e){var t=d.formatToParts(e);if(1===t.length)return t[0].value;var n=t.reduce(function(e,t){return e.length&&t.type===we.literal&&"string"==typeof e[e.length-1]?e[e.length-1]+=t.value:e.push(t.value),e},[]);return n.length<=1?n[0]||"":n},this.formatToParts=function(e){return xe(d.ast,d.locales,d.formatters,d.formats,e,void 0,d.message)},this.resolvedOptions=function(){var e;return{locale:(null===(e=d.resolvedLocale)||void 0===e?void 0:e.toString())||Intl.NumberFormat.supportedLocalesOf(d.locales)[0]}},this.getAst=function(){return d.ast},this.locales=n,this.resolvedLocale=e.resolveLocale(n),"string"==typeof t){if(this.message=t,!e.__parse)throw new TypeError("IntlMessageFormat.__parse must be set to process `message` of type `string`");var p=i||{},h=(p.formatters,o(p,["formatters"]));this.ast=e.__parse(t,a(a({},h),{locale:this.resolvedLocale}))}else this.ast=t;if(!Array.isArray(this.ast))throw new TypeError("A message must be provided as a String or AST.");this.formats=(c=e.formats,(f=r)?Object.keys(c).reduce(function(e,t){var n,r;return e[t]=(n=c[t],(r=f[t])?a(a(a({},n||{}),r||{}),Object.keys(n).reduce(function(e,t){return e[t]=a(a({},n[t]),r[t]||{}),e},{})):n),e},a({},c)):c),this.formatters=i&&i.formatters||(void 0===(s=this.formatterCache)&&(s={number:{},dateTime:{},pluralRules:{}}),{getNumberFormat:u(function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.NumberFormat).bind.apply(e,l([void 0],t,!1)))},{cache:Ie(s.number),strategy:b.variadic}),getDateTimeFormat:u(function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.DateTimeFormat).bind.apply(e,l([void 0],t,!1)))},{cache:Ie(s.dateTime),strategy:b.variadic}),getPluralRules:u(function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.PluralRules).bind.apply(e,l([void 0],t,!1)))},{cache:Ie(s.pluralRules),strategy:b.variadic})})}return Object.defineProperty(e,"defaultLocale",{get:function(){return e.memoizedDefaultLocale||(e.memoizedDefaultLocale=(new Intl.NumberFormat).resolvedOptions().locale),e.memoizedDefaultLocale},enumerable:!1,configurable:!0}),e.memoizedDefaultLocale=null,e.resolveLocale=function(e){if(void 0!==Intl.Locale){var t=Intl.NumberFormat.supportedLocalesOf(e);return t.length>0?new Intl.Locale(t[0]):new Intl.Locale("string"==typeof e?e:e[0])}},e.__parse=Ee,e.formats={number:{integer:{maximumFractionDigits:0},currency:{style:"currency"},percent:{style:"percent"}},date:{short:{month:"numeric",day:"numeric",year:"2-digit"},medium:{month:"short",day:"numeric",year:"numeric"},long:{month:"long",day:"numeric",year:"numeric"},full:{weekday:"long",month:"long",day:"numeric",year:"numeric"}},time:{short:{hour:"numeric",minute:"numeric"},medium:{hour:"numeric",minute:"numeric",second:"numeric"},long:{hour:"numeric",minute:"numeric",second:"numeric",timeZoneName:"short"},full:{hour:"numeric",minute:"numeric",second:"numeric",timeZoneName:"short"}}},e}();!function(e){e.FORMAT_ERROR="FORMAT_ERROR",e.UNSUPPORTED_FORMATTER="UNSUPPORTED_FORMATTER",e.INVALID_CONFIG="INVALID_CONFIG",e.MISSING_DATA="MISSING_DATA",e.MISSING_TRANSLATION="MISSING_TRANSLATION"}(Pe||(Pe={}));var Be=function(e){function t(n,r,a){var o=this,i=a?a instanceof Error?a:new Error(String(a)):void 0;return(o=e.call(this,"[@formatjs/intl Error ".concat(n,"] ").concat(r,"\n").concat(i?"\n".concat(i.message,"\n").concat(i.stack):""))||this).code=n,"function"==typeof Error.captureStackTrace&&Error.captureStackTrace(o,t),o}return r(t,e),t}(Error),Le=function(e){function t(t,n){return e.call(this,Pe.UNSUPPORTED_FORMATTER,t,n)||this}return r(t,e),t}(Be),Re=function(e){function t(t,n){return e.call(this,Pe.INVALID_CONFIG,t,n)||this}return r(t,e),t}(Be),Me=function(e){function t(t,n){return e.call(this,Pe.MISSING_DATA,t,n)||this}return r(t,e),t}(Be),Oe=function(e){function t(t,n,r){var a=e.call(this,Pe.FORMAT_ERROR,"".concat(t,"\nLocale: ").concat(n,"\n"),r)||this;return a.locale=n,a}return r(t,e),t}(Be),He=function(e){function t(t,n,r,a){var o=e.call(this,"".concat(t,"\nMessageID: ").concat(null==r?void 0:r.id,"\nDefault Message: ").concat(null==r?void 0:r.defaultMessage,"\nDescription: ").concat(null==r?void 0:r.description,"\n"),n,a)||this;return o.descriptor=r,o.locale=n,o}return r(t,e),t}(Oe),Fe=function(e){function t(t,n){var r=e.call(this,Pe.MISSING_TRANSLATION,'Missing message: "'.concat(t.id,'" for locale "').concat(n,'", using ').concat(t.defaultMessage?"default message (".concat("string"==typeof t.defaultMessage?t.defaultMessage:t.defaultMessage.map(function(e){var t;return null!==(t=e.value)&&void 0!==t?t:JSON.stringify(e)}).join(),")"):"id"," as fallback."))||this;return r.descriptor=t,r}return r(t,e),t}(Be);function De(e,t,n){return void 0===n&&(n={}),t.reduce(function(t,r){return r in e?t[r]=e[r]:r in n&&(t[r]=n[r]),t},{})}var ze={formats:{},messages:{},timeZone:void 0,defaultLocale:"en",defaultFormats:{},fallbackOnEmptyString:!0,onError:function(e){},onWarn:function(e){}};function Ue(e){return{create:function(){return{get:function(t){return e[t]},set:function(t,n){e[t]=n}}}}}function je(e,t,n,r){var a,o=e&&e[t];if(o&&(a=o[n]),a)return a;r(new Le("No ".concat(t," format named: ").concat(n)))}function Ge(e,t,n){if(void 0===n&&(n=Error),!e)throw new n(t)}function Ve(e){Ge(e,"[React Intl] Could not find required `intl` object. <IntlProvider> needs to exist in the component ancestry.")}u(function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.NumberFormat).bind.apply(e,l([void 0],t,!1)))},{strategy:b.variadic}),u(function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.DateTimeFormat).bind.apply(e,l([void 0],t,!1)))},{strategy:b.variadic}),u(function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.PluralRules).bind.apply(e,l([void 0],t,!1)))},{strategy:b.variadic}),u(function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.Locale).bind.apply(e,l([void 0],t,!1)))},{strategy:b.variadic}),u(function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.ListFormat).bind.apply(e,l([void 0],t,!1)))},{strategy:b.variadic});var We=a(a({},ze),{textComponent:e.Fragment});function $e(e,t){if(e===t)return!0;if(!e||!t)return!1;var n=Object.keys(e),r=Object.keys(t),a=n.length;if(r.length!==a)return!1;for(var o=0;o<a;o++){var i=n[o];if(e[i]!==t[i]||!Object.prototype.hasOwnProperty.call(t,i))return!1}return!0}i(146);var Qe="undefined"==typeof window||window.__REACT_INTL_BYPASS_GLOBAL_CONTEXT__?e.createContext(null):window.__REACT_INTL_CONTEXT__||(window.__REACT_INTL_CONTEXT__=e.createContext(null)),Ye=(Qe.Consumer,Qe.Provider),Xe=Qe;function Ke(e,t){return Object.keys(e).reduce(function(n,r){return n[r]=a({timeZone:t},e[r]),n},{})}function qe(e,t){return Object.keys(a(a({},e),t)).reduce(function(n,r){return n[r]=a(a({},e[r]||{}),t[r]||{}),n},{})}function Ze(e,t){if(!t)return e;var n=Ne.formats;return a(a(a({},n),e),{date:qe(Ke(n.date,t),Ke(e.date||{},t)),time:qe(Ke(n.time,t),Ke(e.time||{},t))})}var Je=function(e,t,n,r,o){var i=e.locale,l=e.formats,u=e.messages,s=e.defaultLocale,c=e.defaultFormats,f=e.fallbackOnEmptyString,d=e.onError,p=e.timeZone,h=e.defaultRichTextElements;void 0===n&&(n={id:""});var m=n.id,v=n.defaultMessage;Ge(!!m,"[@formatjs/intl] An `id` must be provided to format a message. You can either:\n1. Configure your build toolchain with [babel-plugin-formatjs](https://formatjs.io/docs/tooling/babel-plugin)\nor [@formatjs/ts-transformer](https://formatjs.io/docs/tooling/ts-transformer) OR\n2. Configure your `eslint` config to include [eslint-plugin-formatjs](https://formatjs.io/docs/tooling/linter#enforce-id)\nto autofix this issue");var y=String(m),b=u&&Object.prototype.hasOwnProperty.call(u,y)&&u[y];if(Array.isArray(b)&&1===b.length&&b[0].type===g.literal)return b[0].value;if(!r&&b&&"string"==typeof b&&!h)return b.replace(/'\{(.*?)\}'/gi,"{$1}");if(r=a(a({},h),r||{}),l=Ze(l,p),c=Ze(c,p),!b){if(!1===f&&""===b)return b;if((!v||i&&i.toLowerCase()!==s.toLowerCase())&&d(new Fe(n,i)),v)try{return t.getMessageFormat(v,s,c,o).format(r)}catch(e){return d(new He('Error formatting default message for: "'.concat(y,'", rendering default message verbatim'),i,n,e)),"string"==typeof v?v:y}return y}try{return t.getMessageFormat(b,i,l,a({formatters:t},o||{})).format(r)}catch(e){d(new He('Error formatting message: "'.concat(y,'", using ').concat(v?"default message":"id"," as fallback."),i,n,e))}if(v)try{return t.getMessageFormat(v,s,c,o).format(r)}catch(e){d(new He('Error formatting the default message for: "'.concat(y,'", rendering message verbatim'),i,n,e))}return"string"==typeof b?b:"string"==typeof v?v:y},et=["style","currency","unit","unitDisplay","useGrouping","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits","compactDisplay","currencyDisplay","currencySign","notation","signDisplay","unit","unitDisplay","numberingSystem","trailingZeroDisplay","roundingPriority","roundingIncrement","roundingMode"];function tt(e,t,n){var r=e.locale,a=e.formats,o=e.onError;void 0===n&&(n={});var i=n.format,l=i&&je(a,"number",i,o)||{};return t(r,De(n,et,l))}function nt(e,t,n,r){void 0===r&&(r={});try{return tt(e,t,r).format(n)}catch(t){e.onError(new Oe("Error formatting number.",e.locale,t))}return String(n)}function rt(e,t,n,r){void 0===r&&(r={});try{return tt(e,t,r).formatToParts(n)}catch(t){e.onError(new Oe("Error formatting number.",e.locale,t))}return[]}var at=["numeric","style"];function ot(e,t,n,r,a){void 0===a&&(a={}),r||(r="second"),Intl.RelativeTimeFormat||e.onError(new _e('Intl.RelativeTimeFormat is not available in this environment.\nTry polyfilling it using "@formatjs/intl-relativetimeformat"\n',he.MISSING_INTL_API));try{return function(e,t,n){var r=e.locale,a=e.formats,o=e.onError;void 0===n&&(n={});var i=n.format,l=!!i&&je(a,"relative",i,o)||{};return t(r,De(n,at,l))}(e,t,a).format(n,r)}catch(t){e.onError(new Oe("Error formatting relative time.",e.locale,t))}return String(n)}var it=["formatMatcher","timeZone","hour12","weekday","era","year","month","day","hour","minute","second","timeZoneName","hourCycle","dateStyle","timeStyle","calendar","numberingSystem","fractionalSecondDigits"];function lt(e,t,n,r){var o=e.locale,i=e.formats,l=e.onError,u=e.timeZone;void 0===r&&(r={});var s=r.format,c=a(a({},u&&{timeZone:u}),s&&je(i,t,s,l)),f=De(r,it,c);return"time"!==t||f.hour||f.minute||f.second||f.timeStyle||f.dateStyle||(f=a(a({},f),{hour:"numeric",minute:"numeric"})),n(o,f)}function ut(e,t){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];var a=n[0],o=n[1],i=void 0===o?{}:o,l="string"==typeof a?new Date(a||0):a;try{return lt(e,"date",t,i).format(l)}catch(t){e.onError(new Oe("Error formatting date.",e.locale,t))}return String(l)}function st(e,t){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];var a=n[0],o=n[1],i=void 0===o?{}:o,l="string"==typeof a?new Date(a||0):a;try{return lt(e,"time",t,i).format(l)}catch(t){e.onError(new Oe("Error formatting time.",e.locale,t))}return String(l)}function ct(e,t){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];var a=n[0],o=n[1],i=n[2],l=void 0===i?{}:i,u=e.timeZone,s=e.locale,c=e.onError,f=De(l,it,u?{timeZone:u}:{});try{return t(s,f).formatRange(a,o)}catch(t){c(new Oe("Error formatting date time range.",e.locale,t))}return String(a)}function ft(e,t){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];var a=n[0],o=n[1],i=void 0===o?{}:o,l="string"==typeof a?new Date(a||0):a;try{return lt(e,"date",t,i).formatToParts(l)}catch(t){e.onError(new Oe("Error formatting date.",e.locale,t))}return[]}function dt(e,t){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];var a=n[0],o=n[1],i=void 0===o?{}:o,l="string"==typeof a?new Date(a||0):a;try{return lt(e,"time",t,i).formatToParts(l)}catch(t){e.onError(new Oe("Error formatting time.",e.locale,t))}return[]}var pt=["type"];function ht(e,t,n,r){var a=e.locale,o=e.onError;void 0===r&&(r={}),Intl.PluralRules||o(new _e('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n',he.MISSING_INTL_API));var i=De(r,pt);try{return t(a,i).select(n)}catch(e){o(new Oe("Error formatting plural.",a,e))}return"other"}var mt=["type","style"],gt=Date.now();function vt(e,t,n,r){void 0===r&&(r={});var a=yt(e,t,n,r).reduce(function(e,t){var n=t.value;return"string"!=typeof n?e.push(n):"string"==typeof e[e.length-1]?e[e.length-1]+=n:e.push(n),e},[]);return 1===a.length?a[0]:0===a.length?"":a}function yt(e,t,n,r){var o=e.locale,i=e.onError;void 0===r&&(r={}),Intl.ListFormat||i(new _e('Intl.ListFormat is not available in this environment.\nTry polyfilling it using "@formatjs/intl-listformat"\n',he.MISSING_INTL_API));var l=De(r,mt);try{var u={},s=n.map(function(e,t){if("object"==typeof e){var n=function(e){return"".concat(gt,"_").concat(e,"_").concat(gt)}(t);return u[n]=e,n}return String(e)});return t(o,l).formatToParts(s).map(function(e){return"literal"===e.type?e:a(a({},e),{value:u[e.value]||e.value})})}catch(e){i(new Oe("Error formatting list.",o,e))}return n}var bt=["style","type","fallback","languageDisplay"];function At(e,t,n,r){var a=e.locale,o=e.onError;Intl.DisplayNames||o(new _e('Intl.DisplayNames is not available in this environment.\nTry polyfilling it using "@formatjs/intl-displaynames"\n',he.MISSING_INTL_API));var i=De(r,bt);try{return t(a,i).of(n)}catch(e){o(new Oe("Error formatting display name.",a,e))}}function Et(e,t){var n=function(e){void 0===e&&(e={dateTime:{},number:{},message:{},relativeTime:{},pluralRules:{},list:{},displayNames:{}});var t=Intl.RelativeTimeFormat,n=Intl.ListFormat,r=Intl.DisplayNames,o=u(function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.DateTimeFormat).bind.apply(e,l([void 0],t,!1)))},{cache:Ue(e.dateTime),strategy:b.variadic}),i=u(function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.NumberFormat).bind.apply(e,l([void 0],t,!1)))},{cache:Ue(e.number),strategy:b.variadic}),s=u(function(){for(var e,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];return new((e=Intl.PluralRules).bind.apply(e,l([void 0],t,!1)))},{cache:Ue(e.pluralRules),strategy:b.variadic});return{getDateTimeFormat:o,getNumberFormat:i,getMessageFormat:u(function(e,t,n,r){return new Ne(e,t,n,a({formatters:{getNumberFormat:i,getDateTimeFormat:o,getPluralRules:s}},r||{}))},{cache:Ue(e.message),strategy:b.variadic}),getRelativeTimeFormat:u(function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return new(t.bind.apply(t,l([void 0],e,!1)))},{cache:Ue(e.relativeTime),strategy:b.variadic}),getPluralRules:s,getListFormat:u(function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return new(n.bind.apply(n,l([void 0],e,!1)))},{cache:Ue(e.list),strategy:b.variadic}),getDisplayNames:u(function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return new(r.bind.apply(r,l([void 0],e,!1)))},{cache:Ue(e.displayNames),strategy:b.variadic})}}(t),r=a(a({},ze),e),o=r.locale,i=r.defaultLocale,s=r.onError;return o?!Intl.NumberFormat.supportedLocalesOf(o).length&&s?s(new Me('Missing locale data for locale: "'.concat(o,'" in Intl.NumberFormat. Using default locale: "').concat(i,'" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details'))):!Intl.DateTimeFormat.supportedLocalesOf(o).length&&s&&s(new Me('Missing locale data for locale: "'.concat(o,'" in Intl.DateTimeFormat. Using default locale: "').concat(i,'" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details'))):(s&&s(new Re('"locale" was not configured, using "'.concat(i,'" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details'))),r.locale=r.defaultLocale||"en"),function(e){var t;e.onWarn&&e.defaultRichTextElements&&"string"==typeof((t=e.messages||{})?t[Object.keys(t)[0]]:void 0)&&e.onWarn('[@formatjs/intl] "defaultRichTextElements" was specified but "message" was not pre-compiled. \nPlease consider using "@formatjs/cli" to pre-compile your messages for performance.\nFor more details see https://formatjs.io/docs/getting-started/message-distribution')}(r),a(a({},r),{formatters:n,formatNumber:nt.bind(null,r,n.getNumberFormat),formatNumberToParts:rt.bind(null,r,n.getNumberFormat),formatRelativeTime:ot.bind(null,r,n.getRelativeTimeFormat),formatDate:ut.bind(null,r,n.getDateTimeFormat),formatDateToParts:ft.bind(null,r,n.getDateTimeFormat),formatTime:st.bind(null,r,n.getDateTimeFormat),formatDateTimeRange:ct.bind(null,r,n.getDateTimeFormat),formatTimeToParts:dt.bind(null,r,n.getDateTimeFormat),formatPlural:ht.bind(null,r,n.getPluralRules),formatMessage:Je.bind(null,r,n),$t:Je.bind(null,r,n),formatList:vt.bind(null,r,n.getListFormat),formatListToParts:yt.bind(null,r,n.getListFormat),formatDisplayName:At.bind(null,r,n.getDisplayNames)})}function wt(t){return t?Object.keys(t).reduce(function(n,r){var a,o=t[r];return n[r]=Te(o)?(a=o,function(t){return a(e.Children.toArray(t))}):o,n},{}):t}var _t=function(t,n,r,a){for(var o=[],i=4;i<arguments.length;i++)o[i-4]=arguments[i];var u=wt(a),s=Je.apply(void 0,l([t,n,r,u],o,!1));return Array.isArray(s)?e.Children.toArray(s):s},Ct=function(e,t){var n=e.defaultRichTextElements,r=o(e,["defaultRichTextElements"]),i=wt(n),l=Et(a(a(a({},We),r),{defaultRichTextElements:i}),t),u={locale:l.locale,timeZone:l.timeZone,fallbackOnEmptyString:l.fallbackOnEmptyString,formats:l.formats,defaultLocale:l.defaultLocale,defaultFormats:l.defaultFormats,messages:l.messages,onError:l.onError,defaultRichTextElements:i};return a(a({},l),{formatMessage:_t.bind(null,u,l.formatters),$t:_t.bind(null,u,l.formatters)})};function St(e){return{locale:e.locale,timeZone:e.timeZone,fallbackOnEmptyString:e.fallbackOnEmptyString,formats:e.formats,textComponent:e.textComponent,messages:e.messages,defaultLocale:e.defaultLocale,defaultFormats:e.defaultFormats,onError:e.onError,onWarn:e.onWarn,wrapRichTextChunksInFragment:e.wrapRichTextChunksInFragment,defaultRichTextElements:e.defaultRichTextElements}}var kt=function(t){function n(){var e=null!==t&&t.apply(this,arguments)||this;return e.cache={dateTime:{},number:{},message:{},relativeTime:{},pluralRules:{},list:{},displayNames:{}},e.state={cache:e.cache,intl:Ct(St(e.props),e.cache),prevConfig:St(e.props)},e}return r(n,t),n.getDerivedStateFromProps=function(e,t){var n=t.prevConfig,r=t.cache,a=St(e);return $e(n,a)?null:{intl:Ct(a,r),prevConfig:a}},n.prototype.render=function(){return Ve(this.state.intl),e.createElement(Ye,{value:this.state.intl},this.props.children)},n.displayName="IntlProvider",n.defaultProps=We,n}(e.PureComponent);const Tt=kt;var xt;!function(e){e.English="en"}(xt||(xt={}));const It={en:xt.English},Pt={language:function(){const e=navigator.language;return It[e]}()||xt.English,messages:{},isLoading:!0,onSelectLanguage:()=>()=>{}},Nt=(0,e.createContext)(Pt),Bt=({children:t})=>{const[n,r]=(0,e.useState)(Pt.language),[a,o]=(0,e.useState)(Pt.messages),[l,u]=(0,e.useState)(Pt.isLoading),s=(0,e.useCallback)(e=>()=>{r(e)},[]);(0,e.useEffect)(()=>{!async function(){try{const[e]=await Promise.all([i.e(287).then(i.t.bind(i,668,19))]);e&&e.default&&e.default.MainTitle&&(document.title=e.default.MainTitle),o(e.default),u(!1)}catch(e){console.error(e)}}()},[n]);const c={language:n,messages:a,isLoading:l,onSelectLanguage:s};return e.createElement(Nt.Provider,{value:c},t)};function Lt(){var t=e.useContext(Xe);return Ve(t),t}function Rt(t){var n=Lt(),r=n.formatMessage,a=n.textComponent,o=void 0===a?e.Fragment:a,i=t.id,l=t.description,u=t.defaultMessage,s=t.values,c=t.children,f=t.tagName,d=void 0===f?o:f,p=r({id:i,description:l,defaultMessage:u},s,{ignoreTag:t.ignoreTag});return"function"==typeof c?c(Array.isArray(p)?p:[p]):d?e.createElement(d,null,e.Children.toArray(p)):e.createElement(e.Fragment,null,p)}Rt.displayName="FormattedMessage";var Mt=e.memo(Rt,function(e,t){var n=e.values,r=o(e,["values"]),a=t.values,i=o(t,["values"]);return $e(a,n)&&$e(r,i)});Mt.displayName="MemoizedFormattedMessage";const Ot=Mt;var Ht=i(942),Ft=i.n(Ht),Dt=i(72),zt=i.n(Dt),Ut=i(825),jt=i.n(Ut),Gt=i(659),Vt=i.n(Gt),Wt=i(56),$t=i.n(Wt),Qt=i(159),Yt=i.n(Qt),Xt=i(113),Kt=i.n(Xt),qt=i(59),Zt={};Zt.styleTagTransform=Kt(),Zt.setAttributes=$t(),Zt.insert=Vt().bind(null,"head"),Zt.domAPI=jt(),Zt.insertStyleElement=Yt(),zt()(qt.A,Zt);const Jt=qt.A&&qt.A.locals?qt.A.locals:void 0,en=i(746),tn=function(){const t=Lt(),n=function(){const[t,n]=(0,e.useState)(!1);return(0,e.useEffect)(()=>{const e=()=>{n(window.scrollY>0)};return window.addEventListener("scroll",e),()=>{window.removeEventListener("scroll",e)}},[]),t}();return e.createElement("header",{className:Ft()(Jt.wideContainer,{[Jt.sticky]:n})},e.createElement("div",{className:Jt.container},e.createElement("a",{href:"/madrid-guide/"},e.createElement("img",{src:en,alt:t.formatMessage({id:"LogoAltText"})})),e.createElement("h1",{className:Jt.mainTitle},e.createElement(Ot,{id:"MainTitle"}))))};var nn=i(477),rn={};rn.styleTagTransform=Kt(),rn.setAttributes=$t(),rn.insert=Vt().bind(null,"head"),rn.domAPI=jt(),rn.insertStyleElement=Yt(),zt()(nn.A,rn);const an=nn.A&&nn.A.locals?nn.A.locals:void 0,on=function(){return e.createElement("div",{className:an.container},"...")},ln={"estatua_del_oso_y_del_madrono.jpeg":function(){return i(50)},"mirador_de_la_montana_principe_pio.jpeg":function(){return i(321)}};var un=i(739),sn={};sn.styleTagTransform=Kt(),sn.setAttributes=$t(),sn.insert=Vt().bind(null,"head"),sn.domAPI=jt(),sn.insertStyleElement=Yt(),zt()(un.A,sn);const cn=un.A&&un.A.locals?un.A.locals:void 0;var fn=i(175),dn={};dn.styleTagTransform=Kt(),dn.setAttributes=$t(),dn.insert=Vt().bind(null,"head"),dn.domAPI=jt(),dn.insertStyleElement=Yt(),zt()(fn.A,dn);const pn=fn.A&&fn.A.locals?fn.A.locals:void 0,hn=function({id:t,label:n}){return e.createElement("h2",{className:pn.container},e.createElement("a",{href:`#${t}`},n))},mn="Photos",gn=function(){return e.createElement("section",{id:mn,className:cn.container},e.createElement(hn,{id:mn,label:e.createElement(Ot,{id:"PhotosTitle"})}),e.createElement("ul",{className:cn.photos},Object.keys(ln).map(t=>{const n=ln[t]();return e.createElement("li",{key:t,className:cn.photoItem},e.createElement("img",{src:n,alt:t}))})))};var vn=i(355),yn={};yn.styleTagTransform=Kt(),yn.setAttributes=$t(),yn.insert=Vt().bind(null,"head"),yn.domAPI=jt(),yn.insertStyleElement=Yt(),zt()(vn.A,yn);const bn=vn.A&&vn.A.locals?vn.A.locals:void 0,An=function(){return e.createElement("main",{className:bn.wideContainer},e.createElement("div",{className:bn.container},e.createElement(gn,null)))};var En=i(533),wn={};wn.styleTagTransform=Kt(),wn.setAttributes=$t(),wn.insert=Vt().bind(null,"head"),wn.domAPI=jt(),wn.insertStyleElement=Yt(),zt()(En.A,wn);const _n=En.A&&En.A.locals?En.A.locals:void 0,Cn=(new Date).getFullYear(),Sn=function(){return e.createElement("footer",{className:_n.wideContainer},e.createElement("div",{className:_n.container},e.createElement("small",{className:_n.currentYear},Cn),e.createElement("small",{className:_n.author},"Mr. Oleski")))};var kn=i(405),Tn={};Tn.styleTagTransform=Kt(),Tn.setAttributes=$t(),Tn.insert=Vt().bind(null,"head"),Tn.domAPI=jt(),Tn.insertStyleElement=Yt(),zt()(kn.A,Tn);const xn=kn.A&&kn.A.locals?kn.A.locals:void 0,In=function(){const{messages:t,language:n,isLoading:r}=(0,e.useContext)(Nt);return e.createElement(Tt,{locale:n,messages:t},r?e.createElement(on,null):e.createElement("div",{className:xn.container},e.createElement(tn,null),e.createElement(An,null),e.createElement(Sn,null)))};var Pn=i(428),Nn={};Nn.styleTagTransform=Kt(),Nn.setAttributes=$t(),Nn.insert=Vt().bind(null,"head"),Nn.domAPI=jt(),Nn.insertStyleElement=Yt(),zt()(Pn.A,Nn),Pn.A&&Pn.A.locals&&Pn.A.locals,function(){const n=document.getElementById("root");(0,t.H)(n).render(e.createElement(Bt,null,e.createElement(In,null)))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,