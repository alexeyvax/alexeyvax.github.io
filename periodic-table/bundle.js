/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e,n,t,r,a={219:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),o=t(314),l=t.n(o),i=t(517),s=l()(a());s.i(i.A),s.push([e.id,".styles__container___Mzk5M {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 100%;\n    height: 100%;\n}\n\n.styles__wideContainer___p8WVz {\n    width: 100%;\n    background-color: var(--dark);\n}\n\n.styles__loader___D1Tbr {\n    display: flex;\n    flex: 1;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    font-size: 32px;\n}\n","",{version:3,sources:["webpack://./src/components/App/styles.css"],names:[],mappings:"AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,8BAA8B;IAC9B,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,OAAO;IACP,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;IACZ,eAAe;AACnB",sourcesContent:['@import "../../variables.css";\n\n.container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 100%;\n    height: 100%;\n}\n\n.wideContainer {\n    width: 100%;\n    background-color: var(--dark);\n}\n\n.loader {\n    display: flex;\n    flex: 1;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    font-size: 32px;\n}\n'],sourceRoot:""}]),s.locals={container:"styles__container___Mzk5M",wideContainer:"styles__wideContainer___p8WVz",loader:"styles__loader___D1Tbr"};const u=s},292:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),o=t(314),l=t.n(o),i=t(517),s=l()(a());s.i(i.A),s.push([e.id,".styles__container___pa8WL {\n    display: flex;\n}\n\n.styles__categories___h8nCE {\n    display: flex;\n    width: 960px;\n    flex-wrap: wrap;\n    margin: 0 0 20px 0;\n    padding: 0;\n}\n\n.styles__category___zJXiQ {\n    width: 240px;\n    list-style: none;\n}\n\n.styles__category___zJXiQ button {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n    margin: 0;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n}\n\n.styles__categoryIcon____Bi_F {\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n    margin-right: 10px;\n    border-radius: 20px;\n    border: var(--border-size) solid transparent;\n}\n.styles__selectedCategory___xw9zV button .styles__categoryIcon____Bi_F {\n    border-color: var(--active-border-color);\n}\n","",{version:3,sources:["webpack://./src/components/Categories/styles.css"],names:[],mappings:"AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,eAAe;IACf,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,aAAa;IACb,SAAS;IACT,YAAY;IACZ,6BAA6B;IAC7B,eAAe;AACnB;;AAEA;IACI,qBAAqB;IACrB,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;IACnB,4CAA4C;AAChD;AACA;IACI,wCAAwC;AAC5C",sourcesContent:['@import "../../variables.css";\n\n.container {\n    display: flex;\n}\n\n.categories {\n    display: flex;\n    width: 960px;\n    flex-wrap: wrap;\n    margin: 0 0 20px 0;\n    padding: 0;\n}\n\n.category {\n    width: 240px;\n    list-style: none;\n}\n\n.category button {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n    margin: 0;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n}\n\n.categoryIcon {\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n    margin-right: 10px;\n    border-radius: 20px;\n    border: var(--border-size) solid transparent;\n}\n.selectedCategory button .categoryIcon {\n    border-color: var(--active-border-color);\n}\n'],sourceRoot:""}]),s.locals={container:"styles__container___pa8WL",categories:"styles__categories___h8nCE",category:"styles__category___zJXiQ",categoryIcon:"styles__categoryIcon____Bi_F",selectedCategory:"styles__selectedCategory___xw9zV"};const u=s},393:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),o=t(314),l=t.n(o),i=t(517),s=l()(a());s.i(i.A),s.push([e.id,'.styles__button___h38hf {\n    position: absolute;\n    top: 50%;\n    padding: 0;\n    margin: 0;\n    width: 80px;\n    height: 80px;\n    cursor: pointer;\n    background-color: transparent;\n    border: none;\n    transform: translateY(-50%);\n}\n\n.styles__prev___Lm_i9 {\n    left: 0;\n}\n.styles__prev___Lm_i9::before {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 20px;\n    height: 20px;\n    content: "";\n    border: 2px solid transparent;\n    border-left-color: var(--grey);\n    border-top-color: var(--grey);\n    transform-origin: 0 0;\n    transform: rotate(-45deg) translateY(-50%) translateX(-50%);\n}\n.styles__prev___Lm_i9::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 30px;\n    height: 2px;\n    content: "";\n    background-color: var(--grey);\n    transform: translateY(-50%) translateX(-20%);\n}\n\n.styles__next___DkryT {\n    right: 0;\n}\n.styles__next___DkryT::before {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 20px;\n    height: 20px;\n    content: "";\n    border: 2px solid transparent;\n    border-left-color: var(--grey);\n    border-top-color: var(--grey);\n    transform-origin: 0 0;\n    transform: rotate(135deg) translateY(-50%) translateX(-50%);\n}\n.styles__next___DkryT::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 30px;\n    height: 2px;\n    content: "";\n    background-color: var(--grey);\n    transform: translateY(-50%) translateX(-80%);\n}\n',"",{version:3,sources:["webpack://./src/components/ElementPopup/Controls/styles.css"],names:[],mappings:"AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,UAAU;IACV,SAAS;IACT,WAAW;IACX,YAAY;IACZ,eAAe;IACf,6BAA6B;IAC7B,YAAY;IACZ,2BAA2B;AAC/B;;AAEA;IACI,OAAO;AACX;AACA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,WAAW;IACX,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,8BAA8B;IAC9B,6BAA6B;IAC7B,qBAAqB;IACrB,2DAA2D;AAC/D;AACA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,WAAW;IACX,WAAW;IACX,WAAW;IACX,6BAA6B;IAC7B,4CAA4C;AAChD;;AAEA;IACI,QAAQ;AACZ;AACA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,WAAW;IACX,YAAY;IACZ,WAAW;IACX,6BAA6B;IAC7B,8BAA8B;IAC9B,6BAA6B;IAC7B,qBAAqB;IACrB,2DAA2D;AAC/D;AACA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,WAAW;IACX,WAAW;IACX,WAAW;IACX,6BAA6B;IAC7B,4CAA4C;AAChD",sourcesContent:['@import "../../../variables.css";\n\n.button {\n    position: absolute;\n    top: 50%;\n    padding: 0;\n    margin: 0;\n    width: 80px;\n    height: 80px;\n    cursor: pointer;\n    background-color: transparent;\n    border: none;\n    transform: translateY(-50%);\n}\n\n.prev {\n    left: 0;\n}\n.prev::before {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 20px;\n    height: 20px;\n    content: "";\n    border: 2px solid transparent;\n    border-left-color: var(--grey);\n    border-top-color: var(--grey);\n    transform-origin: 0 0;\n    transform: rotate(-45deg) translateY(-50%) translateX(-50%);\n}\n.prev::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 30px;\n    height: 2px;\n    content: "";\n    background-color: var(--grey);\n    transform: translateY(-50%) translateX(-20%);\n}\n\n.next {\n    right: 0;\n}\n.next::before {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 20px;\n    height: 20px;\n    content: "";\n    border: 2px solid transparent;\n    border-left-color: var(--grey);\n    border-top-color: var(--grey);\n    transform-origin: 0 0;\n    transform: rotate(135deg) translateY(-50%) translateX(-50%);\n}\n.next::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 30px;\n    height: 2px;\n    content: "";\n    background-color: var(--grey);\n    transform: translateY(-50%) translateX(-80%);\n}\n'],sourceRoot:""}]),s.locals={button:"styles__button___h38hf",prev:"styles__prev___Lm_i9",next:"styles__next___DkryT"};const u=s},346:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),o=t(314),l=t.n(o),i=t(517),s=l()(a());s.i(i.A),s.push([e.id,'@keyframes styles__fadein___iPGGh {\n    from { opacity: 0; }\n    to { opacity: 1; }\n}\n\n.styles__backOverlay___cnBH0 {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    animation: styles__fadein___iPGGh 0.2s ease-out forwards;\n}\n\n.styles__container___YixGt {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    overflow: hidden;\n    width: 100%;\n    height: 90%;\n    max-width: 900px;\n    max-height: 800px;\n    transform: translateX(-50%) translateY(-50%);\n    background-color: var(--white);\n}\n\n.styles__closeButton___TLYLl {\n    position: absolute;\n    top: 0;\n    right: 10px;\n    width: 60px;\n    height: 60px;\n    background-color: transparent;\n    cursor: pointer;\n    border: none;\n}\n.styles__closeButton___TLYLl::before {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 2px;\n    height: 30px;\n    background-color: var(--light-grey);\n    content: "";\n    transform: translateX(-50%) translateY(-50%) rotate(45deg);\n}\n.styles__closeButton___TLYLl::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 2px;\n    height: 30px;\n    background-color: var(--light-grey);\n    content: "";\n    transform: translateX(-50%) translateY(-50%) rotate(-45deg);\n}\n\n.styles__scrollContainer___NV4m8 {\n    overflow: auto;\n    width: 100%;\n    height: 100%;\n}\n\n.styles__contentContainer___ygQKR {\n    max-width: 740px;\n    width: 100%;\n    padding: 0 20px 20px;\n    margin: 0 auto;\n    box-sizing: border-box;\n}\n\n.styles__contentContainer___ygQKR h2 {\n    font-size: 26px;\n    text-align: center;\n}\n\n.styles__contentContainer___ygQKR ul {\n    margin: 0;\n    padding: 0;\n}\n\n.styles__contentContainer___ygQKR ul li {\n    display: flex;\n    list-style: none;\n    margin-bottom: 2px;\n}\n\n.styles__contentContainer___ygQKR ul li span {\n    flex: 1;\n    margin-left: 4px;\n}\n\n.styles__linkToSource___uldiQ {\n    white-space: nowrap;\n}\n\n.styles__electronConfiguration___ZLG31 {\n    display: flex;\n    flex-direction: column;\n    font-size: 14px;\n    line-height: 1.2;\n}\n.styles__electronConfiguration___ZLG31 > span {\n    margin-bottom: 4px;\n}\n\n.styles__image___SQSYE {\n    margin-top: 30px;\n    width: 100%;\n}\n\n.styles__attribution___hWAgz {\n    display: block;\n    margin-top: 10px;\n    font-size: 11px;\n}\n',"",{version:3,sources:["webpack://./src/components/ElementPopup/styles.css"],names:[],mappings:"AAEA;IACI,OAAO,UAAU,EAAE;IACnB,KAAK,UAAU,EAAE;AACrB;;AAEA;IACI,eAAe;IACf,MAAM;IACN,OAAO;IACP,WAAW;IACX,YAAY;IACZ,UAAU;IACV,oCAAoC;IACpC,wDAAwC;AAC5C;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gBAAgB;IAChB,WAAW;IACX,WAAW;IACX,gBAAgB;IAChB,iBAAiB;IACjB,4CAA4C;IAC5C,8BAA8B;AAClC;;AAEA;IACI,kBAAkB;IAClB,MAAM;IACN,WAAW;IACX,WAAW;IACX,YAAY;IACZ,6BAA6B;IAC7B,eAAe;IACf,YAAY;AAChB;AACA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,UAAU;IACV,YAAY;IACZ,mCAAmC;IACnC,WAAW;IACX,0DAA0D;AAC9D;AACA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,UAAU;IACV,YAAY;IACZ,mCAAmC;IACnC,WAAW;IACX,2DAA2D;AAC/D;;AAEA;IACI,cAAc;IACd,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,gBAAgB;IAChB,WAAW;IACX,oBAAoB;IACpB,cAAc;IACd,sBAAsB;AAC1B;;AAEA;IACI,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,OAAO;IACP,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,eAAe;IACf,gBAAgB;AACpB;AACA;IACI,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,WAAW;AACf;;AAEA;IACI,cAAc;IACd,gBAAgB;IAChB,eAAe;AACnB",sourcesContent:['@import "../../variables.css";\n\n@keyframes fadein {\n    from { opacity: 0; }\n    to { opacity: 1; }\n}\n\n.backOverlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    animation: fadein 0.2s ease-out forwards;\n}\n\n.container {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    overflow: hidden;\n    width: 100%;\n    height: 90%;\n    max-width: 900px;\n    max-height: 800px;\n    transform: translateX(-50%) translateY(-50%);\n    background-color: var(--white);\n}\n\n.closeButton {\n    position: absolute;\n    top: 0;\n    right: 10px;\n    width: 60px;\n    height: 60px;\n    background-color: transparent;\n    cursor: pointer;\n    border: none;\n}\n.closeButton::before {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 2px;\n    height: 30px;\n    background-color: var(--light-grey);\n    content: "";\n    transform: translateX(-50%) translateY(-50%) rotate(45deg);\n}\n.closeButton::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 2px;\n    height: 30px;\n    background-color: var(--light-grey);\n    content: "";\n    transform: translateX(-50%) translateY(-50%) rotate(-45deg);\n}\n\n.scrollContainer {\n    overflow: auto;\n    width: 100%;\n    height: 100%;\n}\n\n.contentContainer {\n    max-width: 740px;\n    width: 100%;\n    padding: 0 20px 20px;\n    margin: 0 auto;\n    box-sizing: border-box;\n}\n\n.contentContainer h2 {\n    font-size: 26px;\n    text-align: center;\n}\n\n.contentContainer ul {\n    margin: 0;\n    padding: 0;\n}\n\n.contentContainer ul li {\n    display: flex;\n    list-style: none;\n    margin-bottom: 2px;\n}\n\n.contentContainer ul li span {\n    flex: 1;\n    margin-left: 4px;\n}\n\n.linkToSource {\n    white-space: nowrap;\n}\n\n.electronConfiguration {\n    display: flex;\n    flex-direction: column;\n    font-size: 14px;\n    line-height: 1.2;\n}\n.electronConfiguration > span {\n    margin-bottom: 4px;\n}\n\n.image {\n    margin-top: 30px;\n    width: 100%;\n}\n\n.attribution {\n    display: block;\n    margin-top: 10px;\n    font-size: 11px;\n}\n'],sourceRoot:""}]),s.locals={backOverlay:"styles__backOverlay___cnBH0",fadein:"styles__fadein___iPGGh",container:"styles__container___YixGt",closeButton:"styles__closeButton___TLYLl",scrollContainer:"styles__scrollContainer___NV4m8",contentContainer:"styles__contentContainer___ygQKR",linkToSource:"styles__linkToSource___uldiQ",electronConfiguration:"styles__electronConfiguration___ZLG31",image:"styles__image___SQSYE",attribution:"styles__attribution___hWAgz"};const u=s},559:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),o=t(314),l=t.n(o),i=t(517),s=l()(a());s.i(i.A),s.push([e.id,".styles__footer___Wv8W7 {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    padding-top: 20px;\n    padding-bottom: 20px;\n}\n\n.styles__footer___Wv8W7 span,\n.styles__footer___Wv8W7 a {\n    color: var(--white);\n    font-size: 14px;\n}\n.styles__footer___Wv8W7 a:hover {\n    text-decoration: none;\n}\n","",{version:3,sources:["webpack://./src/components/Footer/styles.css"],names:[],mappings:"AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,WAAW;IACX,iBAAiB;IACjB,oBAAoB;AACxB;;AAEA;;IAEI,mBAAmB;IACnB,eAAe;AACnB;AACA;IACI,qBAAqB;AACzB",sourcesContent:['@import "../../variables.css";\n\n.footer {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    padding-top: 20px;\n    padding-bottom: 20px;\n}\n\n.footer span,\n.footer a {\n    color: var(--white);\n    font-size: 14px;\n}\n.footer a:hover {\n    text-decoration: none;\n}\n'],sourceRoot:""}]),s.locals={footer:"styles__footer___Wv8W7"};const u=s},36:(e,n,t)=>{"use strict";t.d(n,{A:()=>i});var r=t(354),a=t.n(r),o=t(314),l=t.n(o)()(a());l.push([e.id,".styles__link___S7b1H:hover {\n    text-decoration: none;\n}","",{version:3,sources:["webpack://./src/components/Link/styles.css"],names:[],mappings:"AAAA;IACI,qBAAqB;AACzB",sourcesContent:[".link:hover {\n    text-decoration: none;\n}"],sourceRoot:""}]),l.locals={link:"styles__link___S7b1H"};const i=l},527:(e,n,t)=>{"use strict";t.d(n,{A:()=>i});var r=t(354),a=t.n(r),o=t(314),l=t.n(o)()(a());l.push([e.id,".styles__container___mZ_bz model-viewer {\n    width: 100%;\n    height: 300px;\n}\n","",{version:3,sources:["webpack://./src/components/ModelViewer/styles.css"],names:[],mappings:"AAAA;IACI,WAAW;IACX,aAAa;AACjB",sourcesContent:[".container model-viewer {\n    width: 100%;\n    height: 300px;\n}\n"],sourceRoot:""}]),l.locals={container:"styles__container___mZ_bz"};const i=l},916:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),o=t(314),l=t.n(o),i=t(517),s=l()(a());s.i(i.A),s.push([e.id,".styles__cell___orNp1 {\n    list-style: none;\n    border: var(--border-size) solid transparent;\n    overflow: hidden;\n}\n\n.styles__selectedCell___oBZ16 {\n    border-color: var(--active-border-color);\n}\n\n.styles__cellButton___cqja8 {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    flex-direction: column;\n    justify-content: space-between;\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n}\n\n.styles__top___ihZpO {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    font-size: var(--cell-small-text-size);\n}\n\n.styles__symbol___MoSNv {\n    width: 100%;\n    font-size: var(--cell-main-text-size);\n    text-align: center;\n}\n\n.styles__elementName___iizDV {\n    width: 100%;\n    font-size: var(--cell-small-text-size);\n    text-align: center;\n}\n","",{version:3,sources:["webpack://./src/components/PeriodicTable/Cell/styles.css"],names:[],mappings:"AAEA;IACI,gBAAgB;IAChB,4CAA4C;IAC5C,gBAAgB;AACpB;;AAEA;IACI,wCAAwC;AAC5C;;AAEA;IACI,aAAa;IACb,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,8BAA8B;IAC9B,sBAAsB;IACtB,UAAU;IACV,SAAS;IACT,YAAY;IACZ,6BAA6B;IAC7B,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,WAAW;IACX,sCAAsC;AAC1C;;AAEA;IACI,WAAW;IACX,qCAAqC;IACrC,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,sCAAsC;IACtC,kBAAkB;AACtB",sourcesContent:['@import "../../../variables.css";\n\n.cell {\n    list-style: none;\n    border: var(--border-size) solid transparent;\n    overflow: hidden;\n}\n\n.selectedCell {\n    border-color: var(--active-border-color);\n}\n\n.cellButton {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    flex-direction: column;\n    justify-content: space-between;\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n}\n\n.top {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    font-size: var(--cell-small-text-size);\n}\n\n.symbol {\n    width: 100%;\n    font-size: var(--cell-main-text-size);\n    text-align: center;\n}\n\n.elementName {\n    width: 100%;\n    font-size: var(--cell-small-text-size);\n    text-align: center;\n}\n'],sourceRoot:""}]),s.locals={cell:"styles__cell___orNp1",selectedCell:"styles__selectedCell___oBZ16",cellButton:"styles__cellButton___cqja8",top:"styles__top___ihZpO",symbol:"styles__symbol___MoSNv",elementName:"styles__elementName___iizDV"};const u=s},924:(e,n,t)=>{"use strict";t.d(n,{A:()=>i});var r=t(354),a=t.n(r),o=t(314),l=t.n(o)()(a());l.push([e.id,"\n.styles__container___eh52j h4 {\n    height: 20px;\n    margin: 0;\n    text-align: center;\n}\n\n.styles__list___wTCaK {\n    margin-bottom: 4px;\n    font-size: 14px;\n}\n","",{version:3,sources:["webpack://./src/components/PeriodicTable/Groups/styles.css"],names:[],mappings:";AACA;IACI,YAAY;IACZ,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,eAAe;AACnB",sourcesContent:["\n.container h4 {\n    height: 20px;\n    margin: 0;\n    text-align: center;\n}\n\n.list {\n    margin-bottom: 4px;\n    font-size: 14px;\n}\n"],sourceRoot:""}]),l.locals={container:"styles__container___eh52j",list:"styles__list___wTCaK"};const i=l},638:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),o=t(314),l=t.n(o),i=t(517),s=l()(a());s.i(i.A),s.push([e.id,".styles__container___U_sTq {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.styles__container___U_sTq h4 {\n    margin: 0;\n    font-size: 15px;\n    writing-mode: vertical-lr;\n    text-orientation: upright;\n}\n\n.styles__list____ShVU {\n    display: flex;\n    flex-direction: column;\n    margin: 20px 0 0 0;\n    padding: 0;\n}\n\n.styles__item___DIiD_ {\n    display: flex;\n    width: var(--cell-size);\n    height: var(--cell-size);\n    padding: 2px;\n    margin-bottom: 4px;\n    font-size: 14px;\n    box-sizing: border-box;\n}\n","",{version:3,sources:["webpack://./src/components/PeriodicTable/Periods/styles.css"],names:[],mappings:"AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,SAAS;IACT,eAAe;IACf,yBAAyB;IACzB,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,wBAAwB;IACxB,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,sBAAsB;AAC1B",sourcesContent:['@import "../../../variables.css";\n\n.container {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.container h4 {\n    margin: 0;\n    font-size: 15px;\n    writing-mode: vertical-lr;\n    text-orientation: upright;\n}\n\n.list {\n    display: flex;\n    flex-direction: column;\n    margin: 20px 0 0 0;\n    padding: 0;\n}\n\n.item {\n    display: flex;\n    width: var(--cell-size);\n    height: var(--cell-size);\n    padding: 2px;\n    margin-bottom: 4px;\n    font-size: 14px;\n    box-sizing: border-box;\n}\n'],sourceRoot:""}]),s.locals={container:"styles__container___U_sTq",list:"styles__list____ShVU",item:"styles__item___DIiD_"};const u=s},413:(e,n,t)=>{"use strict";t.d(n,{A:()=>i});var r=t(354),a=t.n(r),o=t(314),l=t.n(o)()(a());l.push([e.id,".styles__list___wz0zC {\n    margin: 0;\n    padding: 0;\n}\n\n.styles__row___ctAlV {\n    list-style: none;\n    margin-bottom: 4px;\n}\n\n.styles__row___ctAlV:last-child {\n    margin-bottom: 0;\n}\n","",{version:3,sources:["webpack://./src/components/PeriodicTable/Rows/styles.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;AACpB",sourcesContent:[".list {\n    margin: 0;\n    padding: 0;\n}\n\n.row {\n    list-style: none;\n    margin-bottom: 4px;\n}\n\n.row:last-child {\n    margin-bottom: 0;\n}\n"],sourceRoot:""}]),l.locals={list:"styles__list___wz0zC",row:"styles__row___ctAlV"};const i=l},19:(e,n,t)=>{"use strict";t.d(n,{A:()=>i});var r=t(354),a=t.n(r),o=t(314),l=t.n(o)()(a());l.push([e.id,".styles__container___r4uQ3 {\n    display: flex;\n    margin-bottom: 20px;\n    overflow-x: auto;\n}\n","",{version:3,sources:["webpack://./src/components/PeriodicTable/styles.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,gBAAgB;AACpB",sourcesContent:[".container {\n    display: flex;\n    margin-bottom: 20px;\n    overflow-x: auto;\n}\n"],sourceRoot:""}]),l.locals={container:"styles__container___r4uQ3"};const i=l},351:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),o=t(314),l=t.n(o),i=t(517),s=l()(a());s.i(i.A),s.push([e.id,".styles__supportButtonContainer___ouuuU {\n    display: flex;\n    justify-content: flex-end;\n    margin-bottom: 12px;\n}\n\n.styles__supportButton___lOPjJ {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0;\n    padding: 6px 10px;\n    font-size: 12px;\n    cursor: pointer;\n    background-color: transparent;\n    border: 1px solid var(--grey);\n    border-radius: 4px;\n}\n\n.styles__supportButton___lOPjJ img {\n    width: 20px;\n    margin-left: 6px;\n    transform: rotate(0);\n    transition: transform .2s;\n}\n\n.styles__supportButton___lOPjJ:hover img {\n    transform: rotate(-15deg);\n}\n","",{version:3,sources:["webpack://./src/components/SupportButton/styles.css"],names:[],mappings:"AAEA;IACI,aAAa;IACb,yBAAyB;IACzB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,SAAS;IACT,iBAAiB;IACjB,eAAe;IACf,eAAe;IACf,6BAA6B;IAC7B,6BAA6B;IAC7B,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,gBAAgB;IAChB,oBAAoB;IACpB,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;AAC7B",sourcesContent:['@import "../../variables.css";\n\n.supportButtonContainer {\n    display: flex;\n    justify-content: flex-end;\n    margin-bottom: 12px;\n}\n\n.supportButton {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin: 0;\n    padding: 6px 10px;\n    font-size: 12px;\n    cursor: pointer;\n    background-color: transparent;\n    border: 1px solid var(--grey);\n    border-radius: 4px;\n}\n\n.supportButton img {\n    width: 20px;\n    margin-left: 6px;\n    transform: rotate(0);\n    transition: transform .2s;\n}\n\n.supportButton:hover img {\n    transform: rotate(-15deg);\n}\n'],sourceRoot:""}]),s.locals={supportButtonContainer:"styles__supportButtonContainer___ouuuU",supportButton:"styles__supportButton___lOPjJ"};const u=s},400:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),o=t(314),l=t.n(o),i=t(517),s=l()(a());s.i(i.A),s.push([e.id,".styles__content___K_zk1 {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.styles__address___DDJmu {\n    display: flex;\n    align-items: center;\n}\n\n.styles__addressText___aXYvD {\n    margin-right: 12px;\n    font-size: 14px;\n    word-break: break-all;\n}\n\n.styles__address___DDJmu button {\n    margin: 0;\n    padding: 4px;\n    cursor: pointer;\n    border: none;\n    background-color: transparent;\n}\n\n.styles__address___DDJmu button svg path {\n    fill: var(--dark);\n    transition: fill .2s;\n}\n.styles__address___DDJmu button:hover svg path {\n    fill: var(--grey);\n}\n.styles__address___DDJmu button:active svg path {\n    fill: var(--green);\n}\n","",{version:3,sources:["webpack://./src/components/SupportPopup/Item/styles.css"],names:[],mappings:"AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;AACvB;;AAEA;IACI,kBAAkB;IAClB,eAAe;IACf,qBAAqB;AACzB;;AAEA;IACI,SAAS;IACT,YAAY;IACZ,eAAe;IACf,YAAY;IACZ,6BAA6B;AACjC;;AAEA;IACI,iBAAiB;IACjB,oBAAoB;AACxB;AACA;IACI,iBAAiB;AACrB;AACA;IACI,kBAAkB;AACtB",sourcesContent:['@import "../../../variables.css";\n\n.content {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.address {\n    display: flex;\n    align-items: center;\n}\n\n.addressText {\n    margin-right: 12px;\n    font-size: 14px;\n    word-break: break-all;\n}\n\n.address button {\n    margin: 0;\n    padding: 4px;\n    cursor: pointer;\n    border: none;\n    background-color: transparent;\n}\n\n.address button svg path {\n    fill: var(--dark);\n    transition: fill .2s;\n}\n.address button:hover svg path {\n    fill: var(--grey);\n}\n.address button:active svg path {\n    fill: var(--green);\n}\n'],sourceRoot:""}]),s.locals={content:"styles__content___K_zk1",address:"styles__address___DDJmu",addressText:"styles__addressText___aXYvD"};const u=s},131:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),o=t(314),l=t.n(o),i=t(517),s=l()(a());s.i(i.A),s.push([e.id,'@keyframes styles__fadein___jFRGg {\n    from { opacity: 0; }\n    to { opacity: 1; }\n}\n\n.styles__backOverlay___appTf {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    animation: styles__fadein___jFRGg 0.2s ease-out forwards;\n}\n\n.styles__container___zXNpX {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    overflow: hidden;\n    width: 100%;\n    height: 90%;\n    max-width: 900px;\n    max-height: 800px;\n    transform: translateX(-50%) translateY(-50%);\n    background-color: var(--white);\n}\n\n.styles__closeButton___rO4L7 {\n    position: absolute;\n    top: 0;\n    right: 10px;\n    width: 60px;\n    height: 60px;\n    background-color: transparent;\n    cursor: pointer;\n    border: none;\n}\n.styles__closeButton___rO4L7::before {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 2px;\n    height: 30px;\n    background-color: var(--light-grey);\n    content: "";\n    transform: translateX(-50%) translateY(-50%) rotate(45deg);\n}\n.styles__closeButton___rO4L7::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 2px;\n    height: 30px;\n    background-color: var(--light-grey);\n    content: "";\n    transform: translateX(-50%) translateY(-50%) rotate(-45deg);\n}\n\n.styles__scrollContainer___Oft21 {\n    overflow: auto;\n    width: 100%;\n    height: 100%;\n}\n\n.styles__contentContainer___ZoEOQ {\n    max-width: 740px;\n    width: 100%;\n    padding: 0 20px 20px;\n    margin: 0 auto;\n    box-sizing: border-box;\n}\n\n.styles__list___kW9Mv {\n    margin: 0;\n    padding: 20px 0;\n}\n\n.styles__listItem___f3hsj {\n    list-style: none;\n}\n\n.styles__listItem___f3hsj > ul {\n    margin: 0;\n    padding: 0;\n}\n.styles__listItem___f3hsj > ul > li {\n    list-style: none;\n    padding-bottom: 16px;\n    margin-bottom: 16px;\n    border-bottom: 1px solid var(--grey);\n}\n',"",{version:3,sources:["webpack://./src/components/SupportPopup/styles.css"],names:[],mappings:"AAEA;IACI,OAAO,UAAU,EAAE;IACnB,KAAK,UAAU,EAAE;AACrB;;AAEA;IACI,eAAe;IACf,MAAM;IACN,OAAO;IACP,WAAW;IACX,YAAY;IACZ,UAAU;IACV,oCAAoC;IACpC,wDAAwC;AAC5C;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gBAAgB;IAChB,WAAW;IACX,WAAW;IACX,gBAAgB;IAChB,iBAAiB;IACjB,4CAA4C;IAC5C,8BAA8B;AAClC;;AAEA;IACI,kBAAkB;IAClB,MAAM;IACN,WAAW;IACX,WAAW;IACX,YAAY;IACZ,6BAA6B;IAC7B,eAAe;IACf,YAAY;AAChB;AACA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,UAAU;IACV,YAAY;IACZ,mCAAmC;IACnC,WAAW;IACX,0DAA0D;AAC9D;AACA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,UAAU;IACV,YAAY;IACZ,mCAAmC;IACnC,WAAW;IACX,2DAA2D;AAC/D;;AAEA;IACI,cAAc;IACd,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,gBAAgB;IAChB,WAAW;IACX,oBAAoB;IACpB,cAAc;IACd,sBAAsB;AAC1B;;AAEA;IACI,SAAS;IACT,eAAe;AACnB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,SAAS;IACT,UAAU;AACd;AACA;IACI,gBAAgB;IAChB,oBAAoB;IACpB,mBAAmB;IACnB,oCAAoC;AACxC",sourcesContent:['@import "../../variables.css";\n\n@keyframes fadein {\n    from { opacity: 0; }\n    to { opacity: 1; }\n}\n\n.backOverlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    animation: fadein 0.2s ease-out forwards;\n}\n\n.container {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    overflow: hidden;\n    width: 100%;\n    height: 90%;\n    max-width: 900px;\n    max-height: 800px;\n    transform: translateX(-50%) translateY(-50%);\n    background-color: var(--white);\n}\n\n.closeButton {\n    position: absolute;\n    top: 0;\n    right: 10px;\n    width: 60px;\n    height: 60px;\n    background-color: transparent;\n    cursor: pointer;\n    border: none;\n}\n.closeButton::before {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 2px;\n    height: 30px;\n    background-color: var(--light-grey);\n    content: "";\n    transform: translateX(-50%) translateY(-50%) rotate(45deg);\n}\n.closeButton::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 2px;\n    height: 30px;\n    background-color: var(--light-grey);\n    content: "";\n    transform: translateX(-50%) translateY(-50%) rotate(-45deg);\n}\n\n.scrollContainer {\n    overflow: auto;\n    width: 100%;\n    height: 100%;\n}\n\n.contentContainer {\n    max-width: 740px;\n    width: 100%;\n    padding: 0 20px 20px;\n    margin: 0 auto;\n    box-sizing: border-box;\n}\n\n.list {\n    margin: 0;\n    padding: 20px 0;\n}\n\n.listItem {\n    list-style: none;\n}\n\n.listItem > ul {\n    margin: 0;\n    padding: 0;\n}\n.listItem > ul > li {\n    list-style: none;\n    padding-bottom: 16px;\n    margin-bottom: 16px;\n    border-bottom: 1px solid var(--grey);\n}\n'],sourceRoot:""}]),s.locals={backOverlay:"styles__backOverlay___appTf",fadein:"styles__fadein___jFRGg",container:"styles__container___zXNpX",closeButton:"styles__closeButton___rO4L7",scrollContainer:"styles__scrollContainer___Oft21",contentContainer:"styles__contentContainer___ZoEOQ",list:"styles__list___kW9Mv",listItem:"styles__listItem___f3hsj"};const u=s},959:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),o=t(314),l=t.n(o),i=t(517),s=l()(a());s.i(i.A),s.push([e.id,".styles__container___ZbLxv {\n    display: inline-flex;\n    flex-direction: row;\n    margin: 0;\n    padding: 4px;\n    border: var(--border-size) solid var(--grey);\n    border-radius: 4px;\n}\n\n.styles__container___ZbLxv li {\n    list-style: none;\n}\n\n.styles__container___ZbLxv li button {\n    margin: 0;\n    padding: 6px 12px;\n    color: var(--grey);\n    cursor: pointer;\n    background-color: transparent;\n    border: none;\n    border-radius: 4px;\n}\n\n.styles__container___ZbLxv li.styles__active___Sanqr button {\n    color: var(--white);\n    cursor: default;\n    background-color: var(--blue);\n}\n","",{version:3,sources:["webpack://./src/components/Switcher/styles.css"],names:[],mappings:"AAEA;IACI,oBAAoB;IACpB,mBAAmB;IACnB,SAAS;IACT,YAAY;IACZ,4CAA4C;IAC5C,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,SAAS;IACT,iBAAiB;IACjB,kBAAkB;IAClB,eAAe;IACf,6BAA6B;IAC7B,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;IACnB,eAAe;IACf,6BAA6B;AACjC",sourcesContent:['@import "../../variables.css";\n\n.container {\n    display: inline-flex;\n    flex-direction: row;\n    margin: 0;\n    padding: 4px;\n    border: var(--border-size) solid var(--grey);\n    border-radius: 4px;\n}\n\n.container li {\n    list-style: none;\n}\n\n.container li button {\n    margin: 0;\n    padding: 6px 12px;\n    color: var(--grey);\n    cursor: pointer;\n    background-color: transparent;\n    border: none;\n    border-radius: 4px;\n}\n\n.container li.active button {\n    color: var(--white);\n    cursor: default;\n    background-color: var(--blue);\n}\n'],sourceRoot:""}]),s.locals={container:"styles__container___ZbLxv",active:"styles__active___Sanqr"};const u=s},765:(e,n,t)=>{"use strict";t.d(n,{A:()=>i});var r=t(354),a=t.n(r),o=t(314),l=t.n(o)()(a());l.push([e.id,".styles__header___nD0wM {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n}\n","",{version:3,sources:["webpack://./src/components/Title/styles.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;AACvB",sourcesContent:[".header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n}\n"],sourceRoot:""}]),l.locals={header:"styles__header___nD0wM"};const i=l},809:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),o=t(314),l=t.n(o),i=t(517),s=l()(a());s.i(i.A),s.push([e.id,".sharedStyles__centerContainer___bZmFi {\n    width: 100%;\n    max-width: var(--max-page-width);\n    margin: 0 auto;\n    padding: 0 20px;\n    box-sizing: border-box;\n}\n.sharedStyles__superLongCenterContainer___tAABl {\n    max-width: var(--super-long-table-width);\n}\n\n.sharedStyles__periodItem___K8seE,\n.sharedStyles__groupItem___bfO9z {\n    align-items: center;\n    justify-content: center;\n    list-style: none;\n}\n\n.sharedStyles__groups___RKg_3,\n.sharedStyles__row___IqTA7 > ul {\n    display: flex;\n    flex-direction: row;\n    margin: 0;\n    padding: 0;\n}\n\n.sharedStyles__groupItem___bfO9z,\n.sharedStyles__cell___Jera5,\n.sharedStyles__emptyCell___NKTYb {\n    display: flex;\n    width: var(--cell-size);\n    height: var(--cell-size);\n    padding: 2px;\n    margin-right: 4px;\n    box-sizing: border-box;\n}\n.sharedStyles__groupItem___bfO9z:last-child,\n.sharedStyles__cell___Jera5:last-child,\n.sharedStyles__emptyCell___NKTYb:last-child {\n    margin-right: 0;\n}\n\n.sharedStyles__nobleGas___K8KZy {\n    background-color: var(--nobble-gas-color);\n}\n.sharedStyles__diatomicNonMetals___vSmhy {\n    background-color: var(--diatomic-non-metals-color);\n}\n.sharedStyles__transitionMetal___wRwTz {\n    background-color: var(--transition-metal-color);\n}\n.sharedStyles__postTransitionMetal___AUrXn {\n    background-color: var(--post-transition-metal-color);\n}\n.sharedStyles__metalloid___M855d {\n    background-color: var(--metalloid-color);\n}\n.sharedStyles__alkaliMetal___coWtC {\n    background-color: var(--alkali-metal-color);\n}\n.sharedStyles__alkalineEarthMetal___s4Jh3 {\n    background-color: var(--alkaline-earth-metal-color);\n}\n.sharedStyles__unknownProperties___dUEWx {\n    background-color: var(--unknown-properties-color);\n}\n.sharedStyles__actinide___Ns3Yi {\n    background-color: var(--actinide-color);\n}\n.sharedStyles__lanthanide___SmTfz {\n    background-color: var(--lanthanide-color);\n}\n","",{version:3,sources:["webpack://./src/sharedStyles.css"],names:[],mappings:"AAEA;IACI,WAAW;IACX,gCAAgC;IAChC,cAAc;IACd,eAAe;IACf,sBAAsB;AAC1B;AACA;IACI,wCAAwC;AAC5C;;AAEA;;IAEI,mBAAmB;IACnB,uBAAuB;IACvB,gBAAgB;AACpB;;AAEA;;IAEI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,UAAU;AACd;;AAEA;;;IAGI,aAAa;IACb,uBAAuB;IACvB,wBAAwB;IACxB,YAAY;IACZ,iBAAiB;IACjB,sBAAsB;AAC1B;AACA;;;IAGI,eAAe;AACnB;;AAEA;IACI,yCAAyC;AAC7C;AACA;IACI,kDAAkD;AACtD;AACA;IACI,+CAA+C;AACnD;AACA;IACI,oDAAoD;AACxD;AACA;IACI,wCAAwC;AAC5C;AACA;IACI,2CAA2C;AAC/C;AACA;IACI,mDAAmD;AACvD;AACA;IACI,iDAAiD;AACrD;AACA;IACI,uCAAuC;AAC3C;AACA;IACI,yCAAyC;AAC7C",sourcesContent:['@import "./variables.css";\n\n.centerContainer {\n    width: 100%;\n    max-width: var(--max-page-width);\n    margin: 0 auto;\n    padding: 0 20px;\n    box-sizing: border-box;\n}\n.superLongCenterContainer {\n    max-width: var(--super-long-table-width);\n}\n\n.periodItem,\n.groupItem {\n    align-items: center;\n    justify-content: center;\n    list-style: none;\n}\n\n.groups,\n.row > ul {\n    display: flex;\n    flex-direction: row;\n    margin: 0;\n    padding: 0;\n}\n\n.groupItem,\n.cell,\n.emptyCell {\n    display: flex;\n    width: var(--cell-size);\n    height: var(--cell-size);\n    padding: 2px;\n    margin-right: 4px;\n    box-sizing: border-box;\n}\n.groupItem:last-child,\n.cell:last-child,\n.emptyCell:last-child {\n    margin-right: 0;\n}\n\n.nobleGas {\n    background-color: var(--nobble-gas-color);\n}\n.diatomicNonMetals {\n    background-color: var(--diatomic-non-metals-color);\n}\n.transitionMetal {\n    background-color: var(--transition-metal-color);\n}\n.postTransitionMetal {\n    background-color: var(--post-transition-metal-color);\n}\n.metalloid {\n    background-color: var(--metalloid-color);\n}\n.alkaliMetal {\n    background-color: var(--alkali-metal-color);\n}\n.alkalineEarthMetal {\n    background-color: var(--alkaline-earth-metal-color);\n}\n.unknownProperties {\n    background-color: var(--unknown-properties-color);\n}\n.actinide {\n    background-color: var(--actinide-color);\n}\n.lanthanide {\n    background-color: var(--lanthanide-color);\n}\n'],sourceRoot:""}]),s.locals={centerContainer:"sharedStyles__centerContainer___bZmFi",superLongCenterContainer:"sharedStyles__superLongCenterContainer___tAABl",periodItem:"sharedStyles__periodItem___K8seE",groupItem:"sharedStyles__groupItem___bfO9z",groups:"sharedStyles__groups___RKg_3",row:"sharedStyles__row___IqTA7",cell:"sharedStyles__cell___Jera5",emptyCell:"sharedStyles__emptyCell___NKTYb",nobleGas:"sharedStyles__nobleGas___K8KZy",diatomicNonMetals:"sharedStyles__diatomicNonMetals___vSmhy",transitionMetal:"sharedStyles__transitionMetal___wRwTz",postTransitionMetal:"sharedStyles__postTransitionMetal___AUrXn",metalloid:"sharedStyles__metalloid___M855d",alkaliMetal:"sharedStyles__alkaliMetal___coWtC",alkalineEarthMetal:"sharedStyles__alkalineEarthMetal___s4Jh3",unknownProperties:"sharedStyles__unknownProperties___dUEWx",actinide:"sharedStyles__actinide___Ns3Yi",lanthanide:"sharedStyles__lanthanide___SmTfz"};const u=s},478:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),o=t(314),l=t.n(o),i=t(517),s=l()(a());s.i(i.A),s.push([e.id,'html {\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    height: 100%;\n    font-size: var(--main-font-size);\n    font-family: "Montserrat", serif;\n}\n\n#root {\n    height: 100%;\n}\n\n.hide {\n    overflow: hidden;\n}\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAEA;IACI,YAAY;AAChB;;AAEA;IACI,SAAS;IACT,YAAY;IACZ,gCAAgC;IAChC,gCAAgC;AACpC;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,gBAAgB;AACpB",sourcesContent:['@import "./variables.css";\n\nhtml {\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    height: 100%;\n    font-size: var(--main-font-size);\n    font-family: "Montserrat", serif;\n}\n\n:global(#root) {\n    height: 100%;\n}\n\n:global(.hide) {\n    overflow: hidden;\n}\n'],sourceRoot:""}]),s.locals={};const u=s},517:(e,n,t)=>{"use strict";t.d(n,{A:()=>i});var r=t(354),a=t.n(r),o=t(314),l=t.n(o)()(a());l.push([e.id,":root {\n    --main-font-size: 16px;\n    --max-page-width: 1280px;\n    --super-long-table-width: 2180px;\n\n    --cell-size: 60px;\n    --cell-size-mini: 4px;\n    --cell-main-text-size: 18px;\n    --cell-small-text-size: 9px;\n    --border-size: 1px;\n    \n    /* colors */\n    --active-border-color: #000000;\n    --dark: #242329;\n    --white: #ffffff;\n    --light-grey: #a0a0a0;\n    --grey: #dedede;\n    --blue: #5c47f6;\n    --green: #008000;\n\n    --nobble-gas-color: #ffe7eb;\n    --diatomic-non-metals-color: #e2eeff;\n    --transition-metal-color:#f3e8fd;\n    --post-transition-metal-color: #d6f9e8;\n    --metalloid-color: #fef7e1;\n    --alkali-metal-color: #d8f8ff;\n    --alkaline-earth-metal-color: #ffe7e7;\n    --unknown-properties-color: #e7e7ea;\n    --actinide-color: #fee6d4;\n    --lanthanide-color: #dff3ff;\n}\n","",{version:3,sources:["webpack://./src/variables.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,wBAAwB;IACxB,gCAAgC;;IAEhC,iBAAiB;IACjB,qBAAqB;IACrB,2BAA2B;IAC3B,2BAA2B;IAC3B,kBAAkB;;IAElB,WAAW;IACX,8BAA8B;IAC9B,eAAe;IACf,gBAAgB;IAChB,qBAAqB;IACrB,eAAe;IACf,eAAe;IACf,gBAAgB;;IAEhB,2BAA2B;IAC3B,oCAAoC;IACpC,gCAAgC;IAChC,sCAAsC;IACtC,0BAA0B;IAC1B,6BAA6B;IAC7B,qCAAqC;IACrC,mCAAmC;IACnC,yBAAyB;IACzB,2BAA2B;AAC/B",sourcesContent:[":root {\n    --main-font-size: 16px;\n    --max-page-width: 1280px;\n    --super-long-table-width: 2180px;\n\n    --cell-size: 60px;\n    --cell-size-mini: 4px;\n    --cell-main-text-size: 18px;\n    --cell-small-text-size: 9px;\n    --border-size: 1px;\n    \n    /* colors */\n    --active-border-color: #000000;\n    --dark: #242329;\n    --white: #ffffff;\n    --light-grey: #a0a0a0;\n    --grey: #dedede;\n    --blue: #5c47f6;\n    --green: #008000;\n\n    --nobble-gas-color: #ffe7eb;\n    --diatomic-non-metals-color: #e2eeff;\n    --transition-metal-color:#f3e8fd;\n    --post-transition-metal-color: #d6f9e8;\n    --metalloid-color: #fef7e1;\n    --alkali-metal-color: #d8f8ff;\n    --alkaline-earth-metal-color: #ffe7e7;\n    --unknown-properties-color: #e7e7ea;\n    --actinide-color: #fee6d4;\n    --lanthanide-color: #dff3ff;\n}\n"],sourceRoot:""}]),l.locals={};const i=l},314:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var l={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(l[s]=!0)}for(var u=0;u<e.length;u++){var c=[].concat(e[u]);r&&l[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),n.push(c))}},n}},354:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},146:(e,n,t)=>{"use strict";var r=t(363),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},l={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},i={};function s(e){return r.isMemo(e)?l:i[e.$$typeof]||a}i[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},i[r.Memo]=l;var u=Object.defineProperty,c=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(n,t,r){if("string"!=typeof t){if(h){var a=p(t);a&&a!==h&&e(n,a,r)}var l=c(t);f&&(l=l.concat(f(t)));for(var i=s(n),m=s(t),A=0;A<l.length;++A){var g=l[A];if(!(o[g]||r&&r[g]||m&&m[g]||i&&i[g])){var y=d(t,g);try{u(n,g,y)}catch(e){}}}}return n}},551:(e,n,t)=>{"use strict";var r=t(540),a=t(982);function o(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var l=new Set,i={};function s(e,n){u(e,n),u(e+"Capture",n)}function u(e,n){for(i[e]=n,e=0;e<n.length;e++)l.add(n[e])}var c=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),f=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},h={};function m(e,n,t,r,a,o,l){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=t,this.propertyName=e,this.type=n,this.sanitizeURL=o,this.removeEmptyString=l}var A={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){A[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var n=e[0];A[n]=new m(n,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){A[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){A[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){A[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){A[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){A[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){A[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){A[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function y(e){return e[1].toUpperCase()}function v(e,n,t,r){var a=A.hasOwnProperty(n)?A[n]:null;(null!==a?0!==a.type:r||!(2<n.length)||"o"!==n[0]&&"O"!==n[0]||"n"!==n[1]&&"N"!==n[1])&&(function(e,n,t,r){if(null==n||function(e,n,t,r){if(null!==t&&0===t.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,t,a,r)&&(t=null),r||null===a?function(e){return!!f.call(h,e)||!f.call(p,e)&&(d.test(e)?h[e]=!0:(p[e]=!0,!1))}(n)&&(null===t?e.removeAttribute(n):e.setAttribute(n,""+t)):a.mustUseProperty?e[a.propertyName]=null===t?3!==a.type&&"":t:(n=a.attributeName,r=a.attributeNamespace,null===t?e.removeAttribute(n):(t=3===(a=a.type)||4===a&&!0===t?"":""+t,r?e.setAttributeNS(r,n,t):e.setAttribute(n,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var n=e.replace(g,y);A[n]=new m(n,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var n=e.replace(g,y);A[n]=new m(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var n=e.replace(g,y);A[n]=new m(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){A[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),A.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){A[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var b=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,_=Symbol.for("react.element"),C=Symbol.for("react.portal"),E=Symbol.for("react.fragment"),w=Symbol.for("react.strict_mode"),k=Symbol.for("react.profiler"),I=Symbol.for("react.provider"),S=Symbol.for("react.context"),B=Symbol.for("react.forward_ref"),x=Symbol.for("react.suspense"),T=Symbol.for("react.suspense_list"),N=Symbol.for("react.memo"),P=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var L=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var M=Symbol.iterator;function R(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=M&&e[M]||e["@@iterator"])?e:null}var O,H=Object.assign;function D(e){if(void 0===O)try{throw Error()}catch(e){var n=e.stack.trim().match(/\n( *(at )?)/);O=n&&n[1]||""}return"\n"+O+e}var z=!1;function U(e,n){if(!e||z)return"";z=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(e){var r=e}Reflect.construct(e,[],n)}else{try{n.call()}catch(e){r=e}e.call(n.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(n){if(n&&r&&"string"==typeof n.stack){for(var a=n.stack.split("\n"),o=r.stack.split("\n"),l=a.length-1,i=o.length-1;1<=l&&0<=i&&a[l]!==o[i];)i--;for(;1<=l&&0<=i;l--,i--)if(a[l]!==o[i]){if(1!==l||1!==i)do{if(l--,0>--i||a[l]!==o[i]){var s="\n"+a[l].replace(" at new "," at ");return e.displayName&&s.includes("<anonymous>")&&(s=s.replace("<anonymous>",e.displayName)),s}}while(1<=l&&0<=i);break}}}finally{z=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?D(e):""}function F(e){switch(e.tag){case 5:return D(e.type);case 16:return D("Lazy");case 13:return D("Suspense");case 19:return D("SuspenseList");case 0:case 2:case 15:return U(e.type,!1);case 11:return U(e.type.render,!1);case 1:return U(e.type,!0);default:return""}}function j(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case E:return"Fragment";case C:return"Portal";case k:return"Profiler";case w:return"StrictMode";case x:return"Suspense";case T:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case S:return(e.displayName||"Context")+".Consumer";case I:return(e._context.displayName||"Context")+".Provider";case B:var n=e.render;return(e=e.displayName)||(e=""!==(e=n.displayName||n.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case N:return null!==(n=e.displayName||null)?n:j(e.type)||"Memo";case P:n=e._payload,e=e._init;try{return j(e(n))}catch(e){}}return null}function W(e){var n=e.type;switch(e.tag){case 24:return"Cache";case 9:return(n.displayName||"Context")+".Consumer";case 10:return(n._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=n.render).displayName||e.name||"",n.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return n;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return j(n);case 8:return n===w?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof n)return n.displayName||n.name||null;if("string"==typeof n)return n}return null}function G(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function V(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function Y(e){e._valueTracker||(e._valueTracker=function(e){var n=V(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),r=""+e[n];if(!e.hasOwnProperty(n)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var a=t.get,o=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function $(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),r="";return e&&(r=V(e)?e.checked?"true":"false":e.value),(e=r)!==t&&(n.setValue(e),!0)}function X(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function Q(e,n){var t=n.checked;return H({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function K(e,n){var t=null==n.defaultValue?"":n.defaultValue,r=null!=n.checked?n.checked:n.defaultChecked;t=G(null!=n.value?n.value:t),e._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function Z(e,n){null!=(n=n.checked)&&v(e,"checked",n,!1)}function q(e,n){Z(e,n);var t=G(n.value),r=n.type;if(null!=t)"number"===r?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");n.hasOwnProperty("value")?ee(e,n.type,t):n.hasOwnProperty("defaultValue")&&ee(e,n.type,G(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function J(e,n,t){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var r=n.type;if(!("submit"!==r&&"reset"!==r||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,t||n===e.value||(e.value=n),e.defaultValue=n}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function ee(e,n,t){"number"===n&&X(e.ownerDocument)===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}var ne=Array.isArray;function te(e,n,t,r){if(e=e.options,n){n={};for(var a=0;a<t.length;a++)n["$"+t[a]]=!0;for(t=0;t<e.length;t++)a=n.hasOwnProperty("$"+e[t].value),e[t].selected!==a&&(e[t].selected=a),a&&r&&(e[t].defaultSelected=!0)}else{for(t=""+G(t),n=null,a=0;a<e.length;a++){if(e[a].value===t)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==n||e[a].disabled||(n=e[a])}null!==n&&(n.selected=!0)}}function re(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(o(91));return H({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,n){var t=n.value;if(null==t){if(t=n.children,n=n.defaultValue,null!=t){if(null!=n)throw Error(o(92));if(ne(t)){if(1<t.length)throw Error(o(93));t=t[0]}n=t}null==n&&(n=""),t=n}e._wrapperState={initialValue:G(t)}}function oe(e,n){var t=G(n.value),r=G(n.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==n.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=r&&(e.defaultValue=""+r)}function le(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function se(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var ue,ce,fe=(ce=function(e,n){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=n;else{for((ue=ue||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=ue.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,t,r){MSApp.execUnsafeLocalFunction((function(){return ce(e,n)}))}:ce);function de(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},he=["Webkit","ms","Moz","O"];function me(e,n,t){return null==n||"boolean"==typeof n||""===n?"":t||"number"!=typeof n||0===n||pe.hasOwnProperty(e)&&pe[e]?(""+n).trim():n+"px"}function Ae(e,n){for(var t in e=e.style,n)if(n.hasOwnProperty(t)){var r=0===t.indexOf("--"),a=me(t,n[t],r);"float"===t&&(t="cssFloat"),r?e.setProperty(t,a):e[t]=a}}Object.keys(pe).forEach((function(e){he.forEach((function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),pe[n]=pe[e]}))}));var ge=H({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ye(e,n){if(n){if(ge[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(o(60));if("object"!=typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=n.style&&"object"!=typeof n.style)throw Error(o(62))}}function ve(e,n){if(-1===e.indexOf("-"))return"string"==typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var be=null;function _e(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ce=null,Ee=null,we=null;function ke(e){if(e=va(e)){if("function"!=typeof Ce)throw Error(o(280));var n=e.stateNode;n&&(n=_a(n),Ce(e.stateNode,e.type,n))}}function Ie(e){Ee?we?we.push(e):we=[e]:Ee=e}function Se(){if(Ee){var e=Ee,n=we;if(we=Ee=null,ke(e),n)for(e=0;e<n.length;e++)ke(n[e])}}function Be(e,n){return e(n)}function xe(){}var Te=!1;function Ne(e,n,t){if(Te)return e(n,t);Te=!0;try{return Be(e,n,t)}finally{Te=!1,(null!==Ee||null!==we)&&(xe(),Se())}}function Pe(e,n){var t=e.stateNode;if(null===t)return null;var r=_a(t);if(null===r)return null;t=r[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(t&&"function"!=typeof t)throw Error(o(231,n,typeof t));return t}var Le=!1;if(c)try{var Me={};Object.defineProperty(Me,"passive",{get:function(){Le=!0}}),window.addEventListener("test",Me,Me),window.removeEventListener("test",Me,Me)}catch(ce){Le=!1}function Re(e,n,t,r,a,o,l,i,s){var u=Array.prototype.slice.call(arguments,3);try{n.apply(t,u)}catch(e){this.onError(e)}}var Oe=!1,He=null,De=!1,ze=null,Ue={onError:function(e){Oe=!0,He=e}};function Fe(e,n,t,r,a,o,l,i,s){Oe=!1,He=null,Re.apply(Ue,arguments)}function je(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{!!(4098&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function We(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&null!==(e=e.alternate)&&(n=e.memoizedState),null!==n)return n.dehydrated}return null}function Ge(e){if(je(e)!==e)throw Error(o(188))}function Ve(e){return null!==(e=function(e){var n=e.alternate;if(!n){if(null===(n=je(e)))throw Error(o(188));return n!==e?null:e}for(var t=e,r=n;;){var a=t.return;if(null===a)break;var l=a.alternate;if(null===l){if(null!==(r=a.return)){t=r;continue}break}if(a.child===l.child){for(l=a.child;l;){if(l===t)return Ge(a),e;if(l===r)return Ge(a),n;l=l.sibling}throw Error(o(188))}if(t.return!==r.return)t=a,r=l;else{for(var i=!1,s=a.child;s;){if(s===t){i=!0,t=a,r=l;break}if(s===r){i=!0,r=a,t=l;break}s=s.sibling}if(!i){for(s=l.child;s;){if(s===t){i=!0,t=l,r=a;break}if(s===r){i=!0,r=l,t=a;break}s=s.sibling}if(!i)throw Error(o(189))}}if(t.alternate!==r)throw Error(o(190))}if(3!==t.tag)throw Error(o(188));return t.stateNode.current===t?e:n}(e))?Ye(e):null}function Ye(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var n=Ye(e);if(null!==n)return n;e=e.sibling}return null}var $e=a.unstable_scheduleCallback,Xe=a.unstable_cancelCallback,Qe=a.unstable_shouldYield,Ke=a.unstable_requestPaint,Ze=a.unstable_now,qe=a.unstable_getCurrentPriorityLevel,Je=a.unstable_ImmediatePriority,en=a.unstable_UserBlockingPriority,nn=a.unstable_NormalPriority,tn=a.unstable_LowPriority,rn=a.unstable_IdlePriority,an=null,on=null,ln=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(sn(e)/un|0)|0},sn=Math.log,un=Math.LN2,cn=64,fn=4194304;function dn(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function pn(e,n){var t=e.pendingLanes;if(0===t)return 0;var r=0,a=e.suspendedLanes,o=e.pingedLanes,l=268435455&t;if(0!==l){var i=l&~a;0!==i?r=dn(i):0!=(o&=l)&&(r=dn(o))}else 0!=(l=t&~a)?r=dn(l):0!==o&&(r=dn(o));if(0===r)return 0;if(0!==n&&n!==r&&!(n&a)&&((a=r&-r)>=(o=n&-n)||16===a&&4194240&o))return n;if(4&r&&(r|=16&t),0!==(n=e.entangledLanes))for(e=e.entanglements,n&=r;0<n;)a=1<<(t=31-ln(n)),r|=e[t],n&=~a;return r}function hn(e,n){switch(e){case 1:case 2:case 4:return n+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;default:return-1}}function mn(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function An(){var e=cn;return!(4194240&(cn<<=1))&&(cn=64),e}function gn(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function yn(e,n,t){e.pendingLanes|=n,536870912!==n&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[n=31-ln(n)]=t}function vn(e,n){var t=e.entangledLanes|=n;for(e=e.entanglements;t;){var r=31-ln(t),a=1<<r;a&n|e[r]&n&&(e[r]|=n),t&=~a}}var bn=0;function _n(e){return 1<(e&=-e)?4<e?268435455&e?16:536870912:4:1}var Cn,En,wn,kn,In,Sn=!1,Bn=[],xn=null,Tn=null,Nn=null,Pn=new Map,Ln=new Map,Mn=[],Rn="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function On(e,n){switch(e){case"focusin":case"focusout":xn=null;break;case"dragenter":case"dragleave":Tn=null;break;case"mouseover":case"mouseout":Nn=null;break;case"pointerover":case"pointerout":Pn.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":Ln.delete(n.pointerId)}}function Hn(e,n,t,r,a,o){return null===e||e.nativeEvent!==o?(e={blockedOn:n,domEventName:t,eventSystemFlags:r,nativeEvent:o,targetContainers:[a]},null!==n&&null!==(n=va(n))&&En(n),e):(e.eventSystemFlags|=r,n=e.targetContainers,null!==a&&-1===n.indexOf(a)&&n.push(a),e)}function Dn(e){var n=ya(e.target);if(null!==n){var t=je(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=We(t)))return e.blockedOn=n,void In(e.priority,(function(){wn(t)}))}else if(3===n&&t.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function zn(e){if(null!==e.blockedOn)return!1;for(var n=e.targetContainers;0<n.length;){var t=Kn(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t)return null!==(n=va(t))&&En(n),e.blockedOn=t,!1;var r=new(t=e.nativeEvent).constructor(t.type,t);be=r,t.target.dispatchEvent(r),be=null,n.shift()}return!0}function Un(e,n,t){zn(e)&&t.delete(n)}function Fn(){Sn=!1,null!==xn&&zn(xn)&&(xn=null),null!==Tn&&zn(Tn)&&(Tn=null),null!==Nn&&zn(Nn)&&(Nn=null),Pn.forEach(Un),Ln.forEach(Un)}function jn(e,n){e.blockedOn===n&&(e.blockedOn=null,Sn||(Sn=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Fn)))}function Wn(e){function n(n){return jn(n,e)}if(0<Bn.length){jn(Bn[0],e);for(var t=1;t<Bn.length;t++){var r=Bn[t];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==xn&&jn(xn,e),null!==Tn&&jn(Tn,e),null!==Nn&&jn(Nn,e),Pn.forEach(n),Ln.forEach(n),t=0;t<Mn.length;t++)(r=Mn[t]).blockedOn===e&&(r.blockedOn=null);for(;0<Mn.length&&null===(t=Mn[0]).blockedOn;)Dn(t),null===t.blockedOn&&Mn.shift()}var Gn=b.ReactCurrentBatchConfig,Vn=!0;function Yn(e,n,t,r){var a=bn,o=Gn.transition;Gn.transition=null;try{bn=1,Xn(e,n,t,r)}finally{bn=a,Gn.transition=o}}function $n(e,n,t,r){var a=bn,o=Gn.transition;Gn.transition=null;try{bn=4,Xn(e,n,t,r)}finally{bn=a,Gn.transition=o}}function Xn(e,n,t,r){if(Vn){var a=Kn(e,n,t,r);if(null===a)Gr(e,n,r,Qn,t),On(e,r);else if(function(e,n,t,r,a){switch(n){case"focusin":return xn=Hn(xn,e,n,t,r,a),!0;case"dragenter":return Tn=Hn(Tn,e,n,t,r,a),!0;case"mouseover":return Nn=Hn(Nn,e,n,t,r,a),!0;case"pointerover":var o=a.pointerId;return Pn.set(o,Hn(Pn.get(o)||null,e,n,t,r,a)),!0;case"gotpointercapture":return o=a.pointerId,Ln.set(o,Hn(Ln.get(o)||null,e,n,t,r,a)),!0}return!1}(a,e,n,t,r))r.stopPropagation();else if(On(e,r),4&n&&-1<Rn.indexOf(e)){for(;null!==a;){var o=va(a);if(null!==o&&Cn(o),null===(o=Kn(e,n,t,r))&&Gr(e,n,r,Qn,t),o===a)break;a=o}null!==a&&r.stopPropagation()}else Gr(e,n,r,null,t)}}var Qn=null;function Kn(e,n,t,r){if(Qn=null,null!==(e=ya(e=_e(r))))if(null===(n=je(e)))e=null;else if(13===(t=n.tag)){if(null!==(e=We(n)))return e;e=null}else if(3===t){if(n.stateNode.current.memoizedState.isDehydrated)return 3===n.tag?n.stateNode.containerInfo:null;e=null}else n!==e&&(e=null);return Qn=e,null}function Zn(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(qe()){case Je:return 1;case en:return 4;case nn:case tn:return 16;case rn:return 536870912;default:return 16}default:return 16}}var qn=null,Jn=null,et=null;function nt(){if(et)return et;var e,n,t=Jn,r=t.length,a="value"in qn?qn.value:qn.textContent,o=a.length;for(e=0;e<r&&t[e]===a[e];e++);var l=r-e;for(n=1;n<=l&&t[r-n]===a[o-n];n++);return et=a.slice(e,1<n?1-n:void 0)}function tt(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}function rt(){return!0}function at(){return!1}function ot(e){function n(n,t,r,a,o){for(var l in this._reactName=n,this._targetInst=r,this.type=t,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(l)&&(n=e[l],this[l]=n?n(a):a[l]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?rt:at,this.isPropagationStopped=at,this}return H(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rt)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rt)},persist:function(){},isPersistent:rt}),n}var lt,it,st,ut={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ct=ot(ut),ft=H({},ut,{view:0,detail:0}),dt=ot(ft),pt=H({},ft,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:kt,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==st&&(st&&"mousemove"===e.type?(lt=e.screenX-st.screenX,it=e.screenY-st.screenY):it=lt=0,st=e),lt)},movementY:function(e){return"movementY"in e?e.movementY:it}}),ht=ot(pt),mt=ot(H({},pt,{dataTransfer:0})),At=ot(H({},ft,{relatedTarget:0})),gt=ot(H({},ut,{animationName:0,elapsedTime:0,pseudoElement:0})),yt=H({},ut,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),vt=ot(yt),bt=ot(H({},ut,{data:0})),_t={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Ct={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Et={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function wt(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=Et[e])&&!!n[e]}function kt(){return wt}var It=H({},ft,{key:function(e){if(e.key){var n=_t[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=tt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Ct[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:kt,charCode:function(e){return"keypress"===e.type?tt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),St=ot(It),Bt=ot(H({},pt,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),xt=ot(H({},ft,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:kt})),Tt=ot(H({},ut,{propertyName:0,elapsedTime:0,pseudoElement:0})),Nt=H({},pt,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Pt=ot(Nt),Lt=[9,13,27,32],Mt=c&&"CompositionEvent"in window,Rt=null;c&&"documentMode"in document&&(Rt=document.documentMode);var Ot=c&&"TextEvent"in window&&!Rt,Ht=c&&(!Mt||Rt&&8<Rt&&11>=Rt),Dt=String.fromCharCode(32),zt=!1;function Ut(e,n){switch(e){case"keyup":return-1!==Lt.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Ft(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var jt=!1,Wt={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Gt(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!Wt[e.type]:"textarea"===n}function Vt(e,n,t,r){Ie(r),0<(n=Yr(n,"onChange")).length&&(t=new ct("onChange","change",null,t,r),e.push({event:t,listeners:n}))}var Yt=null,$t=null;function Xt(e){Dr(e,0)}function Qt(e){if($(ba(e)))return e}function Kt(e,n){if("change"===e)return n}var Zt=!1;if(c){var qt;if(c){var Jt="oninput"in document;if(!Jt){var er=document.createElement("div");er.setAttribute("oninput","return;"),Jt="function"==typeof er.oninput}qt=Jt}else qt=!1;Zt=qt&&(!document.documentMode||9<document.documentMode)}function nr(){Yt&&(Yt.detachEvent("onpropertychange",tr),$t=Yt=null)}function tr(e){if("value"===e.propertyName&&Qt($t)){var n=[];Vt(n,$t,e,_e(e)),Ne(Xt,n)}}function rr(e,n,t){"focusin"===e?(nr(),$t=t,(Yt=n).attachEvent("onpropertychange",tr)):"focusout"===e&&nr()}function ar(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Qt($t)}function or(e,n){if("click"===e)return Qt(n)}function lr(e,n){if("input"===e||"change"===e)return Qt(n)}var ir="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n};function sr(e,n){if(ir(e,n))return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++){var a=t[r];if(!f.call(n,a)||!ir(e[a],n[a]))return!1}return!0}function ur(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,n){var t,r=ur(e);for(e=0;r;){if(3===r.nodeType){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ur(r)}}function fr(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?fr(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}function dr(){for(var e=window,n=X();n instanceof e.HTMLIFrameElement;){try{var t="string"==typeof n.contentWindow.location.href}catch(e){t=!1}if(!t)break;n=X((e=n.contentWindow).document)}return n}function pr(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}function hr(e){var n=dr(),t=e.focusedElem,r=e.selectionRange;if(n!==t&&t&&t.ownerDocument&&fr(t.ownerDocument.documentElement,t)){if(null!==r&&pr(t))if(n=r.start,void 0===(e=r.end)&&(e=n),"selectionStart"in t)t.selectionStart=n,t.selectionEnd=Math.min(e,t.value.length);else if((e=(n=t.ownerDocument||document)&&n.defaultView||window).getSelection){e=e.getSelection();var a=t.textContent.length,o=Math.min(r.start,a);r=void 0===r.end?o:Math.min(r.end,a),!e.extend&&o>r&&(a=r,r=o,o=a),a=cr(t,o);var l=cr(t,r);a&&l&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==l.node||e.focusOffset!==l.offset)&&((n=n.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),o>r?(e.addRange(n),e.extend(l.node,l.offset)):(n.setEnd(l.node,l.offset),e.addRange(n)))}for(n=[],e=t;e=e.parentNode;)1===e.nodeType&&n.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof t.focus&&t.focus(),t=0;t<n.length;t++)(e=n[t]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var mr=c&&"documentMode"in document&&11>=document.documentMode,Ar=null,gr=null,yr=null,vr=!1;function br(e,n,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;vr||null==Ar||Ar!==X(r)||(r="selectionStart"in(r=Ar)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},yr&&sr(yr,r)||(yr=r,0<(r=Yr(gr,"onSelect")).length&&(n=new ct("onSelect","select",null,n,t),e.push({event:n,listeners:r}),n.target=Ar)))}function _r(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var Cr={animationend:_r("Animation","AnimationEnd"),animationiteration:_r("Animation","AnimationIteration"),animationstart:_r("Animation","AnimationStart"),transitionend:_r("Transition","TransitionEnd")},Er={},wr={};function kr(e){if(Er[e])return Er[e];if(!Cr[e])return e;var n,t=Cr[e];for(n in t)if(t.hasOwnProperty(n)&&n in wr)return Er[e]=t[n];return e}c&&(wr=document.createElement("div").style,"AnimationEvent"in window||(delete Cr.animationend.animation,delete Cr.animationiteration.animation,delete Cr.animationstart.animation),"TransitionEvent"in window||delete Cr.transitionend.transition);var Ir=kr("animationend"),Sr=kr("animationiteration"),Br=kr("animationstart"),xr=kr("transitionend"),Tr=new Map,Nr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Pr(e,n){Tr.set(e,n),s(n,[e])}for(var Lr=0;Lr<Nr.length;Lr++){var Mr=Nr[Lr];Pr(Mr.toLowerCase(),"on"+(Mr[0].toUpperCase()+Mr.slice(1)))}Pr(Ir,"onAnimationEnd"),Pr(Sr,"onAnimationIteration"),Pr(Br,"onAnimationStart"),Pr("dblclick","onDoubleClick"),Pr("focusin","onFocus"),Pr("focusout","onBlur"),Pr(xr,"onTransitionEnd"),u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Rr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Or=new Set("cancel close invalid load scroll toggle".split(" ").concat(Rr));function Hr(e,n,t){var r=e.type||"unknown-event";e.currentTarget=t,function(e,n,t,r,a,l,i,s,u){if(Fe.apply(this,arguments),Oe){if(!Oe)throw Error(o(198));var c=He;Oe=!1,He=null,De||(De=!0,ze=c)}}(r,n,void 0,e),e.currentTarget=null}function Dr(e,n){n=!!(4&n);for(var t=0;t<e.length;t++){var r=e[t],a=r.event;r=r.listeners;e:{var o=void 0;if(n)for(var l=r.length-1;0<=l;l--){var i=r[l],s=i.instance,u=i.currentTarget;if(i=i.listener,s!==o&&a.isPropagationStopped())break e;Hr(a,i,u),o=s}else for(l=0;l<r.length;l++){if(s=(i=r[l]).instance,u=i.currentTarget,i=i.listener,s!==o&&a.isPropagationStopped())break e;Hr(a,i,u),o=s}}}if(De)throw e=ze,De=!1,ze=null,e}function zr(e,n){var t=n[ma];void 0===t&&(t=n[ma]=new Set);var r=e+"__bubble";t.has(r)||(Wr(n,e,2,!1),t.add(r))}function Ur(e,n,t){var r=0;n&&(r|=4),Wr(t,e,r,n)}var Fr="_reactListening"+Math.random().toString(36).slice(2);function jr(e){if(!e[Fr]){e[Fr]=!0,l.forEach((function(n){"selectionchange"!==n&&(Or.has(n)||Ur(n,!1,e),Ur(n,!0,e))}));var n=9===e.nodeType?e:e.ownerDocument;null===n||n[Fr]||(n[Fr]=!0,Ur("selectionchange",!1,n))}}function Wr(e,n,t,r){switch(Zn(n)){case 1:var a=Yn;break;case 4:a=$n;break;default:a=Xn}t=a.bind(null,n,t,e),a=void 0,!Le||"touchstart"!==n&&"touchmove"!==n&&"wheel"!==n||(a=!0),r?void 0!==a?e.addEventListener(n,t,{capture:!0,passive:a}):e.addEventListener(n,t,!0):void 0!==a?e.addEventListener(n,t,{passive:a}):e.addEventListener(n,t,!1)}function Gr(e,n,t,r,a){var o=r;if(!(1&n||2&n||null===r))e:for(;;){if(null===r)return;var l=r.tag;if(3===l||4===l){var i=r.stateNode.containerInfo;if(i===a||8===i.nodeType&&i.parentNode===a)break;if(4===l)for(l=r.return;null!==l;){var s=l.tag;if((3===s||4===s)&&((s=l.stateNode.containerInfo)===a||8===s.nodeType&&s.parentNode===a))return;l=l.return}for(;null!==i;){if(null===(l=ya(i)))return;if(5===(s=l.tag)||6===s){r=o=l;continue e}i=i.parentNode}}r=r.return}Ne((function(){var r=o,a=_e(t),l=[];e:{var i=Tr.get(e);if(void 0!==i){var s=ct,u=e;switch(e){case"keypress":if(0===tt(t))break e;case"keydown":case"keyup":s=St;break;case"focusin":u="focus",s=At;break;case"focusout":u="blur",s=At;break;case"beforeblur":case"afterblur":s=At;break;case"click":if(2===t.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":s=ht;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":s=mt;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":s=xt;break;case Ir:case Sr:case Br:s=gt;break;case xr:s=Tt;break;case"scroll":s=dt;break;case"wheel":s=Pt;break;case"copy":case"cut":case"paste":s=vt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":s=Bt}var c=!!(4&n),f=!c&&"scroll"===e,d=c?null!==i?i+"Capture":null:i;c=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=Pe(h,d))&&c.push(Vr(h,m,p))),f)break;h=h.return}0<c.length&&(i=new s(i,u,null,t,a),l.push({event:i,listeners:c}))}}if(!(7&n)){if(s="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||t===be||!(u=t.relatedTarget||t.fromElement)||!ya(u)&&!u[ha])&&(s||i)&&(i=a.window===a?a:(i=a.ownerDocument)?i.defaultView||i.parentWindow:window,s?(s=r,null!==(u=(u=t.relatedTarget||t.toElement)?ya(u):null)&&(u!==(f=je(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(s=null,u=r),s!==u)){if(c=ht,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=Bt,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==s?i:ba(s),p=null==u?i:ba(u),(i=new c(m,h+"leave",s,t,a)).target=f,i.relatedTarget=p,m=null,ya(a)===r&&((c=new c(d,h+"enter",u,t,a)).target=p,c.relatedTarget=f,m=c),f=m,s&&u)e:{for(d=u,h=0,p=c=s;p;p=$r(p))h++;for(p=0,m=d;m;m=$r(m))p++;for(;0<h-p;)c=$r(c),h--;for(;0<p-h;)d=$r(d),p--;for(;h--;){if(c===d||null!==d&&c===d.alternate)break e;c=$r(c),d=$r(d)}c=null}else c=null;null!==s&&Xr(l,i,s,c,!1),null!==u&&null!==f&&Xr(l,f,u,c,!0)}if("select"===(s=(i=r?ba(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===s&&"file"===i.type)var A=Kt;else if(Gt(i))if(Zt)A=lr;else{A=ar;var g=rr}else(s=i.nodeName)&&"input"===s.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(A=or);switch(A&&(A=A(e,r))?Vt(l,A,t,a):(g&&g(e,i,r),"focusout"===e&&(g=i._wrapperState)&&g.controlled&&"number"===i.type&&ee(i,"number",i.value)),g=r?ba(r):window,e){case"focusin":(Gt(g)||"true"===g.contentEditable)&&(Ar=g,gr=r,yr=null);break;case"focusout":yr=gr=Ar=null;break;case"mousedown":vr=!0;break;case"contextmenu":case"mouseup":case"dragend":vr=!1,br(l,t,a);break;case"selectionchange":if(mr)break;case"keydown":case"keyup":br(l,t,a)}var y;if(Mt)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else jt?Ut(e,t)&&(v="onCompositionEnd"):"keydown"===e&&229===t.keyCode&&(v="onCompositionStart");v&&(Ht&&"ko"!==t.locale&&(jt||"onCompositionStart"!==v?"onCompositionEnd"===v&&jt&&(y=nt()):(Jn="value"in(qn=a)?qn.value:qn.textContent,jt=!0)),0<(g=Yr(r,v)).length&&(v=new bt(v,e,null,t,a),l.push({event:v,listeners:g}),(y||null!==(y=Ft(t)))&&(v.data=y))),(y=Ot?function(e,n){switch(e){case"compositionend":return Ft(n);case"keypress":return 32!==n.which?null:(zt=!0,Dt);case"textInput":return(e=n.data)===Dt&&zt?null:e;default:return null}}(e,t):function(e,n){if(jt)return"compositionend"===e||!Mt&&Ut(e,n)?(e=nt(),et=Jn=qn=null,jt=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return Ht&&"ko"!==n.locale?null:n.data}}(e,t))&&0<(r=Yr(r,"onBeforeInput")).length&&(a=new bt("onBeforeInput","beforeinput",null,t,a),l.push({event:a,listeners:r}),a.data=y)}Dr(l,n)}))}function Vr(e,n,t){return{instance:e,listener:n,currentTarget:t}}function Yr(e,n){for(var t=n+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=Pe(e,t))&&r.unshift(Vr(e,o,a)),null!=(o=Pe(e,n))&&r.push(Vr(e,o,a))),e=e.return}return r}function $r(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Xr(e,n,t,r,a){for(var o=n._reactName,l=[];null!==t&&t!==r;){var i=t,s=i.alternate,u=i.stateNode;if(null!==s&&s===r)break;5===i.tag&&null!==u&&(i=u,a?null!=(s=Pe(t,o))&&l.unshift(Vr(t,s,i)):a||null!=(s=Pe(t,o))&&l.push(Vr(t,s,i))),t=t.return}0!==l.length&&e.push({event:n,listeners:l})}var Qr=/\r\n?/g,Kr=/\u0000|\uFFFD/g;function Zr(e){return("string"==typeof e?e:""+e).replace(Qr,"\n").replace(Kr,"")}function qr(e,n,t){if(n=Zr(n),Zr(e)!==n&&t)throw Error(o(425))}function Jr(){}var ea=null,na=null;function ta(e,n){return"textarea"===e||"noscript"===e||"string"==typeof n.children||"number"==typeof n.children||"object"==typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var ra="function"==typeof setTimeout?setTimeout:void 0,aa="function"==typeof clearTimeout?clearTimeout:void 0,oa="function"==typeof Promise?Promise:void 0,la="function"==typeof queueMicrotask?queueMicrotask:void 0!==oa?function(e){return oa.resolve(null).then(e).catch(ia)}:ra;function ia(e){setTimeout((function(){throw e}))}function sa(e,n){var t=n,r=0;do{var a=t.nextSibling;if(e.removeChild(t),a&&8===a.nodeType)if("/$"===(t=a.data)){if(0===r)return e.removeChild(a),void Wn(n);r--}else"$"!==t&&"$?"!==t&&"$!"!==t||r++;t=a}while(t);Wn(n)}function ua(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break;if(8===n){if("$"===(n=e.data)||"$!"===n||"$?"===n)break;if("/$"===n)return null}}return e}function ca(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}var fa=Math.random().toString(36).slice(2),da="__reactFiber$"+fa,pa="__reactProps$"+fa,ha="__reactContainer$"+fa,ma="__reactEvents$"+fa,Aa="__reactListeners$"+fa,ga="__reactHandles$"+fa;function ya(e){var n=e[da];if(n)return n;for(var t=e.parentNode;t;){if(n=t[ha]||t[da]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=ca(e);null!==e;){if(t=e[da])return t;e=ca(e)}return n}t=(e=t).parentNode}return null}function va(e){return!(e=e[da]||e[ha])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ba(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function _a(e){return e[pa]||null}var Ca=[],Ea=-1;function wa(e){return{current:e}}function ka(e){0>Ea||(e.current=Ca[Ea],Ca[Ea]=null,Ea--)}function Ia(e,n){Ea++,Ca[Ea]=e.current,e.current=n}var Sa={},Ba=wa(Sa),xa=wa(!1),Ta=Sa;function Na(e,n){var t=e.type.contextTypes;if(!t)return Sa;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in t)o[a]=n[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=o),o}function Pa(e){return null!=e.childContextTypes}function La(){ka(xa),ka(Ba)}function Ma(e,n,t){if(Ba.current!==Sa)throw Error(o(168));Ia(Ba,n),Ia(xa,t)}function Ra(e,n,t){var r=e.stateNode;if(n=n.childContextTypes,"function"!=typeof r.getChildContext)return t;for(var a in r=r.getChildContext())if(!(a in n))throw Error(o(108,W(e)||"Unknown",a));return H({},t,r)}function Oa(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Sa,Ta=Ba.current,Ia(Ba,e),Ia(xa,xa.current),!0}function Ha(e,n,t){var r=e.stateNode;if(!r)throw Error(o(169));t?(e=Ra(e,n,Ta),r.__reactInternalMemoizedMergedChildContext=e,ka(xa),ka(Ba),Ia(Ba,e)):ka(xa),Ia(xa,t)}var Da=null,za=!1,Ua=!1;function Fa(e){null===Da?Da=[e]:Da.push(e)}function ja(){if(!Ua&&null!==Da){Ua=!0;var e=0,n=bn;try{var t=Da;for(bn=1;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}Da=null,za=!1}catch(n){throw null!==Da&&(Da=Da.slice(e+1)),$e(Je,ja),n}finally{bn=n,Ua=!1}}return null}var Wa=[],Ga=0,Va=null,Ya=0,$a=[],Xa=0,Qa=null,Ka=1,Za="";function qa(e,n){Wa[Ga++]=Ya,Wa[Ga++]=Va,Va=e,Ya=n}function Ja(e,n,t){$a[Xa++]=Ka,$a[Xa++]=Za,$a[Xa++]=Qa,Qa=e;var r=Ka;e=Za;var a=32-ln(r)-1;r&=~(1<<a),t+=1;var o=32-ln(n)+a;if(30<o){var l=a-a%5;o=(r&(1<<l)-1).toString(32),r>>=l,a-=l,Ka=1<<32-ln(n)+a|t<<a|r,Za=o+e}else Ka=1<<o|t<<a|r,Za=e}function eo(e){null!==e.return&&(qa(e,1),Ja(e,1,0))}function no(e){for(;e===Va;)Va=Wa[--Ga],Wa[Ga]=null,Ya=Wa[--Ga],Wa[Ga]=null;for(;e===Qa;)Qa=$a[--Xa],$a[Xa]=null,Za=$a[--Xa],$a[Xa]=null,Ka=$a[--Xa],$a[Xa]=null}var to=null,ro=null,ao=!1,oo=null;function lo(e,n){var t=Nu(5,null,null,0);t.elementType="DELETED",t.stateNode=n,t.return=e,null===(n=e.deletions)?(e.deletions=[t],e.flags|=16):n.push(t)}function io(e,n){switch(e.tag){case 5:var t=e.type;return null!==(n=1!==n.nodeType||t.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,to=e,ro=ua(n.firstChild),!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,to=e,ro=null,!0);case 13:return null!==(n=8!==n.nodeType?null:n)&&(t=null!==Qa?{id:Ka,overflow:Za}:null,e.memoizedState={dehydrated:n,treeContext:t,retryLane:1073741824},(t=Nu(18,null,null,0)).stateNode=n,t.return=e,e.child=t,to=e,ro=null,!0);default:return!1}}function so(e){return!(!(1&e.mode)||128&e.flags)}function uo(e){if(ao){var n=ro;if(n){var t=n;if(!io(e,n)){if(so(e))throw Error(o(418));n=ua(t.nextSibling);var r=to;n&&io(e,n)?lo(r,t):(e.flags=-4097&e.flags|2,ao=!1,to=e)}}else{if(so(e))throw Error(o(418));e.flags=-4097&e.flags|2,ao=!1,to=e}}}function co(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;to=e}function fo(e){if(e!==to)return!1;if(!ao)return co(e),ao=!0,!1;var n;if((n=3!==e.tag)&&!(n=5!==e.tag)&&(n="head"!==(n=e.type)&&"body"!==n&&!ta(e.type,e.memoizedProps)),n&&(n=ro)){if(so(e))throw po(),Error(o(418));for(;n;)lo(e,n),n=ua(n.nextSibling)}if(co(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===n){ro=ua(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++}e=e.nextSibling}ro=null}}else ro=to?ua(e.stateNode.nextSibling):null;return!0}function po(){for(var e=ro;e;)e=ua(e.nextSibling)}function ho(){ro=to=null,ao=!1}function mo(e){null===oo?oo=[e]:oo.push(e)}var Ao=b.ReactCurrentBatchConfig;function go(e,n,t){if(null!==(e=t.ref)&&"function"!=typeof e&&"object"!=typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(o(309));var r=t.stateNode}if(!r)throw Error(o(147,e));var a=r,l=""+e;return null!==n&&null!==n.ref&&"function"==typeof n.ref&&n.ref._stringRef===l?n.ref:(n=function(e){var n=a.refs;null===e?delete n[l]:n[l]=e},n._stringRef=l,n)}if("string"!=typeof e)throw Error(o(284));if(!t._owner)throw Error(o(290,e))}return e}function yo(e,n){throw e=Object.prototype.toString.call(n),Error(o(31,"[object Object]"===e?"object with keys {"+Object.keys(n).join(", ")+"}":e))}function vo(e){return(0,e._init)(e._payload)}function bo(e){function n(n,t){if(e){var r=n.deletions;null===r?(n.deletions=[t],n.flags|=16):r.push(t)}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function a(e,n){return(e=Lu(e,n)).index=0,e.sibling=null,e}function l(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.flags|=2,t):r:(n.flags|=2,t):(n.flags|=1048576,t)}function i(n){return e&&null===n.alternate&&(n.flags|=2),n}function s(e,n,t,r){return null===n||6!==n.tag?((n=Hu(t,e.mode,r)).return=e,n):((n=a(n,t)).return=e,n)}function u(e,n,t,r){var o=t.type;return o===E?f(e,n,t.props.children,r,t.key):null!==n&&(n.elementType===o||"object"==typeof o&&null!==o&&o.$$typeof===P&&vo(o)===n.type)?((r=a(n,t.props)).ref=go(e,n,t),r.return=e,r):((r=Mu(t.type,t.key,t.props,null,e.mode,r)).ref=go(e,n,t),r.return=e,r)}function c(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=Du(t,e.mode,r)).return=e,n):((n=a(n,t.children||[])).return=e,n)}function f(e,n,t,r,o){return null===n||7!==n.tag?((n=Ru(t,e.mode,r,o)).return=e,n):((n=a(n,t)).return=e,n)}function d(e,n,t){if("string"==typeof n&&""!==n||"number"==typeof n)return(n=Hu(""+n,e.mode,t)).return=e,n;if("object"==typeof n&&null!==n){switch(n.$$typeof){case _:return(t=Mu(n.type,n.key,n.props,null,e.mode,t)).ref=go(e,null,n),t.return=e,t;case C:return(n=Du(n,e.mode,t)).return=e,n;case P:return d(e,(0,n._init)(n._payload),t)}if(ne(n)||R(n))return(n=Ru(n,e.mode,t,null)).return=e,n;yo(e,n)}return null}function p(e,n,t,r){var a=null!==n?n.key:null;if("string"==typeof t&&""!==t||"number"==typeof t)return null!==a?null:s(e,n,""+t,r);if("object"==typeof t&&null!==t){switch(t.$$typeof){case _:return t.key===a?u(e,n,t,r):null;case C:return t.key===a?c(e,n,t,r):null;case P:return p(e,n,(a=t._init)(t._payload),r)}if(ne(t)||R(t))return null!==a?null:f(e,n,t,r,null);yo(e,t)}return null}function h(e,n,t,r,a){if("string"==typeof r&&""!==r||"number"==typeof r)return s(n,e=e.get(t)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case _:return u(n,e=e.get(null===r.key?t:r.key)||null,r,a);case C:return c(n,e=e.get(null===r.key?t:r.key)||null,r,a);case P:return h(e,n,t,(0,r._init)(r._payload),a)}if(ne(r)||R(r))return f(n,e=e.get(t)||null,r,a,null);yo(n,r)}return null}function m(a,o,i,s){for(var u=null,c=null,f=o,m=o=0,A=null;null!==f&&m<i.length;m++){f.index>m?(A=f,f=null):A=f.sibling;var g=p(a,f,i[m],s);if(null===g){null===f&&(f=A);break}e&&f&&null===g.alternate&&n(a,f),o=l(g,o,m),null===c?u=g:c.sibling=g,c=g,f=A}if(m===i.length)return t(a,f),ao&&qa(a,m),u;if(null===f){for(;m<i.length;m++)null!==(f=d(a,i[m],s))&&(o=l(f,o,m),null===c?u=f:c.sibling=f,c=f);return ao&&qa(a,m),u}for(f=r(a,f);m<i.length;m++)null!==(A=h(f,a,m,i[m],s))&&(e&&null!==A.alternate&&f.delete(null===A.key?m:A.key),o=l(A,o,m),null===c?u=A:c.sibling=A,c=A);return e&&f.forEach((function(e){return n(a,e)})),ao&&qa(a,m),u}function A(a,i,s,u){var c=R(s);if("function"!=typeof c)throw Error(o(150));if(null==(s=c.call(s)))throw Error(o(151));for(var f=c=null,m=i,A=i=0,g=null,y=s.next();null!==m&&!y.done;A++,y=s.next()){m.index>A?(g=m,m=null):g=m.sibling;var v=p(a,m,y.value,u);if(null===v){null===m&&(m=g);break}e&&m&&null===v.alternate&&n(a,m),i=l(v,i,A),null===f?c=v:f.sibling=v,f=v,m=g}if(y.done)return t(a,m),ao&&qa(a,A),c;if(null===m){for(;!y.done;A++,y=s.next())null!==(y=d(a,y.value,u))&&(i=l(y,i,A),null===f?c=y:f.sibling=y,f=y);return ao&&qa(a,A),c}for(m=r(a,m);!y.done;A++,y=s.next())null!==(y=h(m,a,A,y.value,u))&&(e&&null!==y.alternate&&m.delete(null===y.key?A:y.key),i=l(y,i,A),null===f?c=y:f.sibling=y,f=y);return e&&m.forEach((function(e){return n(a,e)})),ao&&qa(a,A),c}return function e(r,o,l,s){if("object"==typeof l&&null!==l&&l.type===E&&null===l.key&&(l=l.props.children),"object"==typeof l&&null!==l){switch(l.$$typeof){case _:e:{for(var u=l.key,c=o;null!==c;){if(c.key===u){if((u=l.type)===E){if(7===c.tag){t(r,c.sibling),(o=a(c,l.props.children)).return=r,r=o;break e}}else if(c.elementType===u||"object"==typeof u&&null!==u&&u.$$typeof===P&&vo(u)===c.type){t(r,c.sibling),(o=a(c,l.props)).ref=go(r,c,l),o.return=r,r=o;break e}t(r,c);break}n(r,c),c=c.sibling}l.type===E?((o=Ru(l.props.children,r.mode,s,l.key)).return=r,r=o):((s=Mu(l.type,l.key,l.props,null,r.mode,s)).ref=go(r,o,l),s.return=r,r=s)}return i(r);case C:e:{for(c=l.key;null!==o;){if(o.key===c){if(4===o.tag&&o.stateNode.containerInfo===l.containerInfo&&o.stateNode.implementation===l.implementation){t(r,o.sibling),(o=a(o,l.children||[])).return=r,r=o;break e}t(r,o);break}n(r,o),o=o.sibling}(o=Du(l,r.mode,s)).return=r,r=o}return i(r);case P:return e(r,o,(c=l._init)(l._payload),s)}if(ne(l))return m(r,o,l,s);if(R(l))return A(r,o,l,s);yo(r,l)}return"string"==typeof l&&""!==l||"number"==typeof l?(l=""+l,null!==o&&6===o.tag?(t(r,o.sibling),(o=a(o,l)).return=r,r=o):(t(r,o),(o=Hu(l,r.mode,s)).return=r,r=o),i(r)):t(r,o)}}var _o=bo(!0),Co=bo(!1),Eo=wa(null),wo=null,ko=null,Io=null;function So(){Io=ko=wo=null}function Bo(e){var n=Eo.current;ka(Eo),e._currentValue=n}function xo(e,n,t){for(;null!==e;){var r=e.alternate;if((e.childLanes&n)!==n?(e.childLanes|=n,null!==r&&(r.childLanes|=n)):null!==r&&(r.childLanes&n)!==n&&(r.childLanes|=n),e===t)break;e=e.return}}function To(e,n){wo=e,Io=ko=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(!!(e.lanes&n)&&(vi=!0),e.firstContext=null)}function No(e){var n=e._currentValue;if(Io!==e)if(e={context:e,memoizedValue:n,next:null},null===ko){if(null===wo)throw Error(o(308));ko=e,wo.dependencies={lanes:0,firstContext:e}}else ko=ko.next=e;return n}var Po=null;function Lo(e){null===Po?Po=[e]:Po.push(e)}function Mo(e,n,t,r){var a=n.interleaved;return null===a?(t.next=t,Lo(n)):(t.next=a.next,a.next=t),n.interleaved=t,Ro(e,r)}function Ro(e,n){e.lanes|=n;var t=e.alternate;for(null!==t&&(t.lanes|=n),t=e,e=e.return;null!==e;)e.childLanes|=n,null!==(t=e.alternate)&&(t.childLanes|=n),t=e,e=e.return;return 3===t.tag?t.stateNode:null}var Oo=!1;function Ho(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Do(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function zo(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function Uo(e,n,t){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,2&Bs){var a=r.pending;return null===a?n.next=n:(n.next=a.next,a.next=n),r.pending=n,Ro(e,t)}return null===(a=r.interleaved)?(n.next=n,Lo(r)):(n.next=a.next,a.next=n),r.interleaved=n,Ro(e,t)}function Fo(e,n,t){if(null!==(n=n.updateQueue)&&(n=n.shared,4194240&t)){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,vn(e,t)}}function jo(e,n){var t=e.updateQueue,r=e.alternate;if(null!==r&&t===(r=r.updateQueue)){var a=null,o=null;if(null!==(t=t.firstBaseUpdate)){do{var l={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===o?a=o=l:o=o.next=l,t=t.next}while(null!==t);null===o?a=o=n:o=o.next=n}else a=o=n;return t={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}function Wo(e,n,t,r){var a=e.updateQueue;Oo=!1;var o=a.firstBaseUpdate,l=a.lastBaseUpdate,i=a.shared.pending;if(null!==i){a.shared.pending=null;var s=i,u=s.next;s.next=null,null===l?o=u:l.next=u,l=s;var c=e.alternate;null!==c&&(i=(c=c.updateQueue).lastBaseUpdate)!==l&&(null===i?c.firstBaseUpdate=u:i.next=u,c.lastBaseUpdate=s)}if(null!==o){var f=a.baseState;for(l=0,c=u=s=null,i=o;;){var d=i.lane,p=i.eventTime;if((r&d)===d){null!==c&&(c=c.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,m=i;switch(d=n,p=t,m.tag){case 1:if("function"==typeof(h=m.payload)){f=h.call(p,f,d);break e}f=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null==(d="function"==typeof(h=m.payload)?h.call(p,f,d):h))break e;f=H({},f,d);break e;case 2:Oo=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(d=a.effects)?a.effects=[i]:d.push(i))}else p={eventTime:p,lane:d,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===c?(u=c=p,s=f):c=c.next=p,l|=d;if(null===(i=i.next)){if(null===(i=a.shared.pending))break;i=(d=i).next,d.next=null,a.lastBaseUpdate=d,a.shared.pending=null}}if(null===c&&(s=f),a.baseState=s,a.firstBaseUpdate=u,a.lastBaseUpdate=c,null!==(n=a.shared.interleaved)){a=n;do{l|=a.lane,a=a.next}while(a!==n)}else null===o&&(a.shared.lanes=0);Os|=l,e.lanes=l,e.memoizedState=f}}function Go(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],a=r.callback;if(null!==a){if(r.callback=null,r=t,"function"!=typeof a)throw Error(o(191,a));a.call(r)}}}var Vo={},Yo=wa(Vo),$o=wa(Vo),Xo=wa(Vo);function Qo(e){if(e===Vo)throw Error(o(174));return e}function Ko(e,n){switch(Ia(Xo,n),Ia($o,e),Ia(Yo,Vo),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:se(null,"");break;default:n=se(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}ka(Yo),Ia(Yo,n)}function Zo(){ka(Yo),ka($o),ka(Xo)}function qo(e){Qo(Xo.current);var n=Qo(Yo.current),t=se(n,e.type);n!==t&&(Ia($o,e),Ia(Yo,t))}function Jo(e){$o.current===e&&(ka(Yo),ka($o))}var el=wa(0);function nl(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(128&n.flags)return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var tl=[];function rl(){for(var e=0;e<tl.length;e++)tl[e]._workInProgressVersionPrimary=null;tl.length=0}var al=b.ReactCurrentDispatcher,ol=b.ReactCurrentBatchConfig,ll=0,il=null,sl=null,ul=null,cl=!1,fl=!1,dl=0,pl=0;function hl(){throw Error(o(321))}function ml(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!ir(e[t],n[t]))return!1;return!0}function Al(e,n,t,r,a,l){if(ll=l,il=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,al.current=null===e||null===e.memoizedState?Jl:ei,e=t(r,a),fl){l=0;do{if(fl=!1,dl=0,25<=l)throw Error(o(301));l+=1,ul=sl=null,n.updateQueue=null,al.current=ni,e=t(r,a)}while(fl)}if(al.current=ql,n=null!==sl&&null!==sl.next,ll=0,ul=sl=il=null,cl=!1,n)throw Error(o(300));return e}function gl(){var e=0!==dl;return dl=0,e}function yl(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===ul?il.memoizedState=ul=e:ul=ul.next=e,ul}function vl(){if(null===sl){var e=il.alternate;e=null!==e?e.memoizedState:null}else e=sl.next;var n=null===ul?il.memoizedState:ul.next;if(null!==n)ul=n,sl=e;else{if(null===e)throw Error(o(310));e={memoizedState:(sl=e).memoizedState,baseState:sl.baseState,baseQueue:sl.baseQueue,queue:sl.queue,next:null},null===ul?il.memoizedState=ul=e:ul=ul.next=e}return ul}function bl(e,n){return"function"==typeof n?n(e):n}function _l(e){var n=vl(),t=n.queue;if(null===t)throw Error(o(311));t.lastRenderedReducer=e;var r=sl,a=r.baseQueue,l=t.pending;if(null!==l){if(null!==a){var i=a.next;a.next=l.next,l.next=i}r.baseQueue=a=l,t.pending=null}if(null!==a){l=a.next,r=r.baseState;var s=i=null,u=null,c=l;do{var f=c.lane;if((ll&f)===f)null!==u&&(u=u.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var d={lane:f,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===u?(s=u=d,i=r):u=u.next=d,il.lanes|=f,Os|=f}c=c.next}while(null!==c&&c!==l);null===u?i=r:u.next=s,ir(r,n.memoizedState)||(vi=!0),n.memoizedState=r,n.baseState=i,n.baseQueue=u,t.lastRenderedState=r}if(null!==(e=t.interleaved)){a=e;do{l=a.lane,il.lanes|=l,Os|=l,a=a.next}while(a!==e)}else null===a&&(t.lanes=0);return[n.memoizedState,t.dispatch]}function Cl(e){var n=vl(),t=n.queue;if(null===t)throw Error(o(311));t.lastRenderedReducer=e;var r=t.dispatch,a=t.pending,l=n.memoizedState;if(null!==a){t.pending=null;var i=a=a.next;do{l=e(l,i.action),i=i.next}while(i!==a);ir(l,n.memoizedState)||(vi=!0),n.memoizedState=l,null===n.baseQueue&&(n.baseState=l),t.lastRenderedState=l}return[l,r]}function El(){}function wl(e,n){var t=il,r=vl(),a=n(),l=!ir(r.memoizedState,a);if(l&&(r.memoizedState=a,vi=!0),r=r.queue,Ol(Sl.bind(null,t,r,e),[e]),r.getSnapshot!==n||l||null!==ul&&1&ul.memoizedState.tag){if(t.flags|=2048,Nl(9,Il.bind(null,t,r,a,n),void 0,null),null===xs)throw Error(o(349));30&ll||kl(t,n,a)}return a}function kl(e,n,t){e.flags|=16384,e={getSnapshot:n,value:t},null===(n=il.updateQueue)?(n={lastEffect:null,stores:null},il.updateQueue=n,n.stores=[e]):null===(t=n.stores)?n.stores=[e]:t.push(e)}function Il(e,n,t,r){n.value=t,n.getSnapshot=r,Bl(n)&&xl(e)}function Sl(e,n,t){return t((function(){Bl(n)&&xl(e)}))}function Bl(e){var n=e.getSnapshot;e=e.value;try{var t=n();return!ir(e,t)}catch(e){return!0}}function xl(e){var n=Ro(e,1);null!==n&&tu(n,e,1,-1)}function Tl(e){var n=yl();return"function"==typeof e&&(e=e()),n.memoizedState=n.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:bl,lastRenderedState:e},n.queue=e,e=e.dispatch=Xl.bind(null,il,e),[n.memoizedState,e]}function Nl(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=il.updateQueue)?(n={lastEffect:null,stores:null},il.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function Pl(){return vl().memoizedState}function Ll(e,n,t,r){var a=yl();il.flags|=e,a.memoizedState=Nl(1|n,t,void 0,void 0===r?null:r)}function Ml(e,n,t,r){var a=vl();r=void 0===r?null:r;var o=void 0;if(null!==sl){var l=sl.memoizedState;if(o=l.destroy,null!==r&&ml(r,l.deps))return void(a.memoizedState=Nl(n,t,o,r))}il.flags|=e,a.memoizedState=Nl(1|n,t,o,r)}function Rl(e,n){return Ll(8390656,8,e,n)}function Ol(e,n){return Ml(2048,8,e,n)}function Hl(e,n){return Ml(4,2,e,n)}function Dl(e,n){return Ml(4,4,e,n)}function zl(e,n){return"function"==typeof n?(e=e(),n(e),function(){n(null)}):null!=n?(e=e(),n.current=e,function(){n.current=null}):void 0}function Ul(e,n,t){return t=null!=t?t.concat([e]):null,Ml(4,4,zl.bind(null,n,e),t)}function Fl(){}function jl(e,n){var t=vl();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&ml(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function Wl(e,n){var t=vl();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&ml(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function Gl(e,n,t){return 21&ll?(ir(t,n)||(t=An(),il.lanes|=t,Os|=t,e.baseState=!0),n):(e.baseState&&(e.baseState=!1,vi=!0),e.memoizedState=t)}function Vl(e,n){var t=bn;bn=0!==t&&4>t?t:4,e(!0);var r=ol.transition;ol.transition={};try{e(!1),n()}finally{bn=t,ol.transition=r}}function Yl(){return vl().memoizedState}function $l(e,n,t){var r=nu(e);t={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null},Ql(e)?Kl(n,t):null!==(t=Mo(e,n,t,r))&&(tu(t,e,r,eu()),Zl(t,n,r))}function Xl(e,n,t){var r=nu(e),a={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null};if(Ql(e))Kl(n,a);else{var o=e.alternate;if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=n.lastRenderedReducer))try{var l=n.lastRenderedState,i=o(l,t);if(a.hasEagerState=!0,a.eagerState=i,ir(i,l)){var s=n.interleaved;return null===s?(a.next=a,Lo(n)):(a.next=s.next,s.next=a),void(n.interleaved=a)}}catch(e){}null!==(t=Mo(e,n,a,r))&&(tu(t,e,r,a=eu()),Zl(t,n,r))}}function Ql(e){var n=e.alternate;return e===il||null!==n&&n===il}function Kl(e,n){fl=cl=!0;var t=e.pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}function Zl(e,n,t){if(4194240&t){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,vn(e,t)}}var ql={readContext:No,useCallback:hl,useContext:hl,useEffect:hl,useImperativeHandle:hl,useInsertionEffect:hl,useLayoutEffect:hl,useMemo:hl,useReducer:hl,useRef:hl,useState:hl,useDebugValue:hl,useDeferredValue:hl,useTransition:hl,useMutableSource:hl,useSyncExternalStore:hl,useId:hl,unstable_isNewReconciler:!1},Jl={readContext:No,useCallback:function(e,n){return yl().memoizedState=[e,void 0===n?null:n],e},useContext:No,useEffect:Rl,useImperativeHandle:function(e,n,t){return t=null!=t?t.concat([e]):null,Ll(4194308,4,zl.bind(null,n,e),t)},useLayoutEffect:function(e,n){return Ll(4194308,4,e,n)},useInsertionEffect:function(e,n){return Ll(4,2,e,n)},useMemo:function(e,n){var t=yl();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=yl();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:n},r.queue=e,e=e.dispatch=$l.bind(null,il,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},yl().memoizedState=e},useState:Tl,useDebugValue:Fl,useDeferredValue:function(e){return yl().memoizedState=e},useTransition:function(){var e=Tl(!1),n=e[0];return e=Vl.bind(null,e[1]),yl().memoizedState=e,[n,e]},useMutableSource:function(){},useSyncExternalStore:function(e,n,t){var r=il,a=yl();if(ao){if(void 0===t)throw Error(o(407));t=t()}else{if(t=n(),null===xs)throw Error(o(349));30&ll||kl(r,n,t)}a.memoizedState=t;var l={value:t,getSnapshot:n};return a.queue=l,Rl(Sl.bind(null,r,l,e),[e]),r.flags|=2048,Nl(9,Il.bind(null,r,l,t,n),void 0,null),t},useId:function(){var e=yl(),n=xs.identifierPrefix;if(ao){var t=Za;n=":"+n+"R"+(t=(Ka&~(1<<32-ln(Ka)-1)).toString(32)+t),0<(t=dl++)&&(n+="H"+t.toString(32)),n+=":"}else n=":"+n+"r"+(t=pl++).toString(32)+":";return e.memoizedState=n},unstable_isNewReconciler:!1},ei={readContext:No,useCallback:jl,useContext:No,useEffect:Ol,useImperativeHandle:Ul,useInsertionEffect:Hl,useLayoutEffect:Dl,useMemo:Wl,useReducer:_l,useRef:Pl,useState:function(){return _l(bl)},useDebugValue:Fl,useDeferredValue:function(e){return Gl(vl(),sl.memoizedState,e)},useTransition:function(){return[_l(bl)[0],vl().memoizedState]},useMutableSource:El,useSyncExternalStore:wl,useId:Yl,unstable_isNewReconciler:!1},ni={readContext:No,useCallback:jl,useContext:No,useEffect:Ol,useImperativeHandle:Ul,useInsertionEffect:Hl,useLayoutEffect:Dl,useMemo:Wl,useReducer:Cl,useRef:Pl,useState:function(){return Cl(bl)},useDebugValue:Fl,useDeferredValue:function(e){var n=vl();return null===sl?n.memoizedState=e:Gl(n,sl.memoizedState,e)},useTransition:function(){return[Cl(bl)[0],vl().memoizedState]},useMutableSource:El,useSyncExternalStore:wl,useId:Yl,unstable_isNewReconciler:!1};function ti(e,n){if(e&&e.defaultProps){for(var t in n=H({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}return n}function ri(e,n,t,r){t=null==(t=t(r,n=e.memoizedState))?n:H({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var ai={isMounted:function(e){return!!(e=e._reactInternals)&&je(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternals;var r=eu(),a=nu(e),o=zo(r,a);o.payload=n,null!=t&&(o.callback=t),null!==(n=Uo(e,o,a))&&(tu(n,e,a,r),Fo(n,e,a))},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var r=eu(),a=nu(e),o=zo(r,a);o.tag=1,o.payload=n,null!=t&&(o.callback=t),null!==(n=Uo(e,o,a))&&(tu(n,e,a,r),Fo(n,e,a))},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=eu(),r=nu(e),a=zo(t,r);a.tag=2,null!=n&&(a.callback=n),null!==(n=Uo(e,a,r))&&(tu(n,e,r,t),Fo(n,e,r))}};function oi(e,n,t,r,a,o,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,l):!(n.prototype&&n.prototype.isPureReactComponent&&sr(t,r)&&sr(a,o))}function li(e,n,t){var r=!1,a=Sa,o=n.contextType;return"object"==typeof o&&null!==o?o=No(o):(a=Pa(n)?Ta:Ba.current,o=(r=null!=(r=n.contextTypes))?Na(e,a):Sa),n=new n(t,o),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=ai,e.stateNode=n,n._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),n}function ii(e,n,t,r){e=n.state,"function"==typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"==typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&ai.enqueueReplaceState(n,n.state,null)}function si(e,n,t,r){var a=e.stateNode;a.props=t,a.state=e.memoizedState,a.refs={},Ho(e);var o=n.contextType;"object"==typeof o&&null!==o?a.context=No(o):(o=Pa(n)?Ta:Ba.current,a.context=Na(e,o)),a.state=e.memoizedState,"function"==typeof(o=n.getDerivedStateFromProps)&&(ri(e,n,o,t),a.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(n=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),n!==a.state&&ai.enqueueReplaceState(a,a.state,null),Wo(e,t,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4194308)}function ui(e,n){try{var t="",r=n;do{t+=F(r),r=r.return}while(r);var a=t}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:n,stack:a,digest:null}}function ci(e,n,t){return{value:e,source:null,stack:null!=t?t:null,digest:null!=n?n:null}}function fi(e,n){try{console.error(n.value)}catch(e){setTimeout((function(){throw e}))}}var di="function"==typeof WeakMap?WeakMap:Map;function pi(e,n,t){(t=zo(-1,t)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){Gs||(Gs=!0,Vs=r),fi(0,n)},t}function hi(e,n,t){(t=zo(-1,t)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=n.value;t.payload=function(){return r(a)},t.callback=function(){fi(0,n)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(t.callback=function(){fi(0,n),"function"!=typeof r&&(null===Ys?Ys=new Set([this]):Ys.add(this));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),t}function mi(e,n,t){var r=e.pingCache;if(null===r){r=e.pingCache=new di;var a=new Set;r.set(n,a)}else void 0===(a=r.get(n))&&(a=new Set,r.set(n,a));a.has(t)||(a.add(t),e=ku.bind(null,e,n,t),n.then(e,e))}function Ai(e){do{var n;if((n=13===e.tag)&&(n=null===(n=e.memoizedState)||null!==n.dehydrated),n)return e;e=e.return}while(null!==e);return null}function gi(e,n,t,r,a){return 1&e.mode?(e.flags|=65536,e.lanes=a,e):(e===n?e.flags|=65536:(e.flags|=128,t.flags|=131072,t.flags&=-52805,1===t.tag&&(null===t.alternate?t.tag=17:((n=zo(-1,1)).tag=2,Uo(t,n,1))),t.lanes|=1),e)}var yi=b.ReactCurrentOwner,vi=!1;function bi(e,n,t,r){n.child=null===e?Co(n,null,t,r):_o(n,e.child,t,r)}function _i(e,n,t,r,a){t=t.render;var o=n.ref;return To(n,a),r=Al(e,n,t,r,o,a),t=gl(),null===e||vi?(ao&&t&&eo(n),n.flags|=1,bi(e,n,r,a),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~a,Gi(e,n,a))}function Ci(e,n,t,r,a){if(null===e){var o=t.type;return"function"!=typeof o||Pu(o)||void 0!==o.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=Mu(t.type,null,r,n,n.mode,a)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=o,Ei(e,n,o,r,a))}if(o=e.child,!(e.lanes&a)){var l=o.memoizedProps;if((t=null!==(t=t.compare)?t:sr)(l,r)&&e.ref===n.ref)return Gi(e,n,a)}return n.flags|=1,(e=Lu(o,r)).ref=n.ref,e.return=n,n.child=e}function Ei(e,n,t,r,a){if(null!==e){var o=e.memoizedProps;if(sr(o,r)&&e.ref===n.ref){if(vi=!1,n.pendingProps=r=o,!(e.lanes&a))return n.lanes=e.lanes,Gi(e,n,a);131072&e.flags&&(vi=!0)}}return Ii(e,n,t,r,a)}function wi(e,n,t){var r=n.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(1&n.mode){if(!(1073741824&t))return e=null!==o?o.baseLanes|t:t,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e,cachePool:null,transitions:null},n.updateQueue=null,Ia(Ls,Ps),Ps|=e,null;n.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==o?o.baseLanes:t,Ia(Ls,Ps),Ps|=r}else n.memoizedState={baseLanes:0,cachePool:null,transitions:null},Ia(Ls,Ps),Ps|=t;else null!==o?(r=o.baseLanes|t,n.memoizedState=null):r=t,Ia(Ls,Ps),Ps|=r;return bi(e,n,a,t),n.child}function ki(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.flags|=512,n.flags|=2097152)}function Ii(e,n,t,r,a){var o=Pa(t)?Ta:Ba.current;return o=Na(n,o),To(n,a),t=Al(e,n,t,r,o,a),r=gl(),null===e||vi?(ao&&r&&eo(n),n.flags|=1,bi(e,n,t,a),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~a,Gi(e,n,a))}function Si(e,n,t,r,a){if(Pa(t)){var o=!0;Oa(n)}else o=!1;if(To(n,a),null===n.stateNode)Wi(e,n),li(n,t,r),si(n,t,r,a),r=!0;else if(null===e){var l=n.stateNode,i=n.memoizedProps;l.props=i;var s=l.context,u=t.contextType;u="object"==typeof u&&null!==u?No(u):Na(n,u=Pa(t)?Ta:Ba.current);var c=t.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==r||s!==u)&&ii(n,l,r,u),Oo=!1;var d=n.memoizedState;l.state=d,Wo(n,r,l,a),s=n.memoizedState,i!==r||d!==s||xa.current||Oo?("function"==typeof c&&(ri(n,t,c,r),s=n.memoizedState),(i=Oo||oi(n,t,i,r,d,s,u))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(n.flags|=4194308)):("function"==typeof l.componentDidMount&&(n.flags|=4194308),n.memoizedProps=r,n.memoizedState=s),l.props=r,l.state=s,l.context=u,r=i):("function"==typeof l.componentDidMount&&(n.flags|=4194308),r=!1)}else{l=n.stateNode,Do(e,n),i=n.memoizedProps,u=n.type===n.elementType?i:ti(n.type,i),l.props=u,f=n.pendingProps,d=l.context,s="object"==typeof(s=t.contextType)&&null!==s?No(s):Na(n,s=Pa(t)?Ta:Ba.current);var p=t.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==f||d!==s)&&ii(n,l,r,s),Oo=!1,d=n.memoizedState,l.state=d,Wo(n,r,l,a);var h=n.memoizedState;i!==f||d!==h||xa.current||Oo?("function"==typeof p&&(ri(n,t,p,r),h=n.memoizedState),(u=Oo||oi(n,t,u,r,d,h,s)||!1)?(c||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,h,s),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,h,s)),"function"==typeof l.componentDidUpdate&&(n.flags|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(n.flags|=1024)):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(n.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(n.flags|=1024),n.memoizedProps=r,n.memoizedState=h),l.props=r,l.state=h,l.context=s,r=u):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(n.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(n.flags|=1024),r=!1)}return Bi(e,n,t,r,o,a)}function Bi(e,n,t,r,a,o){ki(e,n);var l=!!(128&n.flags);if(!r&&!l)return a&&Ha(n,t,!1),Gi(e,n,o);r=n.stateNode,yi.current=n;var i=l&&"function"!=typeof t.getDerivedStateFromError?null:r.render();return n.flags|=1,null!==e&&l?(n.child=_o(n,e.child,null,o),n.child=_o(n,null,i,o)):bi(e,n,i,o),n.memoizedState=r.state,a&&Ha(n,t,!0),n.child}function xi(e){var n=e.stateNode;n.pendingContext?Ma(0,n.pendingContext,n.pendingContext!==n.context):n.context&&Ma(0,n.context,!1),Ko(e,n.containerInfo)}function Ti(e,n,t,r,a){return ho(),mo(a),n.flags|=256,bi(e,n,t,r),n.child}var Ni,Pi,Li,Mi,Ri={dehydrated:null,treeContext:null,retryLane:0};function Oi(e){return{baseLanes:e,cachePool:null,transitions:null}}function Hi(e,n,t){var r,a=n.pendingProps,l=el.current,i=!1,s=!!(128&n.flags);if((r=s)||(r=(null===e||null!==e.memoizedState)&&!!(2&l)),r?(i=!0,n.flags&=-129):null!==e&&null===e.memoizedState||(l|=1),Ia(el,1&l),null===e)return uo(n),null!==(e=n.memoizedState)&&null!==(e=e.dehydrated)?(1&n.mode?"$!"===e.data?n.lanes=8:n.lanes=1073741824:n.lanes=1,null):(s=a.children,e=a.fallback,i?(a=n.mode,i=n.child,s={mode:"hidden",children:s},1&a||null===i?i=Ou(s,a,0,null):(i.childLanes=0,i.pendingProps=s),e=Ru(e,a,t,null),i.return=n,e.return=n,i.sibling=e,n.child=i,n.child.memoizedState=Oi(t),n.memoizedState=Ri,e):Di(n,s));if(null!==(l=e.memoizedState)&&null!==(r=l.dehydrated))return function(e,n,t,r,a,l,i){if(t)return 256&n.flags?(n.flags&=-257,zi(e,n,i,r=ci(Error(o(422))))):null!==n.memoizedState?(n.child=e.child,n.flags|=128,null):(l=r.fallback,a=n.mode,r=Ou({mode:"visible",children:r.children},a,0,null),(l=Ru(l,a,i,null)).flags|=2,r.return=n,l.return=n,r.sibling=l,n.child=r,1&n.mode&&_o(n,e.child,null,i),n.child.memoizedState=Oi(i),n.memoizedState=Ri,l);if(!(1&n.mode))return zi(e,n,i,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var s=r.dgst;return r=s,zi(e,n,i,r=ci(l=Error(o(419)),r,void 0))}if(s=!!(i&e.childLanes),vi||s){if(null!==(r=xs)){switch(i&-i){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=a&(r.suspendedLanes|i)?0:a)&&a!==l.retryLane&&(l.retryLane=a,Ro(e,a),tu(r,e,a,-1))}return mu(),zi(e,n,i,r=ci(Error(o(421))))}return"$?"===a.data?(n.flags|=128,n.child=e.child,n=Su.bind(null,e),a._reactRetry=n,null):(e=l.treeContext,ro=ua(a.nextSibling),to=n,ao=!0,oo=null,null!==e&&($a[Xa++]=Ka,$a[Xa++]=Za,$a[Xa++]=Qa,Ka=e.id,Za=e.overflow,Qa=n),(n=Di(n,r.children)).flags|=4096,n)}(e,n,s,a,r,l,t);if(i){i=a.fallback,s=n.mode,r=(l=e.child).sibling;var u={mode:"hidden",children:a.children};return 1&s||n.child===l?(a=Lu(l,u)).subtreeFlags=14680064&l.subtreeFlags:((a=n.child).childLanes=0,a.pendingProps=u,n.deletions=null),null!==r?i=Lu(r,i):(i=Ru(i,s,t,null)).flags|=2,i.return=n,a.return=n,a.sibling=i,n.child=a,a=i,i=n.child,s=null===(s=e.child.memoizedState)?Oi(t):{baseLanes:s.baseLanes|t,cachePool:null,transitions:s.transitions},i.memoizedState=s,i.childLanes=e.childLanes&~t,n.memoizedState=Ri,a}return e=(i=e.child).sibling,a=Lu(i,{mode:"visible",children:a.children}),!(1&n.mode)&&(a.lanes=t),a.return=n,a.sibling=null,null!==e&&(null===(t=n.deletions)?(n.deletions=[e],n.flags|=16):t.push(e)),n.child=a,n.memoizedState=null,a}function Di(e,n){return(n=Ou({mode:"visible",children:n},e.mode,0,null)).return=e,e.child=n}function zi(e,n,t,r){return null!==r&&mo(r),_o(n,e.child,null,t),(e=Di(n,n.pendingProps.children)).flags|=2,n.memoizedState=null,e}function Ui(e,n,t){e.lanes|=n;var r=e.alternate;null!==r&&(r.lanes|=n),xo(e.return,n,t)}function Fi(e,n,t,r,a){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:a}:(o.isBackwards=n,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=t,o.tailMode=a)}function ji(e,n,t){var r=n.pendingProps,a=r.revealOrder,o=r.tail;if(bi(e,n,r.children,t),2&(r=el.current))r=1&r|2,n.flags|=128;else{if(null!==e&&128&e.flags)e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ui(e,t,n);else if(19===e.tag)Ui(e,t,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(Ia(el,r),1&n.mode)switch(a){case"forwards":for(t=n.child,a=null;null!==t;)null!==(e=t.alternate)&&null===nl(e)&&(a=t),t=t.sibling;null===(t=a)?(a=n.child,n.child=null):(a=t.sibling,t.sibling=null),Fi(n,!1,a,t,o);break;case"backwards":for(t=null,a=n.child,n.child=null;null!==a;){if(null!==(e=a.alternate)&&null===nl(e)){n.child=a;break}e=a.sibling,a.sibling=t,t=a,a=e}Fi(n,!0,t,null,o);break;case"together":Fi(n,!1,null,null,void 0);break;default:n.memoizedState=null}else n.memoizedState=null;return n.child}function Wi(e,n){!(1&n.mode)&&null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2)}function Gi(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),Os|=n.lanes,!(t&n.childLanes))return null;if(null!==e&&n.child!==e.child)throw Error(o(153));if(null!==n.child){for(t=Lu(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=Lu(e,e.pendingProps)).return=n;t.sibling=null}return n.child}function Vi(e,n){if(!ao)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Yi(e){var n=null!==e.alternate&&e.alternate.child===e.child,t=0,r=0;if(n)for(var a=e.child;null!==a;)t|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)t|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=t,n}function $i(e,n,t){var r=n.pendingProps;switch(no(n),n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Yi(n),null;case 1:case 17:return Pa(n.type)&&La(),Yi(n),null;case 3:return r=n.stateNode,Zo(),ka(xa),ka(Ba),rl(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(fo(n)?n.flags|=4:null===e||e.memoizedState.isDehydrated&&!(256&n.flags)||(n.flags|=1024,null!==oo&&(lu(oo),oo=null))),Pi(e,n),Yi(n),null;case 5:Jo(n);var a=Qo(Xo.current);if(t=n.type,null!==e&&null!=n.stateNode)Li(e,n,t,r,a),e.ref!==n.ref&&(n.flags|=512,n.flags|=2097152);else{if(!r){if(null===n.stateNode)throw Error(o(166));return Yi(n),null}if(e=Qo(Yo.current),fo(n)){r=n.stateNode,t=n.type;var l=n.memoizedProps;switch(r[da]=n,r[pa]=l,e=!!(1&n.mode),t){case"dialog":zr("cancel",r),zr("close",r);break;case"iframe":case"object":case"embed":zr("load",r);break;case"video":case"audio":for(a=0;a<Rr.length;a++)zr(Rr[a],r);break;case"source":zr("error",r);break;case"img":case"image":case"link":zr("error",r),zr("load",r);break;case"details":zr("toggle",r);break;case"input":K(r,l),zr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},zr("invalid",r);break;case"textarea":ae(r,l),zr("invalid",r)}for(var s in ye(t,l),a=null,l)if(l.hasOwnProperty(s)){var u=l[s];"children"===s?"string"==typeof u?r.textContent!==u&&(!0!==l.suppressHydrationWarning&&qr(r.textContent,u,e),a=["children",u]):"number"==typeof u&&r.textContent!==""+u&&(!0!==l.suppressHydrationWarning&&qr(r.textContent,u,e),a=["children",""+u]):i.hasOwnProperty(s)&&null!=u&&"onScroll"===s&&zr("scroll",r)}switch(t){case"input":Y(r),J(r,l,!0);break;case"textarea":Y(r),le(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=Jr)}r=a,n.updateQueue=r,null!==r&&(n.flags|=4)}else{s=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(t)),"http://www.w3.org/1999/xhtml"===e?"script"===t?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(t,{is:r.is}):(e=s.createElement(t),"select"===t&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,t),e[da]=n,e[pa]=r,Ni(e,n,!1,!1),n.stateNode=e;e:{switch(s=ve(t,r),t){case"dialog":zr("cancel",e),zr("close",e),a=r;break;case"iframe":case"object":case"embed":zr("load",e),a=r;break;case"video":case"audio":for(a=0;a<Rr.length;a++)zr(Rr[a],e);a=r;break;case"source":zr("error",e),a=r;break;case"img":case"image":case"link":zr("error",e),zr("load",e),a=r;break;case"details":zr("toggle",e),a=r;break;case"input":K(e,r),a=Q(e,r),zr("invalid",e);break;case"option":default:a=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=H({},r,{value:void 0}),zr("invalid",e);break;case"textarea":ae(e,r),a=re(e,r),zr("invalid",e)}for(l in ye(t,a),u=a)if(u.hasOwnProperty(l)){var c=u[l];"style"===l?Ae(e,c):"dangerouslySetInnerHTML"===l?null!=(c=c?c.__html:void 0)&&fe(e,c):"children"===l?"string"==typeof c?("textarea"!==t||""!==c)&&de(e,c):"number"==typeof c&&de(e,""+c):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(i.hasOwnProperty(l)?null!=c&&"onScroll"===l&&zr("scroll",e):null!=c&&v(e,l,c,s))}switch(t){case"input":Y(e),J(e,r,!1);break;case"textarea":Y(e),le(e);break;case"option":null!=r.value&&e.setAttribute("value",""+G(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?te(e,!!r.multiple,l,!1):null!=r.defaultValue&&te(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Jr)}switch(t){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(n.flags|=4)}null!==n.ref&&(n.flags|=512,n.flags|=2097152)}return Yi(n),null;case 6:if(e&&null!=n.stateNode)Mi(e,n,e.memoizedProps,r);else{if("string"!=typeof r&&null===n.stateNode)throw Error(o(166));if(t=Qo(Xo.current),Qo(Yo.current),fo(n)){if(r=n.stateNode,t=n.memoizedProps,r[da]=n,(l=r.nodeValue!==t)&&null!==(e=to))switch(e.tag){case 3:qr(r.nodeValue,t,!!(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&qr(r.nodeValue,t,!!(1&e.mode))}l&&(n.flags|=4)}else(r=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[da]=n,n.stateNode=r}return Yi(n),null;case 13:if(ka(el),r=n.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(ao&&null!==ro&&1&n.mode&&!(128&n.flags))po(),ho(),n.flags|=98560,l=!1;else if(l=fo(n),null!==r&&null!==r.dehydrated){if(null===e){if(!l)throw Error(o(318));if(!(l=null!==(l=n.memoizedState)?l.dehydrated:null))throw Error(o(317));l[da]=n}else ho(),!(128&n.flags)&&(n.memoizedState=null),n.flags|=4;Yi(n),l=!1}else null!==oo&&(lu(oo),oo=null),l=!0;if(!l)return 65536&n.flags?n:null}return 128&n.flags?(n.lanes=t,n):((r=null!==r)!=(null!==e&&null!==e.memoizedState)&&r&&(n.child.flags|=8192,1&n.mode&&(null===e||1&el.current?0===Ms&&(Ms=3):mu())),null!==n.updateQueue&&(n.flags|=4),Yi(n),null);case 4:return Zo(),Pi(e,n),null===e&&jr(n.stateNode.containerInfo),Yi(n),null;case 10:return Bo(n.type._context),Yi(n),null;case 19:if(ka(el),null===(l=n.memoizedState))return Yi(n),null;if(r=!!(128&n.flags),null===(s=l.rendering))if(r)Vi(l,!1);else{if(0!==Ms||null!==e&&128&e.flags)for(e=n.child;null!==e;){if(null!==(s=nl(e))){for(n.flags|=128,Vi(l,!1),null!==(r=s.updateQueue)&&(n.updateQueue=r,n.flags|=4),n.subtreeFlags=0,r=t,t=n.child;null!==t;)e=r,(l=t).flags&=14680066,null===(s=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.subtreeFlags=0,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=s.childLanes,l.lanes=s.lanes,l.child=s.child,l.subtreeFlags=0,l.deletions=null,l.memoizedProps=s.memoizedProps,l.memoizedState=s.memoizedState,l.updateQueue=s.updateQueue,l.type=s.type,e=s.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),t=t.sibling;return Ia(el,1&el.current|2),n.child}e=e.sibling}null!==l.tail&&Ze()>js&&(n.flags|=128,r=!0,Vi(l,!1),n.lanes=4194304)}else{if(!r)if(null!==(e=nl(s))){if(n.flags|=128,r=!0,null!==(t=e.updateQueue)&&(n.updateQueue=t,n.flags|=4),Vi(l,!0),null===l.tail&&"hidden"===l.tailMode&&!s.alternate&&!ao)return Yi(n),null}else 2*Ze()-l.renderingStartTime>js&&1073741824!==t&&(n.flags|=128,r=!0,Vi(l,!1),n.lanes=4194304);l.isBackwards?(s.sibling=n.child,n.child=s):(null!==(t=l.last)?t.sibling=s:n.child=s,l.last=s)}return null!==l.tail?(n=l.tail,l.rendering=n,l.tail=n.sibling,l.renderingStartTime=Ze(),n.sibling=null,t=el.current,Ia(el,r?1&t|2:1&t),n):(Yi(n),null);case 22:case 23:return fu(),r=null!==n.memoizedState,null!==e&&null!==e.memoizedState!==r&&(n.flags|=8192),r&&1&n.mode?!!(1073741824&Ps)&&(Yi(n),6&n.subtreeFlags&&(n.flags|=8192)):Yi(n),null;case 24:case 25:return null}throw Error(o(156,n.tag))}function Xi(e,n){switch(no(n),n.tag){case 1:return Pa(n.type)&&La(),65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 3:return Zo(),ka(xa),ka(Ba),rl(),65536&(e=n.flags)&&!(128&e)?(n.flags=-65537&e|128,n):null;case 5:return Jo(n),null;case 13:if(ka(el),null!==(e=n.memoizedState)&&null!==e.dehydrated){if(null===n.alternate)throw Error(o(340));ho()}return 65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 19:return ka(el),null;case 4:return Zo(),null;case 10:return Bo(n.type._context),null;case 22:case 23:return fu(),null;default:return null}}Ni=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},Pi=function(){},Li=function(e,n,t,r){var a=e.memoizedProps;if(a!==r){e=n.stateNode,Qo(Yo.current);var o,l=null;switch(t){case"input":a=Q(e,a),r=Q(e,r),l=[];break;case"select":a=H({},a,{value:void 0}),r=H({},r,{value:void 0}),l=[];break;case"textarea":a=re(e,a),r=re(e,r),l=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Jr)}for(c in ye(t,r),t=null,a)if(!r.hasOwnProperty(c)&&a.hasOwnProperty(c)&&null!=a[c])if("style"===c){var s=a[c];for(o in s)s.hasOwnProperty(o)&&(t||(t={}),t[o]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(i.hasOwnProperty(c)?l||(l=[]):(l=l||[]).push(c,null));for(c in r){var u=r[c];if(s=null!=a?a[c]:void 0,r.hasOwnProperty(c)&&u!==s&&(null!=u||null!=s))if("style"===c)if(s){for(o in s)!s.hasOwnProperty(o)||u&&u.hasOwnProperty(o)||(t||(t={}),t[o]="");for(o in u)u.hasOwnProperty(o)&&s[o]!==u[o]&&(t||(t={}),t[o]=u[o])}else t||(l||(l=[]),l.push(c,t)),t=u;else"dangerouslySetInnerHTML"===c?(u=u?u.__html:void 0,s=s?s.__html:void 0,null!=u&&s!==u&&(l=l||[]).push(c,u)):"children"===c?"string"!=typeof u&&"number"!=typeof u||(l=l||[]).push(c,""+u):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(i.hasOwnProperty(c)?(null!=u&&"onScroll"===c&&zr("scroll",e),l||s===u||(l=[])):(l=l||[]).push(c,u))}t&&(l=l||[]).push("style",t);var c=l;(n.updateQueue=c)&&(n.flags|=4)}},Mi=function(e,n,t,r){t!==r&&(n.flags|=4)};var Qi=!1,Ki=!1,Zi="function"==typeof WeakSet?WeakSet:Set,qi=null;function Ji(e,n){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){wu(e,n,t)}else t.current=null}function es(e,n,t){try{t()}catch(t){wu(e,n,t)}}var ns=!1;function ts(e,n,t){var r=n.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var o=a.destroy;a.destroy=void 0,void 0!==o&&es(n,t,o)}a=a.next}while(a!==r)}}function rs(e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var t=n=n.next;do{if((t.tag&e)===e){var r=t.create;t.destroy=r()}t=t.next}while(t!==n)}}function as(e){var n=e.ref;if(null!==n){var t=e.stateNode;e.tag,e=t,"function"==typeof n?n(e):n.current=e}}function os(e){var n=e.alternate;null!==n&&(e.alternate=null,os(n)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(n=e.stateNode)&&(delete n[da],delete n[pa],delete n[ma],delete n[Aa],delete n[ga]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function ls(e){return 5===e.tag||3===e.tag||4===e.tag}function is(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||ls(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ss(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?8===t.nodeType?t.parentNode.insertBefore(e,n):t.insertBefore(e,n):(8===t.nodeType?(n=t.parentNode).insertBefore(e,t):(n=t).appendChild(e),null!=(t=t._reactRootContainer)||null!==n.onclick||(n.onclick=Jr));else if(4!==r&&null!==(e=e.child))for(ss(e,n,t),e=e.sibling;null!==e;)ss(e,n,t),e=e.sibling}function us(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?t.insertBefore(e,n):t.appendChild(e);else if(4!==r&&null!==(e=e.child))for(us(e,n,t),e=e.sibling;null!==e;)us(e,n,t),e=e.sibling}var cs=null,fs=!1;function ds(e,n,t){for(t=t.child;null!==t;)ps(e,n,t),t=t.sibling}function ps(e,n,t){if(on&&"function"==typeof on.onCommitFiberUnmount)try{on.onCommitFiberUnmount(an,t)}catch(e){}switch(t.tag){case 5:Ki||Ji(t,n);case 6:var r=cs,a=fs;cs=null,ds(e,n,t),fs=a,null!==(cs=r)&&(fs?(e=cs,t=t.stateNode,8===e.nodeType?e.parentNode.removeChild(t):e.removeChild(t)):cs.removeChild(t.stateNode));break;case 18:null!==cs&&(fs?(e=cs,t=t.stateNode,8===e.nodeType?sa(e.parentNode,t):1===e.nodeType&&sa(e,t),Wn(e)):sa(cs,t.stateNode));break;case 4:r=cs,a=fs,cs=t.stateNode.containerInfo,fs=!0,ds(e,n,t),cs=r,fs=a;break;case 0:case 11:case 14:case 15:if(!Ki&&null!==(r=t.updateQueue)&&null!==(r=r.lastEffect)){a=r=r.next;do{var o=a,l=o.destroy;o=o.tag,void 0!==l&&(2&o||4&o)&&es(t,n,l),a=a.next}while(a!==r)}ds(e,n,t);break;case 1:if(!Ki&&(Ji(t,n),"function"==typeof(r=t.stateNode).componentWillUnmount))try{r.props=t.memoizedProps,r.state=t.memoizedState,r.componentWillUnmount()}catch(e){wu(t,n,e)}ds(e,n,t);break;case 21:ds(e,n,t);break;case 22:1&t.mode?(Ki=(r=Ki)||null!==t.memoizedState,ds(e,n,t),Ki=r):ds(e,n,t);break;default:ds(e,n,t)}}function hs(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new Zi),n.forEach((function(n){var r=Bu.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))}))}}function ms(e,n){var t=n.deletions;if(null!==t)for(var r=0;r<t.length;r++){var a=t[r];try{var l=e,i=n,s=i;e:for(;null!==s;){switch(s.tag){case 5:cs=s.stateNode,fs=!1;break e;case 3:case 4:cs=s.stateNode.containerInfo,fs=!0;break e}s=s.return}if(null===cs)throw Error(o(160));ps(l,i,a),cs=null,fs=!1;var u=a.alternate;null!==u&&(u.return=null),a.return=null}catch(e){wu(a,n,e)}}if(12854&n.subtreeFlags)for(n=n.child;null!==n;)As(n,e),n=n.sibling}function As(e,n){var t=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(ms(n,e),gs(e),4&r){try{ts(3,e,e.return),rs(3,e)}catch(n){wu(e,e.return,n)}try{ts(5,e,e.return)}catch(n){wu(e,e.return,n)}}break;case 1:ms(n,e),gs(e),512&r&&null!==t&&Ji(t,t.return);break;case 5:if(ms(n,e),gs(e),512&r&&null!==t&&Ji(t,t.return),32&e.flags){var a=e.stateNode;try{de(a,"")}catch(n){wu(e,e.return,n)}}if(4&r&&null!=(a=e.stateNode)){var l=e.memoizedProps,i=null!==t?t.memoizedProps:l,s=e.type,u=e.updateQueue;if(e.updateQueue=null,null!==u)try{"input"===s&&"radio"===l.type&&null!=l.name&&Z(a,l),ve(s,i);var c=ve(s,l);for(i=0;i<u.length;i+=2){var f=u[i],d=u[i+1];"style"===f?Ae(a,d):"dangerouslySetInnerHTML"===f?fe(a,d):"children"===f?de(a,d):v(a,f,d,c)}switch(s){case"input":q(a,l);break;case"textarea":oe(a,l);break;case"select":var p=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!l.multiple;var h=l.value;null!=h?te(a,!!l.multiple,h,!1):p!==!!l.multiple&&(null!=l.defaultValue?te(a,!!l.multiple,l.defaultValue,!0):te(a,!!l.multiple,l.multiple?[]:"",!1))}a[pa]=l}catch(n){wu(e,e.return,n)}}break;case 6:if(ms(n,e),gs(e),4&r){if(null===e.stateNode)throw Error(o(162));a=e.stateNode,l=e.memoizedProps;try{a.nodeValue=l}catch(n){wu(e,e.return,n)}}break;case 3:if(ms(n,e),gs(e),4&r&&null!==t&&t.memoizedState.isDehydrated)try{Wn(n.containerInfo)}catch(n){wu(e,e.return,n)}break;case 4:default:ms(n,e),gs(e);break;case 13:ms(n,e),gs(e),8192&(a=e.child).flags&&(l=null!==a.memoizedState,a.stateNode.isHidden=l,!l||null!==a.alternate&&null!==a.alternate.memoizedState||(Fs=Ze())),4&r&&hs(e);break;case 22:if(f=null!==t&&null!==t.memoizedState,1&e.mode?(Ki=(c=Ki)||f,ms(n,e),Ki=c):ms(n,e),gs(e),8192&r){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!f&&1&e.mode)for(qi=e,f=e.child;null!==f;){for(d=qi=f;null!==qi;){switch(h=(p=qi).child,p.tag){case 0:case 11:case 14:case 15:ts(4,p,p.return);break;case 1:Ji(p,p.return);var m=p.stateNode;if("function"==typeof m.componentWillUnmount){r=p,t=p.return;try{n=r,m.props=n.memoizedProps,m.state=n.memoizedState,m.componentWillUnmount()}catch(e){wu(r,t,e)}}break;case 5:Ji(p,p.return);break;case 22:if(null!==p.memoizedState){_s(d);continue}}null!==h?(h.return=p,qi=h):_s(d)}f=f.sibling}e:for(f=null,d=e;;){if(5===d.tag){if(null===f){f=d;try{a=d.stateNode,c?"function"==typeof(l=a.style).setProperty?l.setProperty("display","none","important"):l.display="none":(s=d.stateNode,i=null!=(u=d.memoizedProps.style)&&u.hasOwnProperty("display")?u.display:null,s.style.display=me("display",i))}catch(n){wu(e,e.return,n)}}}else if(6===d.tag){if(null===f)try{d.stateNode.nodeValue=c?"":d.memoizedProps}catch(n){wu(e,e.return,n)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;f===d&&(f=null),d=d.return}f===d&&(f=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:ms(n,e),gs(e),4&r&&hs(e);case 21:}}function gs(e){var n=e.flags;if(2&n){try{e:{for(var t=e.return;null!==t;){if(ls(t)){var r=t;break e}t=t.return}throw Error(o(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(de(a,""),r.flags&=-33),us(e,is(e),a);break;case 3:case 4:var l=r.stateNode.containerInfo;ss(e,is(e),l);break;default:throw Error(o(161))}}catch(n){wu(e,e.return,n)}e.flags&=-3}4096&n&&(e.flags&=-4097)}function ys(e,n,t){qi=e,vs(e,n,t)}function vs(e,n,t){for(var r=!!(1&e.mode);null!==qi;){var a=qi,o=a.child;if(22===a.tag&&r){var l=null!==a.memoizedState||Qi;if(!l){var i=a.alternate,s=null!==i&&null!==i.memoizedState||Ki;i=Qi;var u=Ki;if(Qi=l,(Ki=s)&&!u)for(qi=a;null!==qi;)s=(l=qi).child,22===l.tag&&null!==l.memoizedState?Cs(a):null!==s?(s.return=l,qi=s):Cs(a);for(;null!==o;)qi=o,vs(o,n,t),o=o.sibling;qi=a,Qi=i,Ki=u}bs(e)}else 8772&a.subtreeFlags&&null!==o?(o.return=a,qi=o):bs(e)}}function bs(e){for(;null!==qi;){var n=qi;if(8772&n.flags){var t=n.alternate;try{if(8772&n.flags)switch(n.tag){case 0:case 11:case 15:Ki||rs(5,n);break;case 1:var r=n.stateNode;if(4&n.flags&&!Ki)if(null===t)r.componentDidMount();else{var a=n.elementType===n.type?t.memoizedProps:ti(n.type,t.memoizedProps);r.componentDidUpdate(a,t.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var l=n.updateQueue;null!==l&&Go(n,l,r);break;case 3:var i=n.updateQueue;if(null!==i){if(t=null,null!==n.child)switch(n.child.tag){case 5:case 1:t=n.child.stateNode}Go(n,i,t)}break;case 5:var s=n.stateNode;if(null===t&&4&n.flags){t=s;var u=n.memoizedProps;switch(n.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&t.focus();break;case"img":u.src&&(t.src=u.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===n.memoizedState){var c=n.alternate;if(null!==c){var f=c.memoizedState;if(null!==f){var d=f.dehydrated;null!==d&&Wn(d)}}}break;default:throw Error(o(163))}Ki||512&n.flags&&as(n)}catch(e){wu(n,n.return,e)}}if(n===e){qi=null;break}if(null!==(t=n.sibling)){t.return=n.return,qi=t;break}qi=n.return}}function _s(e){for(;null!==qi;){var n=qi;if(n===e){qi=null;break}var t=n.sibling;if(null!==t){t.return=n.return,qi=t;break}qi=n.return}}function Cs(e){for(;null!==qi;){var n=qi;try{switch(n.tag){case 0:case 11:case 15:var t=n.return;try{rs(4,n)}catch(e){wu(n,t,e)}break;case 1:var r=n.stateNode;if("function"==typeof r.componentDidMount){var a=n.return;try{r.componentDidMount()}catch(e){wu(n,a,e)}}var o=n.return;try{as(n)}catch(e){wu(n,o,e)}break;case 5:var l=n.return;try{as(n)}catch(e){wu(n,l,e)}}}catch(e){wu(n,n.return,e)}if(n===e){qi=null;break}var i=n.sibling;if(null!==i){i.return=n.return,qi=i;break}qi=n.return}}var Es,ws=Math.ceil,ks=b.ReactCurrentDispatcher,Is=b.ReactCurrentOwner,Ss=b.ReactCurrentBatchConfig,Bs=0,xs=null,Ts=null,Ns=0,Ps=0,Ls=wa(0),Ms=0,Rs=null,Os=0,Hs=0,Ds=0,zs=null,Us=null,Fs=0,js=1/0,Ws=null,Gs=!1,Vs=null,Ys=null,$s=!1,Xs=null,Qs=0,Ks=0,Zs=null,qs=-1,Js=0;function eu(){return 6&Bs?Ze():-1!==qs?qs:qs=Ze()}function nu(e){return 1&e.mode?2&Bs&&0!==Ns?Ns&-Ns:null!==Ao.transition?(0===Js&&(Js=An()),Js):0!==(e=bn)?e:e=void 0===(e=window.event)?16:Zn(e.type):1}function tu(e,n,t,r){if(50<Ks)throw Ks=0,Zs=null,Error(o(185));yn(e,t,r),2&Bs&&e===xs||(e===xs&&(!(2&Bs)&&(Hs|=t),4===Ms&&iu(e,Ns)),ru(e,r),1===t&&0===Bs&&!(1&n.mode)&&(js=Ze()+500,za&&ja()))}function ru(e,n){var t=e.callbackNode;!function(e,n){for(var t=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,o=e.pendingLanes;0<o;){var l=31-ln(o),i=1<<l,s=a[l];-1===s?i&t&&!(i&r)||(a[l]=hn(i,n)):s<=n&&(e.expiredLanes|=i),o&=~i}}(e,n);var r=pn(e,e===xs?Ns:0);if(0===r)null!==t&&Xe(t),e.callbackNode=null,e.callbackPriority=0;else if(n=r&-r,e.callbackPriority!==n){if(null!=t&&Xe(t),1===n)0===e.tag?function(e){za=!0,Fa(e)}(su.bind(null,e)):Fa(su.bind(null,e)),la((function(){!(6&Bs)&&ja()})),t=null;else{switch(_n(r)){case 1:t=Je;break;case 4:t=en;break;case 16:default:t=nn;break;case 536870912:t=rn}t=xu(t,au.bind(null,e))}e.callbackPriority=n,e.callbackNode=t}}function au(e,n){if(qs=-1,Js=0,6&Bs)throw Error(o(327));var t=e.callbackNode;if(Cu()&&e.callbackNode!==t)return null;var r=pn(e,e===xs?Ns:0);if(0===r)return null;if(30&r||r&e.expiredLanes||n)n=Au(e,r);else{n=r;var a=Bs;Bs|=2;var l=hu();for(xs===e&&Ns===n||(Ws=null,js=Ze()+500,du(e,n));;)try{yu();break}catch(n){pu(e,n)}So(),ks.current=l,Bs=a,null!==Ts?n=0:(xs=null,Ns=0,n=Ms)}if(0!==n){if(2===n&&0!==(a=mn(e))&&(r=a,n=ou(e,a)),1===n)throw t=Rs,du(e,0),iu(e,r),ru(e,Ze()),t;if(6===n)iu(e,r);else{if(a=e.current.alternate,!(30&r||function(e){for(var n=e;;){if(16384&n.flags){var t=n.updateQueue;if(null!==t&&null!==(t=t.stores))for(var r=0;r<t.length;r++){var a=t[r],o=a.getSnapshot;a=a.value;try{if(!ir(o(),a))return!1}catch(e){return!1}}}if(t=n.child,16384&n.subtreeFlags&&null!==t)t.return=n,n=t;else{if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}(a)||(n=Au(e,r),2===n&&(l=mn(e),0!==l&&(r=l,n=ou(e,l))),1!==n)))throw t=Rs,du(e,0),iu(e,r),ru(e,Ze()),t;switch(e.finishedWork=a,e.finishedLanes=r,n){case 0:case 1:throw Error(o(345));case 2:case 5:_u(e,Us,Ws);break;case 3:if(iu(e,r),(130023424&r)===r&&10<(n=Fs+500-Ze())){if(0!==pn(e,0))break;if(((a=e.suspendedLanes)&r)!==r){eu(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=ra(_u.bind(null,e,Us,Ws),n);break}_u(e,Us,Ws);break;case 4:if(iu(e,r),(4194240&r)===r)break;for(n=e.eventTimes,a=-1;0<r;){var i=31-ln(r);l=1<<i,(i=n[i])>a&&(a=i),r&=~l}if(r=a,10<(r=(120>(r=Ze()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*ws(r/1960))-r)){e.timeoutHandle=ra(_u.bind(null,e,Us,Ws),r);break}_u(e,Us,Ws);break;default:throw Error(o(329))}}}return ru(e,Ze()),e.callbackNode===t?au.bind(null,e):null}function ou(e,n){var t=zs;return e.current.memoizedState.isDehydrated&&(du(e,n).flags|=256),2!==(e=Au(e,n))&&(n=Us,Us=t,null!==n&&lu(n)),e}function lu(e){null===Us?Us=e:Us.push.apply(Us,e)}function iu(e,n){for(n&=~Ds,n&=~Hs,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var t=31-ln(n),r=1<<t;e[t]=-1,n&=~r}}function su(e){if(6&Bs)throw Error(o(327));Cu();var n=pn(e,0);if(!(1&n))return ru(e,Ze()),null;var t=Au(e,n);if(0!==e.tag&&2===t){var r=mn(e);0!==r&&(n=r,t=ou(e,r))}if(1===t)throw t=Rs,du(e,0),iu(e,n),ru(e,Ze()),t;if(6===t)throw Error(o(345));return e.finishedWork=e.current.alternate,e.finishedLanes=n,_u(e,Us,Ws),ru(e,Ze()),null}function uu(e,n){var t=Bs;Bs|=1;try{return e(n)}finally{0===(Bs=t)&&(js=Ze()+500,za&&ja())}}function cu(e){null!==Xs&&0===Xs.tag&&!(6&Bs)&&Cu();var n=Bs;Bs|=1;var t=Ss.transition,r=bn;try{if(Ss.transition=null,bn=1,e)return e()}finally{bn=r,Ss.transition=t,!(6&(Bs=n))&&ja()}}function fu(){Ps=Ls.current,ka(Ls)}function du(e,n){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,aa(t)),null!==Ts)for(t=Ts.return;null!==t;){var r=t;switch(no(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&La();break;case 3:Zo(),ka(xa),ka(Ba),rl();break;case 5:Jo(r);break;case 4:Zo();break;case 13:case 19:ka(el);break;case 10:Bo(r.type._context);break;case 22:case 23:fu()}t=t.return}if(xs=e,Ts=e=Lu(e.current,null),Ns=Ps=n,Ms=0,Rs=null,Ds=Hs=Os=0,Us=zs=null,null!==Po){for(n=0;n<Po.length;n++)if(null!==(r=(t=Po[n]).interleaved)){t.interleaved=null;var a=r.next,o=t.pending;if(null!==o){var l=o.next;o.next=a,r.next=l}t.pending=r}Po=null}return e}function pu(e,n){for(;;){var t=Ts;try{if(So(),al.current=ql,cl){for(var r=il.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}cl=!1}if(ll=0,ul=sl=il=null,fl=!1,dl=0,Is.current=null,null===t||null===t.return){Ms=1,Rs=n,Ts=null;break}e:{var l=e,i=t.return,s=t,u=n;if(n=Ns,s.flags|=32768,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u,f=s,d=f.tag;if(!(1&f.mode||0!==d&&11!==d&&15!==d)){var p=f.alternate;p?(f.updateQueue=p.updateQueue,f.memoizedState=p.memoizedState,f.lanes=p.lanes):(f.updateQueue=null,f.memoizedState=null)}var h=Ai(i);if(null!==h){h.flags&=-257,gi(h,i,s,0,n),1&h.mode&&mi(l,c,n),u=c;var m=(n=h).updateQueue;if(null===m){var A=new Set;A.add(u),n.updateQueue=A}else m.add(u);break e}if(!(1&n)){mi(l,c,n),mu();break e}u=Error(o(426))}else if(ao&&1&s.mode){var g=Ai(i);if(null!==g){!(65536&g.flags)&&(g.flags|=256),gi(g,i,s,0,n),mo(ui(u,s));break e}}l=u=ui(u,s),4!==Ms&&(Ms=2),null===zs?zs=[l]:zs.push(l),l=i;do{switch(l.tag){case 3:l.flags|=65536,n&=-n,l.lanes|=n,jo(l,pi(0,u,n));break e;case 1:s=u;var y=l.type,v=l.stateNode;if(!(128&l.flags||"function"!=typeof y.getDerivedStateFromError&&(null===v||"function"!=typeof v.componentDidCatch||null!==Ys&&Ys.has(v)))){l.flags|=65536,n&=-n,l.lanes|=n,jo(l,hi(l,s,n));break e}}l=l.return}while(null!==l)}bu(t)}catch(e){n=e,Ts===t&&null!==t&&(Ts=t=t.return);continue}break}}function hu(){var e=ks.current;return ks.current=ql,null===e?ql:e}function mu(){0!==Ms&&3!==Ms&&2!==Ms||(Ms=4),null===xs||!(268435455&Os)&&!(268435455&Hs)||iu(xs,Ns)}function Au(e,n){var t=Bs;Bs|=2;var r=hu();for(xs===e&&Ns===n||(Ws=null,du(e,n));;)try{gu();break}catch(n){pu(e,n)}if(So(),Bs=t,ks.current=r,null!==Ts)throw Error(o(261));return xs=null,Ns=0,Ms}function gu(){for(;null!==Ts;)vu(Ts)}function yu(){for(;null!==Ts&&!Qe();)vu(Ts)}function vu(e){var n=Es(e.alternate,e,Ps);e.memoizedProps=e.pendingProps,null===n?bu(e):Ts=n,Is.current=null}function bu(e){var n=e;do{var t=n.alternate;if(e=n.return,32768&n.flags){if(null!==(t=Xi(t,n)))return t.flags&=32767,void(Ts=t);if(null===e)return Ms=6,void(Ts=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}else if(null!==(t=$i(t,n,Ps)))return void(Ts=t);if(null!==(n=n.sibling))return void(Ts=n);Ts=n=e}while(null!==n);0===Ms&&(Ms=5)}function _u(e,n,t){var r=bn,a=Ss.transition;try{Ss.transition=null,bn=1,function(e,n,t,r){do{Cu()}while(null!==Xs);if(6&Bs)throw Error(o(327));t=e.finishedWork;var a=e.finishedLanes;if(null===t)return null;if(e.finishedWork=null,e.finishedLanes=0,t===e.current)throw Error(o(177));e.callbackNode=null,e.callbackPriority=0;var l=t.lanes|t.childLanes;if(function(e,n){var t=e.pendingLanes&~n;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=n,e.mutableReadLanes&=n,e.entangledLanes&=n,n=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<t;){var a=31-ln(t),o=1<<a;n[a]=0,r[a]=-1,e[a]=-1,t&=~o}}(e,l),e===xs&&(Ts=xs=null,Ns=0),!(2064&t.subtreeFlags)&&!(2064&t.flags)||$s||($s=!0,xu(nn,(function(){return Cu(),null}))),l=!!(15990&t.flags),15990&t.subtreeFlags||l){l=Ss.transition,Ss.transition=null;var i=bn;bn=1;var s=Bs;Bs|=4,Is.current=null,function(e,n){if(ea=Vn,pr(e=dr())){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(r&&0!==r.rangeCount){t=r.anchorNode;var a=r.anchorOffset,l=r.focusNode;r=r.focusOffset;try{t.nodeType,l.nodeType}catch(e){t=null;break e}var i=0,s=-1,u=-1,c=0,f=0,d=e,p=null;n:for(;;){for(var h;d!==t||0!==a&&3!==d.nodeType||(s=i+a),d!==l||0!==r&&3!==d.nodeType||(u=i+r),3===d.nodeType&&(i+=d.nodeValue.length),null!==(h=d.firstChild);)p=d,d=h;for(;;){if(d===e)break n;if(p===t&&++c===a&&(s=i),p===l&&++f===r&&(u=i),null!==(h=d.nextSibling))break;p=(d=p).parentNode}d=h}t=-1===s||-1===u?null:{start:s,end:u}}else t=null}t=t||{start:0,end:0}}else t=null;for(na={focusedElem:e,selectionRange:t},Vn=!1,qi=n;null!==qi;)if(e=(n=qi).child,1028&n.subtreeFlags&&null!==e)e.return=n,qi=e;else for(;null!==qi;){n=qi;try{var m=n.alternate;if(1024&n.flags)switch(n.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var A=m.memoizedProps,g=m.memoizedState,y=n.stateNode,v=y.getSnapshotBeforeUpdate(n.elementType===n.type?A:ti(n.type,A),g);y.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var b=n.stateNode.containerInfo;1===b.nodeType?b.textContent="":9===b.nodeType&&b.documentElement&&b.removeChild(b.documentElement);break;default:throw Error(o(163))}}catch(e){wu(n,n.return,e)}if(null!==(e=n.sibling)){e.return=n.return,qi=e;break}qi=n.return}m=ns,ns=!1}(e,t),As(t,e),hr(na),Vn=!!ea,na=ea=null,e.current=t,ys(t,e,a),Ke(),Bs=s,bn=i,Ss.transition=l}else e.current=t;if($s&&($s=!1,Xs=e,Qs=a),0===(l=e.pendingLanes)&&(Ys=null),function(e){if(on&&"function"==typeof on.onCommitFiberRoot)try{on.onCommitFiberRoot(an,e,void 0,!(128&~e.current.flags))}catch(e){}}(t.stateNode),ru(e,Ze()),null!==n)for(r=e.onRecoverableError,t=0;t<n.length;t++)r((a=n[t]).value,{componentStack:a.stack,digest:a.digest});if(Gs)throw Gs=!1,e=Vs,Vs=null,e;!!(1&Qs)&&0!==e.tag&&Cu(),1&(l=e.pendingLanes)?e===Zs?Ks++:(Ks=0,Zs=e):Ks=0,ja()}(e,n,t,r)}finally{Ss.transition=a,bn=r}return null}function Cu(){if(null!==Xs){var e=_n(Qs),n=Ss.transition,t=bn;try{if(Ss.transition=null,bn=16>e?16:e,null===Xs)var r=!1;else{if(e=Xs,Xs=null,Qs=0,6&Bs)throw Error(o(331));var a=Bs;for(Bs|=4,qi=e.current;null!==qi;){var l=qi,i=l.child;if(16&qi.flags){var s=l.deletions;if(null!==s){for(var u=0;u<s.length;u++){var c=s[u];for(qi=c;null!==qi;){var f=qi;switch(f.tag){case 0:case 11:case 15:ts(8,f,l)}var d=f.child;if(null!==d)d.return=f,qi=d;else for(;null!==qi;){var p=(f=qi).sibling,h=f.return;if(os(f),f===c){qi=null;break}if(null!==p){p.return=h,qi=p;break}qi=h}}}var m=l.alternate;if(null!==m){var A=m.child;if(null!==A){m.child=null;do{var g=A.sibling;A.sibling=null,A=g}while(null!==A)}}qi=l}}if(2064&l.subtreeFlags&&null!==i)i.return=l,qi=i;else e:for(;null!==qi;){if(2048&(l=qi).flags)switch(l.tag){case 0:case 11:case 15:ts(9,l,l.return)}var y=l.sibling;if(null!==y){y.return=l.return,qi=y;break e}qi=l.return}}var v=e.current;for(qi=v;null!==qi;){var b=(i=qi).child;if(2064&i.subtreeFlags&&null!==b)b.return=i,qi=b;else e:for(i=v;null!==qi;){if(2048&(s=qi).flags)try{switch(s.tag){case 0:case 11:case 15:rs(9,s)}}catch(e){wu(s,s.return,e)}if(s===i){qi=null;break e}var _=s.sibling;if(null!==_){_.return=s.return,qi=_;break e}qi=s.return}}if(Bs=a,ja(),on&&"function"==typeof on.onPostCommitFiberRoot)try{on.onPostCommitFiberRoot(an,e)}catch(e){}r=!0}return r}finally{bn=t,Ss.transition=n}}return!1}function Eu(e,n,t){e=Uo(e,n=pi(0,n=ui(t,n),1),1),n=eu(),null!==e&&(yn(e,1,n),ru(e,n))}function wu(e,n,t){if(3===e.tag)Eu(e,e,t);else for(;null!==n;){if(3===n.tag){Eu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Ys||!Ys.has(r))){n=Uo(n,e=hi(n,e=ui(t,e),1),1),e=eu(),null!==n&&(yn(n,1,e),ru(n,e));break}}n=n.return}}function ku(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),n=eu(),e.pingedLanes|=e.suspendedLanes&t,xs===e&&(Ns&t)===t&&(4===Ms||3===Ms&&(130023424&Ns)===Ns&&500>Ze()-Fs?du(e,0):Ds|=t),ru(e,n)}function Iu(e,n){0===n&&(1&e.mode?(n=fn,!(130023424&(fn<<=1))&&(fn=4194304)):n=1);var t=eu();null!==(e=Ro(e,n))&&(yn(e,n,t),ru(e,t))}function Su(e){var n=e.memoizedState,t=0;null!==n&&(t=n.retryLane),Iu(e,t)}function Bu(e,n){var t=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(t=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(o(314))}null!==r&&r.delete(n),Iu(e,t)}function xu(e,n){return $e(e,n)}function Tu(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Nu(e,n,t,r){return new Tu(e,n,t,r)}function Pu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Lu(e,n){var t=e.alternate;return null===t?((t=Nu(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.subtreeFlags=0,t.deletions=null),t.flags=14680064&e.flags,t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function Mu(e,n,t,r,a,l){var i=2;if(r=e,"function"==typeof e)Pu(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case E:return Ru(t.children,a,l,n);case w:i=8,a|=8;break;case k:return(e=Nu(12,t,n,2|a)).elementType=k,e.lanes=l,e;case x:return(e=Nu(13,t,n,a)).elementType=x,e.lanes=l,e;case T:return(e=Nu(19,t,n,a)).elementType=T,e.lanes=l,e;case L:return Ou(t,a,l,n);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case I:i=10;break e;case S:i=9;break e;case B:i=11;break e;case N:i=14;break e;case P:i=16,r=null;break e}throw Error(o(130,null==e?e:typeof e,""))}return(n=Nu(i,t,n,a)).elementType=e,n.type=r,n.lanes=l,n}function Ru(e,n,t,r){return(e=Nu(7,e,r,n)).lanes=t,e}function Ou(e,n,t,r){return(e=Nu(22,e,r,n)).elementType=L,e.lanes=t,e.stateNode={isHidden:!1},e}function Hu(e,n,t){return(e=Nu(6,e,null,n)).lanes=t,e}function Du(e,n,t){return(n=Nu(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function zu(e,n,t,r,a){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gn(0),this.expirationTimes=gn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gn(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Uu(e,n,t,r,a,o,l,i,s){return e=new zu(e,n,t,i,s),1===n?(n=1,!0===o&&(n|=8)):n=0,o=Nu(3,null,null,n),e.current=o,o.stateNode=e,o.memoizedState={element:r,isDehydrated:t,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ho(o),e}function Fu(e){if(!e)return Sa;e:{if(je(e=e._reactInternals)!==e||1!==e.tag)throw Error(o(170));var n=e;do{switch(n.tag){case 3:n=n.stateNode.context;break e;case 1:if(Pa(n.type)){n=n.stateNode.__reactInternalMemoizedMergedChildContext;break e}}n=n.return}while(null!==n);throw Error(o(171))}if(1===e.tag){var t=e.type;if(Pa(t))return Ra(e,t,n)}return n}function ju(e,n,t,r,a,o,l,i,s){return(e=Uu(t,r,!0,e,0,o,0,i,s)).context=Fu(null),t=e.current,(o=zo(r=eu(),a=nu(t))).callback=null!=n?n:null,Uo(t,o,a),e.current.lanes=a,yn(e,a,r),ru(e,r),e}function Wu(e,n,t,r){var a=n.current,o=eu(),l=nu(a);return t=Fu(t),null===n.context?n.context=t:n.pendingContext=t,(n=zo(o,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),null!==(e=Uo(a,n,l))&&(tu(e,a,l,o),Fo(e,a,l)),l}function Gu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Vu(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function Yu(e,n){Vu(e,n),(e=e.alternate)&&Vu(e,n)}Es=function(e,n,t){if(null!==e)if(e.memoizedProps!==n.pendingProps||xa.current)vi=!0;else{if(!(e.lanes&t||128&n.flags))return vi=!1,function(e,n,t){switch(n.tag){case 3:xi(n),ho();break;case 5:qo(n);break;case 1:Pa(n.type)&&Oa(n);break;case 4:Ko(n,n.stateNode.containerInfo);break;case 10:var r=n.type._context,a=n.memoizedProps.value;Ia(Eo,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=n.memoizedState))return null!==r.dehydrated?(Ia(el,1&el.current),n.flags|=128,null):t&n.child.childLanes?Hi(e,n,t):(Ia(el,1&el.current),null!==(e=Gi(e,n,t))?e.sibling:null);Ia(el,1&el.current);break;case 19:if(r=!!(t&n.childLanes),128&e.flags){if(r)return ji(e,n,t);n.flags|=128}if(null!==(a=n.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),Ia(el,el.current),r)break;return null;case 22:case 23:return n.lanes=0,wi(e,n,t)}return Gi(e,n,t)}(e,n,t);vi=!!(131072&e.flags)}else vi=!1,ao&&1048576&n.flags&&Ja(n,Ya,n.index);switch(n.lanes=0,n.tag){case 2:var r=n.type;Wi(e,n),e=n.pendingProps;var a=Na(n,Ba.current);To(n,t),a=Al(null,n,r,e,a,t);var l=gl();return n.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(n.tag=1,n.memoizedState=null,n.updateQueue=null,Pa(r)?(l=!0,Oa(n)):l=!1,n.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Ho(n),a.updater=ai,n.stateNode=a,a._reactInternals=n,si(n,r,e,t),n=Bi(null,n,r,!0,l,t)):(n.tag=0,ao&&l&&eo(n),bi(null,n,a,t),n=n.child),n;case 16:r=n.elementType;e:{switch(Wi(e,n),e=n.pendingProps,r=(a=r._init)(r._payload),n.type=r,a=n.tag=function(e){if("function"==typeof e)return Pu(e)?1:0;if(null!=e){if((e=e.$$typeof)===B)return 11;if(e===N)return 14}return 2}(r),e=ti(r,e),a){case 0:n=Ii(null,n,r,e,t);break e;case 1:n=Si(null,n,r,e,t);break e;case 11:n=_i(null,n,r,e,t);break e;case 14:n=Ci(null,n,r,ti(r.type,e),t);break e}throw Error(o(306,r,""))}return n;case 0:return r=n.type,a=n.pendingProps,Ii(e,n,r,a=n.elementType===r?a:ti(r,a),t);case 1:return r=n.type,a=n.pendingProps,Si(e,n,r,a=n.elementType===r?a:ti(r,a),t);case 3:e:{if(xi(n),null===e)throw Error(o(387));r=n.pendingProps,a=(l=n.memoizedState).element,Do(e,n),Wo(n,r,null,t);var i=n.memoizedState;if(r=i.element,l.isDehydrated){if(l={element:r,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},n.updateQueue.baseState=l,n.memoizedState=l,256&n.flags){n=Ti(e,n,r,t,a=ui(Error(o(423)),n));break e}if(r!==a){n=Ti(e,n,r,t,a=ui(Error(o(424)),n));break e}for(ro=ua(n.stateNode.containerInfo.firstChild),to=n,ao=!0,oo=null,t=Co(n,null,r,t),n.child=t;t;)t.flags=-3&t.flags|4096,t=t.sibling}else{if(ho(),r===a){n=Gi(e,n,t);break e}bi(e,n,r,t)}n=n.child}return n;case 5:return qo(n),null===e&&uo(n),r=n.type,a=n.pendingProps,l=null!==e?e.memoizedProps:null,i=a.children,ta(r,a)?i=null:null!==l&&ta(r,l)&&(n.flags|=32),ki(e,n),bi(e,n,i,t),n.child;case 6:return null===e&&uo(n),null;case 13:return Hi(e,n,t);case 4:return Ko(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=_o(n,null,r,t):bi(e,n,r,t),n.child;case 11:return r=n.type,a=n.pendingProps,_i(e,n,r,a=n.elementType===r?a:ti(r,a),t);case 7:return bi(e,n,n.pendingProps,t),n.child;case 8:case 12:return bi(e,n,n.pendingProps.children,t),n.child;case 10:e:{if(r=n.type._context,a=n.pendingProps,l=n.memoizedProps,i=a.value,Ia(Eo,r._currentValue),r._currentValue=i,null!==l)if(ir(l.value,i)){if(l.children===a.children&&!xa.current){n=Gi(e,n,t);break e}}else for(null!==(l=n.child)&&(l.return=n);null!==l;){var s=l.dependencies;if(null!==s){i=l.child;for(var u=s.firstContext;null!==u;){if(u.context===r){if(1===l.tag){(u=zo(-1,t&-t)).tag=2;var c=l.updateQueue;if(null!==c){var f=(c=c.shared).pending;null===f?u.next=u:(u.next=f.next,f.next=u),c.pending=u}}l.lanes|=t,null!==(u=l.alternate)&&(u.lanes|=t),xo(l.return,t,n),s.lanes|=t;break}u=u.next}}else if(10===l.tag)i=l.type===n.type?null:l.child;else if(18===l.tag){if(null===(i=l.return))throw Error(o(341));i.lanes|=t,null!==(s=i.alternate)&&(s.lanes|=t),xo(i,t,n),i=l.sibling}else i=l.child;if(null!==i)i.return=l;else for(i=l;null!==i;){if(i===n){i=null;break}if(null!==(l=i.sibling)){l.return=i.return,i=l;break}i=i.return}l=i}bi(e,n,a.children,t),n=n.child}return n;case 9:return a=n.type,r=n.pendingProps.children,To(n,t),r=r(a=No(a)),n.flags|=1,bi(e,n,r,t),n.child;case 14:return a=ti(r=n.type,n.pendingProps),Ci(e,n,r,a=ti(r.type,a),t);case 15:return Ei(e,n,n.type,n.pendingProps,t);case 17:return r=n.type,a=n.pendingProps,a=n.elementType===r?a:ti(r,a),Wi(e,n),n.tag=1,Pa(r)?(e=!0,Oa(n)):e=!1,To(n,t),li(n,r,a),si(n,r,a,t),Bi(null,n,r,!0,e,t);case 19:return ji(e,n,t);case 22:return wi(e,n,t)}throw Error(o(156,n.tag))};var $u="function"==typeof reportError?reportError:function(e){console.error(e)};function Xu(e){this._internalRoot=e}function Qu(e){this._internalRoot=e}function Ku(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Zu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function qu(){}function Ju(e,n,t,r,a){var o=t._reactRootContainer;if(o){var l=o;if("function"==typeof a){var i=a;a=function(){var e=Gu(l);i.call(e)}}Wu(n,l,e,a)}else l=function(e,n,t,r,a){if(a){if("function"==typeof r){var o=r;r=function(){var e=Gu(l);o.call(e)}}var l=ju(n,r,e,0,null,!1,0,"",qu);return e._reactRootContainer=l,e[ha]=l.current,jr(8===e.nodeType?e.parentNode:e),cu(),l}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof r){var i=r;r=function(){var e=Gu(s);i.call(e)}}var s=Uu(e,0,!1,null,0,!1,0,"",qu);return e._reactRootContainer=s,e[ha]=s.current,jr(8===e.nodeType?e.parentNode:e),cu((function(){Wu(n,s,t,r)})),s}(t,n,e,a,r);return Gu(l)}Qu.prototype.render=Xu.prototype.render=function(e){var n=this._internalRoot;if(null===n)throw Error(o(409));Wu(e,n,null,null)},Qu.prototype.unmount=Xu.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var n=e.containerInfo;cu((function(){Wu(null,e,null,null)})),n[ha]=null}},Qu.prototype.unstable_scheduleHydration=function(e){if(e){var n=kn();e={blockedOn:null,target:e,priority:n};for(var t=0;t<Mn.length&&0!==n&&n<Mn[t].priority;t++);Mn.splice(t,0,e),0===t&&Dn(e)}},Cn=function(e){switch(e.tag){case 3:var n=e.stateNode;if(n.current.memoizedState.isDehydrated){var t=dn(n.pendingLanes);0!==t&&(vn(n,1|t),ru(n,Ze()),!(6&Bs)&&(js=Ze()+500,ja()))}break;case 13:cu((function(){var n=Ro(e,1);if(null!==n){var t=eu();tu(n,e,1,t)}})),Yu(e,1)}},En=function(e){if(13===e.tag){var n=Ro(e,134217728);null!==n&&tu(n,e,134217728,eu()),Yu(e,134217728)}},wn=function(e){if(13===e.tag){var n=nu(e),t=Ro(e,n);null!==t&&tu(t,e,n,eu()),Yu(e,n)}},kn=function(){return bn},In=function(e,n){var t=bn;try{return bn=e,n()}finally{bn=t}},Ce=function(e,n,t){switch(n){case"input":if(q(e,t),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<t.length;n++){var r=t[n];if(r!==e&&r.form===e.form){var a=_a(r);if(!a)throw Error(o(90));$(r),q(r,a)}}}break;case"textarea":oe(e,t);break;case"select":null!=(n=t.value)&&te(e,!!t.multiple,n,!1)}},Be=uu,xe=cu;var ec={usingClientEntryPoint:!1,Events:[va,ba,_a,Ie,Se,uu]},nc={findFiberByHostInstance:ya,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},tc={bundleType:nc.bundleType,version:nc.version,rendererPackageName:nc.rendererPackageName,rendererConfig:nc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:b.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Ve(e))?null:e.stateNode},findFiberByHostInstance:nc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var rc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!rc.isDisabled&&rc.supportsFiber)try{an=rc.inject(tc),on=rc}catch(ce){}}n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ec,n.createPortal=function(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ku(n))throw Error(o(200));return function(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:C,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}}(e,n,null,t)},n.createRoot=function(e,n){if(!Ku(e))throw Error(o(299));var t=!1,r="",a=$u;return null!=n&&(!0===n.unstable_strictMode&&(t=!0),void 0!==n.identifierPrefix&&(r=n.identifierPrefix),void 0!==n.onRecoverableError&&(a=n.onRecoverableError)),n=Uu(e,1,!1,null,0,t,0,r,a),e[ha]=n.current,jr(8===e.nodeType?e.parentNode:e),new Xu(n)},n.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var n=e._reactInternals;if(void 0===n){if("function"==typeof e.render)throw Error(o(188));throw e=Object.keys(e).join(","),Error(o(268,e))}return null===(e=Ve(n))?null:e.stateNode},n.flushSync=function(e){return cu(e)},n.hydrate=function(e,n,t){if(!Zu(n))throw Error(o(200));return Ju(null,e,n,!0,t)},n.hydrateRoot=function(e,n,t){if(!Ku(e))throw Error(o(405));var r=null!=t&&t.hydratedSources||null,a=!1,l="",i=$u;if(null!=t&&(!0===t.unstable_strictMode&&(a=!0),void 0!==t.identifierPrefix&&(l=t.identifierPrefix),void 0!==t.onRecoverableError&&(i=t.onRecoverableError)),n=ju(n,null,e,1,null!=t?t:null,a,0,l,i),e[ha]=n.current,jr(e),r)for(e=0;e<r.length;e++)a=(a=(t=r[e])._getVersion)(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a);return new Qu(n)},n.render=function(e,n,t){if(!Zu(n))throw Error(o(200));return Ju(null,e,n,!1,t)},n.unmountComponentAtNode=function(e){if(!Zu(e))throw Error(o(40));return!!e._reactRootContainer&&(cu((function(){Ju(null,null,e,!1,(function(){e._reactRootContainer=null,e[ha]=null}))})),!0)},n.unstable_batchedUpdates=uu,n.unstable_renderSubtreeIntoContainer=function(e,n,t,r){if(!Zu(t))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return Ju(e,n,t,!1,r)},n.version="18.3.1-next-f1338f8080-20240426"},338:(e,n,t)=>{"use strict";var r=t(961);n.H=r.createRoot,r.hydrateRoot},961:(e,n,t)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=t(551)},799:(e,n)=>{"use strict";var t="function"==typeof Symbol&&Symbol.for,r=t?Symbol.for("react.element"):60103,a=t?Symbol.for("react.portal"):60106,o=t?Symbol.for("react.fragment"):60107,l=t?Symbol.for("react.strict_mode"):60108,i=t?Symbol.for("react.profiler"):60114,s=t?Symbol.for("react.provider"):60109,u=t?Symbol.for("react.context"):60110,c=t?Symbol.for("react.async_mode"):60111,f=t?Symbol.for("react.concurrent_mode"):60111,d=t?Symbol.for("react.forward_ref"):60112,p=t?Symbol.for("react.suspense"):60113,h=t?Symbol.for("react.suspense_list"):60120,m=t?Symbol.for("react.memo"):60115,A=t?Symbol.for("react.lazy"):60116,g=t?Symbol.for("react.block"):60121,y=t?Symbol.for("react.fundamental"):60117,v=t?Symbol.for("react.responder"):60118,b=t?Symbol.for("react.scope"):60119;function _(e){if("object"==typeof e&&null!==e){var n=e.$$typeof;switch(n){case r:switch(e=e.type){case c:case f:case o:case i:case l:case p:return e;default:switch(e=e&&e.$$typeof){case u:case d:case A:case m:case s:return e;default:return n}}case a:return n}}}function C(e){return _(e)===f}n.AsyncMode=c,n.ConcurrentMode=f,n.ContextConsumer=u,n.ContextProvider=s,n.Element=r,n.ForwardRef=d,n.Fragment=o,n.Lazy=A,n.Memo=m,n.Portal=a,n.Profiler=i,n.StrictMode=l,n.Suspense=p,n.isAsyncMode=function(e){return C(e)||_(e)===c},n.isConcurrentMode=C,n.isContextConsumer=function(e){return _(e)===u},n.isContextProvider=function(e){return _(e)===s},n.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},n.isForwardRef=function(e){return _(e)===d},n.isFragment=function(e){return _(e)===o},n.isLazy=function(e){return _(e)===A},n.isMemo=function(e){return _(e)===m},n.isPortal=function(e){return _(e)===a},n.isProfiler=function(e){return _(e)===i},n.isStrictMode=function(e){return _(e)===l},n.isSuspense=function(e){return _(e)===p},n.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===o||e===f||e===i||e===l||e===p||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===A||e.$$typeof===m||e.$$typeof===s||e.$$typeof===u||e.$$typeof===d||e.$$typeof===y||e.$$typeof===v||e.$$typeof===b||e.$$typeof===g)},n.typeOf=_},363:(e,n,t)=>{"use strict";e.exports=t(799)},287:(e,n)=>{"use strict";var t=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),o=Symbol.for("react.strict_mode"),l=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),s=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),f=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator,h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,A={};function g(e,n,t){this.props=e,this.context=n,this.refs=A,this.updater=t||h}function y(){}function v(e,n,t){this.props=e,this.context=n,this.refs=A,this.updater=t||h}g.prototype.isReactComponent={},g.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,n,"setState")},g.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=g.prototype;var b=v.prototype=new y;b.constructor=v,m(b,g.prototype),b.isPureReactComponent=!0;var _=Array.isArray,C=Object.prototype.hasOwnProperty,E={current:null},w={key:!0,ref:!0,__self:!0,__source:!0};function k(e,n,r){var a,o={},l=null,i=null;if(null!=n)for(a in void 0!==n.ref&&(i=n.ref),void 0!==n.key&&(l=""+n.key),n)C.call(n,a)&&!w.hasOwnProperty(a)&&(o[a]=n[a]);var s=arguments.length-2;if(1===s)o.children=r;else if(1<s){for(var u=Array(s),c=0;c<s;c++)u[c]=arguments[c+2];o.children=u}if(e&&e.defaultProps)for(a in s=e.defaultProps)void 0===o[a]&&(o[a]=s[a]);return{$$typeof:t,type:e,key:l,ref:i,props:o,_owner:E.current}}function I(e){return"object"==typeof e&&null!==e&&e.$$typeof===t}var S=/\/+/g;function B(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return n[e]}))}(""+e.key):n.toString(36)}function x(e,n,a,o,l){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var s=!1;if(null===e)s=!0;else switch(i){case"string":case"number":s=!0;break;case"object":switch(e.$$typeof){case t:case r:s=!0}}if(s)return l=l(s=e),e=""===o?"."+B(s,0):o,_(l)?(a="",null!=e&&(a=e.replace(S,"$&/")+"/"),x(l,n,a,"",(function(e){return e}))):null!=l&&(I(l)&&(l=function(e,n){return{$$typeof:t,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(l,a+(!l.key||s&&s.key===l.key?"":(""+l.key).replace(S,"$&/")+"/")+e)),n.push(l)),1;if(s=0,o=""===o?".":o+":",_(e))for(var u=0;u<e.length;u++){var c=o+B(i=e[u],u);s+=x(i,n,a,c,l)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),u=0;!(i=e.next()).done;)s+=x(i=i.value,n,a,c=o+B(i,u++),l);else if("object"===i)throw n=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n)+"). If you meant to render a collection of children, use an array instead.");return s}function T(e,n,t){if(null==e)return e;var r=[],a=0;return x(e,r,"","",(function(e){return n.call(t,e,a++)})),r}function N(e){if(-1===e._status){var n=e._result;(n=n()).then((function(n){0!==e._status&&-1!==e._status||(e._status=1,e._result=n)}),(function(n){0!==e._status&&-1!==e._status||(e._status=2,e._result=n)})),-1===e._status&&(e._status=0,e._result=n)}if(1===e._status)return e._result.default;throw e._result}var P={current:null},L={transition:null},M={ReactCurrentDispatcher:P,ReactCurrentBatchConfig:L,ReactCurrentOwner:E};function R(){throw Error("act(...) is not supported in production builds of React.")}n.Children={map:T,forEach:function(e,n,t){T(e,(function(){n.apply(this,arguments)}),t)},count:function(e){var n=0;return T(e,(function(){n++})),n},toArray:function(e){return T(e,(function(e){return e}))||[]},only:function(e){if(!I(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n.Component=g,n.Fragment=a,n.Profiler=l,n.PureComponent=v,n.StrictMode=o,n.Suspense=c,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=M,n.act=R,n.cloneElement=function(e,n,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=m({},e.props),o=e.key,l=e.ref,i=e._owner;if(null!=n){if(void 0!==n.ref&&(l=n.ref,i=E.current),void 0!==n.key&&(o=""+n.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(u in n)C.call(n,u)&&!w.hasOwnProperty(u)&&(a[u]=void 0===n[u]&&void 0!==s?s[u]:n[u])}var u=arguments.length-2;if(1===u)a.children=r;else if(1<u){s=Array(u);for(var c=0;c<u;c++)s[c]=arguments[c+2];a.children=s}return{$$typeof:t,type:e.type,key:o,ref:l,props:a,_owner:i}},n.createContext=function(e){return(e={$$typeof:s,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},n.createElement=k,n.createFactory=function(e){var n=k.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:u,render:e}},n.isValidElement=I,n.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:N}},n.memo=function(e,n){return{$$typeof:f,type:e,compare:void 0===n?null:n}},n.startTransition=function(e){var n=L.transition;L.transition={};try{e()}finally{L.transition=n}},n.unstable_act=R,n.useCallback=function(e,n){return P.current.useCallback(e,n)},n.useContext=function(e){return P.current.useContext(e)},n.useDebugValue=function(){},n.useDeferredValue=function(e){return P.current.useDeferredValue(e)},n.useEffect=function(e,n){return P.current.useEffect(e,n)},n.useId=function(){return P.current.useId()},n.useImperativeHandle=function(e,n,t){return P.current.useImperativeHandle(e,n,t)},n.useInsertionEffect=function(e,n){return P.current.useInsertionEffect(e,n)},n.useLayoutEffect=function(e,n){return P.current.useLayoutEffect(e,n)},n.useMemo=function(e,n){return P.current.useMemo(e,n)},n.useReducer=function(e,n,t){return P.current.useReducer(e,n,t)},n.useRef=function(e){return P.current.useRef(e)},n.useState=function(e){return P.current.useState(e)},n.useSyncExternalStore=function(e,n,t){return P.current.useSyncExternalStore(e,n,t)},n.useTransition=function(){return P.current.useTransition()},n.version="18.3.1"},540:(e,n,t)=>{"use strict";e.exports=t(287)},463:(e,n)=>{"use strict";function t(e,n){var t=e.length;e.push(n);e:for(;0<t;){var r=t-1>>>1,a=e[r];if(!(0<o(a,n)))break e;e[r]=n,e[t]=a,t=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var n=e[0],t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,a=e.length,l=a>>>1;r<l;){var i=2*(r+1)-1,s=e[i],u=i+1,c=e[u];if(0>o(s,t))u<a&&0>o(c,s)?(e[r]=c,e[u]=t,r=u):(e[r]=s,e[i]=t,r=i);else{if(!(u<a&&0>o(c,t)))break e;e[r]=c,e[u]=t,r=u}}}return n}function o(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}if("object"==typeof performance&&"function"==typeof performance.now){var l=performance;n.unstable_now=function(){return l.now()}}else{var i=Date,s=i.now();n.unstable_now=function(){return i.now()-s}}var u=[],c=[],f=1,d=null,p=3,h=!1,m=!1,A=!1,g="function"==typeof setTimeout?setTimeout:null,y="function"==typeof clearTimeout?clearTimeout:null,v="undefined"!=typeof setImmediate?setImmediate:null;function b(e){for(var n=r(c);null!==n;){if(null===n.callback)a(c);else{if(!(n.startTime<=e))break;a(c),n.sortIndex=n.expirationTime,t(u,n)}n=r(c)}}function _(e){if(A=!1,b(e),!m)if(null!==r(u))m=!0,L(C);else{var n=r(c);null!==n&&M(_,n.startTime-e)}}function C(e,t){m=!1,A&&(A=!1,y(I),I=-1),h=!0;var o=p;try{for(b(t),d=r(u);null!==d&&(!(d.expirationTime>t)||e&&!x());){var l=d.callback;if("function"==typeof l){d.callback=null,p=d.priorityLevel;var i=l(d.expirationTime<=t);t=n.unstable_now(),"function"==typeof i?d.callback=i:d===r(u)&&a(u),b(t)}else a(u);d=r(u)}if(null!==d)var s=!0;else{var f=r(c);null!==f&&M(_,f.startTime-t),s=!1}return s}finally{d=null,p=o,h=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var E,w=!1,k=null,I=-1,S=5,B=-1;function x(){return!(n.unstable_now()-B<S)}function T(){if(null!==k){var e=n.unstable_now();B=e;var t=!0;try{t=k(!0,e)}finally{t?E():(w=!1,k=null)}}else w=!1}if("function"==typeof v)E=function(){v(T)};else if("undefined"!=typeof MessageChannel){var N=new MessageChannel,P=N.port2;N.port1.onmessage=T,E=function(){P.postMessage(null)}}else E=function(){g(T,0)};function L(e){k=e,w||(w=!0,E())}function M(e,t){I=g((function(){e(n.unstable_now())}),t)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){m||h||(m=!0,L(C))},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):S=0<e?Math.floor(1e3/e):5},n.unstable_getCurrentPriorityLevel=function(){return p},n.unstable_getFirstCallbackNode=function(){return r(u)},n.unstable_next=function(e){switch(p){case 1:case 2:case 3:var n=3;break;default:n=p}var t=p;p=n;try{return e()}finally{p=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=p;p=e;try{return n()}finally{p=t}},n.unstable_scheduleCallback=function(e,a,o){var l=n.unstable_now();switch(o="object"==typeof o&&null!==o&&"number"==typeof(o=o.delay)&&0<o?l+o:l,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:f++,callback:a,priorityLevel:e,startTime:o,expirationTime:i=o+i,sortIndex:-1},o>l?(e.sortIndex=o,t(c,e),null===r(u)&&e===r(c)&&(A?(y(I),I=-1):A=!0,M(_,o-l))):(e.sortIndex=i,t(u,e),m||h||(m=!0,L(C))),e},n.unstable_shouldYield=x,n.unstable_wrapCallback=function(e){var n=p;return function(){var t=p;p=n;try{return e.apply(this,arguments)}finally{p=t}}}},982:(e,n,t)=>{"use strict";e.exports=t(463)},72:e=>{"use strict";var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},l=[],i=0;i<e.length;i++){var s=e[i],u=r.base?s[0]+r.base:s[0],c=o[u]||0,f="".concat(u," ").concat(c);o[u]=c+1;var d=t(f),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)n[d].references++,n[d].updater(p);else{var h=a(p,r);r.byIndex=i,n.splice(i,0,{identifier:f,updater:h,references:1})}l.push(f)}return l}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var l=0;l<o.length;l++){var i=t(o[l]);n[i].references--}for(var s=r(e,a),u=0;u<o.length;u++){var c=t(o[u]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}o=s}}},659:e=>{"use strict";var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},159:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},942:(e,n)=>{var t;!function(){"use strict";var r={}.hasOwnProperty;function a(){for(var e="",n=0;n<arguments.length;n++){var t=arguments[n];t&&(e=l(e,o(t)))}return e}function o(e){if("string"==typeof e||"number"==typeof e)return e;if("object"!=typeof e)return"";if(Array.isArray(e))return a.apply(null,e);if(e.toString!==Object.prototype.toString&&!e.toString.toString().includes("[native code]"))return e.toString();var n="";for(var t in e)r.call(e,t)&&e[t]&&(n=l(n,t));return n}function l(e,n){return n?e?e+" "+n:e+n:e}e.exports?(a.default=a,e.exports=a):void 0===(t=function(){return a}.apply(n,[]))||(e.exports=t)}()}},o={};function l(e){var n=o[e];if(void 0!==n)return n.exports;var t=o[e]={id:e,exports:{}};return a[e](t,t.exports,l),t.exports}l.m=a,l.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return l.d(n,{a:n}),n},n=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,l.t=function(t,r){if(1&r&&(t=this(t)),8&r)return t;if("object"==typeof t&&t){if(4&r&&t.__esModule)return t;if(16&r&&"function"==typeof t.then)return t}var a=Object.create(null);l.r(a);var o={};e=e||[null,n({}),n([]),n(n)];for(var i=2&r&&t;"object"==typeof i&&!~e.indexOf(i);i=n(i))Object.getOwnPropertyNames(i).forEach((e=>o[e]=()=>t[e]));return o.default=()=>t,l.d(a,o),a},l.d=(e,n)=>{for(var t in n)l.o(n,t)&&!l.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},l.f={},l.e=e=>Promise.all(Object.keys(l.f).reduce(((n,t)=>(l.f[t](e,n),n)),[])),l.u=e=>e+".js",l.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),l.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t={},r="periodic-table:",l.l=(e,n,a,o)=>{if(t[e])t[e].push(n);else{var i,s;if(void 0!==a)for(var u=document.getElementsByTagName("script"),c=0;c<u.length;c++){var f=u[c];if(f.getAttribute("src")==e||f.getAttribute("data-webpack")==r+a){i=f;break}}i||(s=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,l.nc&&i.setAttribute("nonce",l.nc),i.setAttribute("data-webpack",r+a),i.src=e),t[e]=[n];var d=(n,r)=>{i.onerror=i.onload=null,clearTimeout(p);var a=t[e];if(delete t[e],i.parentNode&&i.parentNode.removeChild(i),a&&a.forEach((e=>e(r))),n)return n(r)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=d.bind(null,i.onerror),i.onload=d.bind(null,i.onload),s&&document.head.appendChild(i)}},l.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;l.g.importScripts&&(e=l.g.location+"");var n=l.g.document;if(!e&&n&&(n.currentScript&&"SCRIPT"===n.currentScript.tagName.toUpperCase()&&(e=n.currentScript.src),!e)){var t=n.getElementsByTagName("script");if(t.length)for(var r=t.length-1;r>-1&&(!e||!/^http(s?):/.test(e));)e=t[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),l.p=e})(),(()=>{var e={23:0};l.f.j=(n,t)=>{var r=l.o(e,n)?e[n]:void 0;if(0!==r)if(r)t.push(r[2]);else{var a=new Promise(((t,a)=>r=e[n]=[t,a]));t.push(r[2]=a);var o=l.p+l.u(n),i=new Error;l.l(o,(t=>{if(l.o(e,n)&&(0!==(r=e[n])&&(e[n]=void 0),r)){var a=t&&("load"===t.type?"missing":t.type),o=t&&t.target&&t.target.src;i.message="Loading chunk "+n+" failed.\n("+a+": "+o+")",i.name="ChunkLoadError",i.type=a,i.request=o,r[1](i)}}),"chunk-"+n,n)}};var n=(n,t)=>{var r,a,[o,i,s]=t,u=0;if(o.some((n=>0!==e[n]))){for(r in i)l.o(i,r)&&(l.m[r]=i[r]);s&&s(l)}for(n&&n(t);u<o.length;u++)a=o[u],l.o(e,a)&&e[a]&&e[a][0](),e[a]=0},t=self.webpackChunkperiodic_table=self.webpackChunkperiodic_table||[];t.forEach(n.bind(null,0)),t.push=n.bind(null,t.push.bind(t))})(),l.nc=void 0,(()=>{"use strict";var e=l(540),n=l(338),t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])},t(e,n)};function r(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}var a=function(){return a=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e},a.apply(this,arguments)};function o(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)n.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(t[r[a]]=e[r[a]])}return t}function i(e,n,t){if(t||2===arguments.length)for(var r,a=0,o=n.length;a<o;a++)!r&&a in n||(r||(r=Array.prototype.slice.call(n,0,a)),r[a]=n[a]);return e.concat(r||Array.prototype.slice.call(n))}function s(e,n){var t=n&&n.cache?n.cache:y,r=n&&n.serializer?n.serializer:p;return(n&&n.strategy?n.strategy:d)(e,{cache:t,serializer:r})}function u(e,n,t,r){var a,o=null==(a=r)||"number"==typeof a||"boolean"==typeof a?r:t(r),l=n.get(o);return void 0===l&&(l=e.call(this,r),n.set(o,l)),l}function c(e,n,t){var r=Array.prototype.slice.call(arguments,3),a=t(r),o=n.get(a);return void 0===o&&(o=e.apply(this,r),n.set(a,o)),o}function f(e,n,t,r,a){return t.bind(n,e,r,a)}function d(e,n){return f(e,this,1===e.length?u:c,n.cache.create(),n.serializer)}Object.create,Object.create,"function"==typeof SuppressedError&&SuppressedError;var p=function(){return JSON.stringify(arguments)};function h(){this.cache=Object.create(null)}h.prototype.get=function(e){return this.cache[e]},h.prototype.set=function(e,n){this.cache[e]=n};var m,A,g,y={create:function(){return new h}},v={variadic:function(e,n){return f(e,this,c,n.cache.create(),n.serializer)},monadic:function(e,n){return f(e,this,u,n.cache.create(),n.serializer)}};function b(e,n,t){if(void 0===t&&(t=Error),!e)throw new t(n)}function _(e){return e.type===A.literal}function C(e){return e.type===A.argument}function E(e){return e.type===A.number}function w(e){return e.type===A.date}function k(e){return e.type===A.time}function I(e){return e.type===A.select}function S(e){return e.type===A.plural}function B(e){return e.type===A.pound}function x(e){return e.type===A.tag}function T(e){return!(!e||"object"!=typeof e||e.type!==g.number)}function N(e){return!(!e||"object"!=typeof e||e.type!==g.dateTime)}s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.NumberFormat).bind.apply(e,i([void 0],n,!1)))}),{strategy:v.variadic}),s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.DateTimeFormat).bind.apply(e,i([void 0],n,!1)))}),{strategy:v.variadic}),s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.PluralRules).bind.apply(e,i([void 0],n,!1)))}),{strategy:v.variadic}),s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.Locale).bind.apply(e,i([void 0],n,!1)))}),{strategy:v.variadic}),s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.ListFormat).bind.apply(e,i([void 0],n,!1)))}),{strategy:v.variadic}),function(e){e[e.EXPECT_ARGUMENT_CLOSING_BRACE=1]="EXPECT_ARGUMENT_CLOSING_BRACE",e[e.EMPTY_ARGUMENT=2]="EMPTY_ARGUMENT",e[e.MALFORMED_ARGUMENT=3]="MALFORMED_ARGUMENT",e[e.EXPECT_ARGUMENT_TYPE=4]="EXPECT_ARGUMENT_TYPE",e[e.INVALID_ARGUMENT_TYPE=5]="INVALID_ARGUMENT_TYPE",e[e.EXPECT_ARGUMENT_STYLE=6]="EXPECT_ARGUMENT_STYLE",e[e.INVALID_NUMBER_SKELETON=7]="INVALID_NUMBER_SKELETON",e[e.INVALID_DATE_TIME_SKELETON=8]="INVALID_DATE_TIME_SKELETON",e[e.EXPECT_NUMBER_SKELETON=9]="EXPECT_NUMBER_SKELETON",e[e.EXPECT_DATE_TIME_SKELETON=10]="EXPECT_DATE_TIME_SKELETON",e[e.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE=11]="UNCLOSED_QUOTE_IN_ARGUMENT_STYLE",e[e.EXPECT_SELECT_ARGUMENT_OPTIONS=12]="EXPECT_SELECT_ARGUMENT_OPTIONS",e[e.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE=13]="EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE",e[e.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE=14]="INVALID_PLURAL_ARGUMENT_OFFSET_VALUE",e[e.EXPECT_SELECT_ARGUMENT_SELECTOR=15]="EXPECT_SELECT_ARGUMENT_SELECTOR",e[e.EXPECT_PLURAL_ARGUMENT_SELECTOR=16]="EXPECT_PLURAL_ARGUMENT_SELECTOR",e[e.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT=17]="EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT",e[e.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT=18]="EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT",e[e.INVALID_PLURAL_ARGUMENT_SELECTOR=19]="INVALID_PLURAL_ARGUMENT_SELECTOR",e[e.DUPLICATE_PLURAL_ARGUMENT_SELECTOR=20]="DUPLICATE_PLURAL_ARGUMENT_SELECTOR",e[e.DUPLICATE_SELECT_ARGUMENT_SELECTOR=21]="DUPLICATE_SELECT_ARGUMENT_SELECTOR",e[e.MISSING_OTHER_CLAUSE=22]="MISSING_OTHER_CLAUSE",e[e.INVALID_TAG=23]="INVALID_TAG",e[e.INVALID_TAG_NAME=25]="INVALID_TAG_NAME",e[e.UNMATCHED_CLOSING_TAG=26]="UNMATCHED_CLOSING_TAG",e[e.UNCLOSED_TAG=27]="UNCLOSED_TAG"}(m||(m={})),function(e){e[e.literal=0]="literal",e[e.argument=1]="argument",e[e.number=2]="number",e[e.date=3]="date",e[e.time=4]="time",e[e.select=5]="select",e[e.plural=6]="plural",e[e.pound=7]="pound",e[e.tag=8]="tag"}(A||(A={})),function(e){e[e.number=0]="number",e[e.dateTime=1]="dateTime"}(g||(g={}));var P=/[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/,L=/(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;function M(e){var n={};return e.replace(L,(function(e){var t=e.length;switch(e[0]){case"G":n.era=4===t?"long":5===t?"narrow":"short";break;case"y":n.year=2===t?"2-digit":"numeric";break;case"Y":case"u":case"U":case"r":throw new RangeError("`Y/u/U/r` (year) patterns are not supported, use `y` instead");case"q":case"Q":throw new RangeError("`q/Q` (quarter) patterns are not supported");case"M":case"L":n.month=["numeric","2-digit","short","long","narrow"][t-1];break;case"w":case"W":throw new RangeError("`w/W` (week) patterns are not supported");case"d":n.day=["numeric","2-digit"][t-1];break;case"D":case"F":case"g":throw new RangeError("`D/F/g` (day) patterns are not supported, use `d` instead");case"E":n.weekday=4===t?"long":5===t?"narrow":"short";break;case"e":if(t<4)throw new RangeError("`e..eee` (weekday) patterns are not supported");n.weekday=["short","long","narrow","short"][t-4];break;case"c":if(t<4)throw new RangeError("`c..ccc` (weekday) patterns are not supported");n.weekday=["short","long","narrow","short"][t-4];break;case"a":n.hour12=!0;break;case"b":case"B":throw new RangeError("`b/B` (period) patterns are not supported, use `a` instead");case"h":n.hourCycle="h12",n.hour=["numeric","2-digit"][t-1];break;case"H":n.hourCycle="h23",n.hour=["numeric","2-digit"][t-1];break;case"K":n.hourCycle="h11",n.hour=["numeric","2-digit"][t-1];break;case"k":n.hourCycle="h24",n.hour=["numeric","2-digit"][t-1];break;case"j":case"J":case"C":throw new RangeError("`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead");case"m":n.minute=["numeric","2-digit"][t-1];break;case"s":n.second=["numeric","2-digit"][t-1];break;case"S":case"A":throw new RangeError("`S/A` (second) patterns are not supported, use `s` instead");case"z":n.timeZoneName=t<4?"short":"long";break;case"Z":case"O":case"v":case"V":case"X":case"x":throw new RangeError("`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead")}return""})),n}var R=/[\t-\r \x85\u200E\u200F\u2028\u2029]/i,O=/^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g,H=/^(@+)?(\+|#+)?[rs]?$/g,D=/(\*)(0+)|(#+)(0+)|(0+)/g,z=/^(0+)$/;function U(e){var n={};return"r"===e[e.length-1]?n.roundingPriority="morePrecision":"s"===e[e.length-1]&&(n.roundingPriority="lessPrecision"),e.replace(H,(function(e,t,r){return"string"!=typeof r?(n.minimumSignificantDigits=t.length,n.maximumSignificantDigits=t.length):"+"===r?n.minimumSignificantDigits=t.length:"#"===t[0]?n.maximumSignificantDigits=t.length:(n.minimumSignificantDigits=t.length,n.maximumSignificantDigits=t.length+("string"==typeof r?r.length:0)),""})),n}function F(e){switch(e){case"sign-auto":return{signDisplay:"auto"};case"sign-accounting":case"()":return{currencySign:"accounting"};case"sign-always":case"+!":return{signDisplay:"always"};case"sign-accounting-always":case"()!":return{signDisplay:"always",currencySign:"accounting"};case"sign-except-zero":case"+?":return{signDisplay:"exceptZero"};case"sign-accounting-except-zero":case"()?":return{signDisplay:"exceptZero",currencySign:"accounting"};case"sign-never":case"+_":return{signDisplay:"never"}}}function j(e){var n;if("E"===e[0]&&"E"===e[1]?(n={notation:"engineering"},e=e.slice(2)):"E"===e[0]&&(n={notation:"scientific"},e=e.slice(1)),n){var t=e.slice(0,2);if("+!"===t?(n.signDisplay="always",e=e.slice(2)):"+?"===t&&(n.signDisplay="exceptZero",e=e.slice(2)),!z.test(e))throw new Error("Malformed concise eng/scientific notation");n.minimumIntegerDigits=e.length}return n}function W(e){return F(e)||{}}function G(e){for(var n={},t=0,r=e;t<r.length;t++){var o=r[t];switch(o.stem){case"percent":case"%":n.style="percent";continue;case"%x100":n.style="percent",n.scale=100;continue;case"currency":n.style="currency",n.currency=o.options[0];continue;case"group-off":case",_":n.useGrouping=!1;continue;case"precision-integer":case".":n.maximumFractionDigits=0;continue;case"measure-unit":case"unit":n.style="unit",n.unit=o.options[0].replace(/^(.*?)-/,"");continue;case"compact-short":case"K":n.notation="compact",n.compactDisplay="short";continue;case"compact-long":case"KK":n.notation="compact",n.compactDisplay="long";continue;case"scientific":n=a(a(a({},n),{notation:"scientific"}),o.options.reduce((function(e,n){return a(a({},e),W(n))}),{}));continue;case"engineering":n=a(a(a({},n),{notation:"engineering"}),o.options.reduce((function(e,n){return a(a({},e),W(n))}),{}));continue;case"notation-simple":n.notation="standard";continue;case"unit-width-narrow":n.currencyDisplay="narrowSymbol",n.unitDisplay="narrow";continue;case"unit-width-short":n.currencyDisplay="code",n.unitDisplay="short";continue;case"unit-width-full-name":n.currencyDisplay="name",n.unitDisplay="long";continue;case"unit-width-iso-code":n.currencyDisplay="symbol";continue;case"scale":n.scale=parseFloat(o.options[0]);continue;case"rounding-mode-floor":n.roundingMode="floor";continue;case"rounding-mode-ceiling":n.roundingMode="ceil";continue;case"rounding-mode-down":n.roundingMode="trunc";continue;case"rounding-mode-up":n.roundingMode="expand";continue;case"rounding-mode-half-even":n.roundingMode="halfEven";continue;case"rounding-mode-half-down":n.roundingMode="halfTrunc";continue;case"rounding-mode-half-up":n.roundingMode="halfExpand";continue;case"integer-width":if(o.options.length>1)throw new RangeError("integer-width stems only accept a single optional option");o.options[0].replace(D,(function(e,t,r,a,o,l){if(t)n.minimumIntegerDigits=r.length;else{if(a&&o)throw new Error("We currently do not support maximum integer digits");if(l)throw new Error("We currently do not support exact integer digits")}return""}));continue}if(z.test(o.stem))n.minimumIntegerDigits=o.stem.length;else if(O.test(o.stem)){if(o.options.length>1)throw new RangeError("Fraction-precision stems only accept a single optional option");o.stem.replace(O,(function(e,t,r,a,o,l){return"*"===r?n.minimumFractionDigits=t.length:a&&"#"===a[0]?n.maximumFractionDigits=a.length:o&&l?(n.minimumFractionDigits=o.length,n.maximumFractionDigits=o.length+l.length):(n.minimumFractionDigits=t.length,n.maximumFractionDigits=t.length),""}));var l=o.options[0];"w"===l?n=a(a({},n),{trailingZeroDisplay:"stripIfInteger"}):l&&(n=a(a({},n),U(l)))}else if(H.test(o.stem))n=a(a({},n),U(o.stem));else{var i=F(o.stem);i&&(n=a(a({},n),i));var s=j(o.stem);s&&(n=a(a({},n),s))}}return n}var V,Y={"001":["H","h"],419:["h","H","hB","hb"],AC:["H","h","hb","hB"],AD:["H","hB"],AE:["h","hB","hb","H"],AF:["H","hb","hB","h"],AG:["h","hb","H","hB"],AI:["H","h","hb","hB"],AL:["h","H","hB"],AM:["H","hB"],AO:["H","hB"],AR:["h","H","hB","hb"],AS:["h","H"],AT:["H","hB"],AU:["h","hb","H","hB"],AW:["H","hB"],AX:["H"],AZ:["H","hB","h"],BA:["H","hB","h"],BB:["h","hb","H","hB"],BD:["h","hB","H"],BE:["H","hB"],BF:["H","hB"],BG:["H","hB","h"],BH:["h","hB","hb","H"],BI:["H","h"],BJ:["H","hB"],BL:["H","hB"],BM:["h","hb","H","hB"],BN:["hb","hB","h","H"],BO:["h","H","hB","hb"],BQ:["H"],BR:["H","hB"],BS:["h","hb","H","hB"],BT:["h","H"],BW:["H","h","hb","hB"],BY:["H","h"],BZ:["H","h","hb","hB"],CA:["h","hb","H","hB"],CC:["H","h","hb","hB"],CD:["hB","H"],CF:["H","h","hB"],CG:["H","hB"],CH:["H","hB","h"],CI:["H","hB"],CK:["H","h","hb","hB"],CL:["h","H","hB","hb"],CM:["H","h","hB"],CN:["H","hB","hb","h"],CO:["h","H","hB","hb"],CP:["H"],CR:["h","H","hB","hb"],CU:["h","H","hB","hb"],CV:["H","hB"],CW:["H","hB"],CX:["H","h","hb","hB"],CY:["h","H","hb","hB"],CZ:["H"],DE:["H","hB"],DG:["H","h","hb","hB"],DJ:["h","H"],DK:["H"],DM:["h","hb","H","hB"],DO:["h","H","hB","hb"],DZ:["h","hB","hb","H"],EA:["H","h","hB","hb"],EC:["h","H","hB","hb"],EE:["H","hB"],EG:["h","hB","hb","H"],EH:["h","hB","hb","H"],ER:["h","H"],ES:["H","hB","h","hb"],ET:["hB","hb","h","H"],FI:["H"],FJ:["h","hb","H","hB"],FK:["H","h","hb","hB"],FM:["h","hb","H","hB"],FO:["H","h"],FR:["H","hB"],GA:["H","hB"],GB:["H","h","hb","hB"],GD:["h","hb","H","hB"],GE:["H","hB","h"],GF:["H","hB"],GG:["H","h","hb","hB"],GH:["h","H"],GI:["H","h","hb","hB"],GL:["H","h"],GM:["h","hb","H","hB"],GN:["H","hB"],GP:["H","hB"],GQ:["H","hB","h","hb"],GR:["h","H","hb","hB"],GT:["h","H","hB","hb"],GU:["h","hb","H","hB"],GW:["H","hB"],GY:["h","hb","H","hB"],HK:["h","hB","hb","H"],HN:["h","H","hB","hb"],HR:["H","hB"],HU:["H","h"],IC:["H","h","hB","hb"],ID:["H"],IE:["H","h","hb","hB"],IL:["H","hB"],IM:["H","h","hb","hB"],IN:["h","H"],IO:["H","h","hb","hB"],IQ:["h","hB","hb","H"],IR:["hB","H"],IS:["H"],IT:["H","hB"],JE:["H","h","hb","hB"],JM:["h","hb","H","hB"],JO:["h","hB","hb","H"],JP:["H","K","h"],KE:["hB","hb","H","h"],KG:["H","h","hB","hb"],KH:["hB","h","H","hb"],KI:["h","hb","H","hB"],KM:["H","h","hB","hb"],KN:["h","hb","H","hB"],KP:["h","H","hB","hb"],KR:["h","H","hB","hb"],KW:["h","hB","hb","H"],KY:["h","hb","H","hB"],KZ:["H","hB"],LA:["H","hb","hB","h"],LB:["h","hB","hb","H"],LC:["h","hb","H","hB"],LI:["H","hB","h"],LK:["H","h","hB","hb"],LR:["h","hb","H","hB"],LS:["h","H"],LT:["H","h","hb","hB"],LU:["H","h","hB"],LV:["H","hB","hb","h"],LY:["h","hB","hb","H"],MA:["H","h","hB","hb"],MC:["H","hB"],MD:["H","hB"],ME:["H","hB","h"],MF:["H","hB"],MG:["H","h"],MH:["h","hb","H","hB"],MK:["H","h","hb","hB"],ML:["H"],MM:["hB","hb","H","h"],MN:["H","h","hb","hB"],MO:["h","hB","hb","H"],MP:["h","hb","H","hB"],MQ:["H","hB"],MR:["h","hB","hb","H"],MS:["H","h","hb","hB"],MT:["H","h"],MU:["H","h"],MV:["H","h"],MW:["h","hb","H","hB"],MX:["h","H","hB","hb"],MY:["hb","hB","h","H"],MZ:["H","hB"],NA:["h","H","hB","hb"],NC:["H","hB"],NE:["H"],NF:["H","h","hb","hB"],NG:["H","h","hb","hB"],NI:["h","H","hB","hb"],NL:["H","hB"],NO:["H","h"],NP:["H","h","hB"],NR:["H","h","hb","hB"],NU:["H","h","hb","hB"],NZ:["h","hb","H","hB"],OM:["h","hB","hb","H"],PA:["h","H","hB","hb"],PE:["h","H","hB","hb"],PF:["H","h","hB"],PG:["h","H"],PH:["h","hB","hb","H"],PK:["h","hB","H"],PL:["H","h"],PM:["H","hB"],PN:["H","h","hb","hB"],PR:["h","H","hB","hb"],PS:["h","hB","hb","H"],PT:["H","hB"],PW:["h","H"],PY:["h","H","hB","hb"],QA:["h","hB","hb","H"],RE:["H","hB"],RO:["H","hB"],RS:["H","hB","h"],RU:["H"],RW:["H","h"],SA:["h","hB","hb","H"],SB:["h","hb","H","hB"],SC:["H","h","hB"],SD:["h","hB","hb","H"],SE:["H"],SG:["h","hb","H","hB"],SH:["H","h","hb","hB"],SI:["H","hB"],SJ:["H"],SK:["H"],SL:["h","hb","H","hB"],SM:["H","h","hB"],SN:["H","h","hB"],SO:["h","H"],SR:["H","hB"],SS:["h","hb","H","hB"],ST:["H","hB"],SV:["h","H","hB","hb"],SX:["H","h","hb","hB"],SY:["h","hB","hb","H"],SZ:["h","hb","H","hB"],TA:["H","h","hb","hB"],TC:["h","hb","H","hB"],TD:["h","H","hB"],TF:["H","h","hB"],TG:["H","hB"],TH:["H","h"],TJ:["H","h"],TL:["H","hB","hb","h"],TM:["H","h"],TN:["h","hB","hb","H"],TO:["h","H"],TR:["H","hB"],TT:["h","hb","H","hB"],TW:["hB","hb","h","H"],TZ:["hB","hb","H","h"],UA:["H","hB","h"],UG:["hB","hb","H","h"],UM:["h","hb","H","hB"],US:["h","hb","H","hB"],UY:["h","H","hB","hb"],UZ:["H","hB","h"],VA:["H","h","hB"],VC:["h","hb","H","hB"],VE:["h","H","hB","hb"],VG:["h","hb","H","hB"],VI:["h","hb","H","hB"],VN:["H","h"],VU:["h","H"],WF:["H","hB"],WS:["h","H"],XK:["H","hB","h"],YE:["h","hB","hb","H"],YT:["H","hB"],ZA:["H","h","hb","hB"],ZM:["h","hb","H","hB"],ZW:["H","h"],"af-ZA":["H","h","hB","hb"],"ar-001":["h","hB","hb","H"],"ca-ES":["H","h","hB"],"en-001":["h","hb","H","hB"],"en-HK":["h","hb","H","hB"],"en-IL":["H","h","hb","hB"],"en-MY":["h","hb","H","hB"],"es-BR":["H","h","hB","hb"],"es-ES":["H","h","hB","hb"],"es-GQ":["H","h","hB","hb"],"fr-CA":["H","h","hB"],"gl-ES":["H","h","hB"],"gu-IN":["hB","hb","h","H"],"hi-IN":["hB","h","H"],"it-CH":["H","h","hB"],"it-IT":["H","h","hB"],"kn-IN":["hB","h","H"],"ml-IN":["hB","h","H"],"mr-IN":["hB","hb","h","H"],"pa-IN":["hB","hb","h","H"],"ta-IN":["hB","h","hb","H"],"te-IN":["hB","h","H"],"zu-ZA":["H","hB","hb","h"]};function $(e){var n=e.hourCycle;if(void 0===n&&e.hourCycles&&e.hourCycles.length&&(n=e.hourCycles[0]),n)switch(n){case"h24":return"k";case"h23":return"H";case"h12":return"h";case"h11":return"K";default:throw new Error("Invalid hourCycle")}var t,r=e.language;return"root"!==r&&(t=e.maximize().region),(Y[t||""]||Y[r||""]||Y["".concat(r,"-001")]||Y["001"])[0]}var X=new RegExp("^".concat(P.source,"*")),Q=new RegExp("".concat(P.source,"*$"));function K(e,n){return{start:e,end:n}}var Z=!!String.prototype.startsWith&&"_a".startsWith("a",1),q=!!String.fromCodePoint,J=!!Object.fromEntries,ee=!!String.prototype.codePointAt,ne=!!String.prototype.trimStart,te=!!String.prototype.trimEnd,re=Number.isSafeInteger?Number.isSafeInteger:function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e&&Math.abs(e)<=9007199254740991},ae=!0;try{ae="a"===(null===(V=de("([^\\p{White_Space}\\p{Pattern_Syntax}]*)","yu").exec("a"))||void 0===V?void 0:V[0])}catch(e){ae=!1}var oe,le=Z?function(e,n,t){return e.startsWith(n,t)}:function(e,n,t){return e.slice(t,t+n.length)===n},ie=q?String.fromCodePoint:function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];for(var t,r="",a=e.length,o=0;a>o;){if((t=e[o++])>1114111)throw RangeError(t+" is not a valid code point");r+=t<65536?String.fromCharCode(t):String.fromCharCode(55296+((t-=65536)>>10),t%1024+56320)}return r},se=J?Object.fromEntries:function(e){for(var n={},t=0,r=e;t<r.length;t++){var a=r[t],o=a[0],l=a[1];n[o]=l}return n},ue=ee?function(e,n){return e.codePointAt(n)}:function(e,n){var t=e.length;if(!(n<0||n>=t)){var r,a=e.charCodeAt(n);return a<55296||a>56319||n+1===t||(r=e.charCodeAt(n+1))<56320||r>57343?a:r-56320+(a-55296<<10)+65536}},ce=ne?function(e){return e.trimStart()}:function(e){return e.replace(X,"")},fe=te?function(e){return e.trimEnd()}:function(e){return e.replace(Q,"")};function de(e,n){return new RegExp(e,n)}if(ae){var pe=de("([^\\p{White_Space}\\p{Pattern_Syntax}]*)","yu");oe=function(e,n){var t;return pe.lastIndex=n,null!==(t=pe.exec(e)[1])&&void 0!==t?t:""}}else oe=function(e,n){for(var t=[];;){var r=ue(e,n);if(void 0===r||ge(r)||ye(r))break;t.push(r),n+=r>=65536?2:1}return ie.apply(void 0,t)};var he,me=function(){function e(e,n){void 0===n&&(n={}),this.message=e,this.position={offset:0,line:1,column:1},this.ignoreTag=!!n.ignoreTag,this.locale=n.locale,this.requiresOtherClause=!!n.requiresOtherClause,this.shouldParseSkeletons=!!n.shouldParseSkeletons}return e.prototype.parse=function(){if(0!==this.offset())throw Error("parser can only be used once");return this.parseMessage(0,"",!1)},e.prototype.parseMessage=function(e,n,t){for(var r=[];!this.isEOF();){var a=this.char();if(123===a){if((o=this.parseArgument(e,t)).err)return o;r.push(o.val)}else{if(125===a&&e>0)break;if(35!==a||"plural"!==n&&"selectordinal"!==n){if(60===a&&!this.ignoreTag&&47===this.peek()){if(t)break;return this.error(m.UNMATCHED_CLOSING_TAG,K(this.clonePosition(),this.clonePosition()))}if(60===a&&!this.ignoreTag&&Ae(this.peek()||0)){if((o=this.parseTag(e,n)).err)return o;r.push(o.val)}else{var o;if((o=this.parseLiteral(e,n)).err)return o;r.push(o.val)}}else{var l=this.clonePosition();this.bump(),r.push({type:A.pound,location:K(l,this.clonePosition())})}}}return{val:r,err:null}},e.prototype.parseTag=function(e,n){var t=this.clonePosition();this.bump();var r=this.parseTagName();if(this.bumpSpace(),this.bumpIf("/>"))return{val:{type:A.literal,value:"<".concat(r,"/>"),location:K(t,this.clonePosition())},err:null};if(this.bumpIf(">")){var a=this.parseMessage(e+1,n,!0);if(a.err)return a;var o=a.val,l=this.clonePosition();if(this.bumpIf("</")){if(this.isEOF()||!Ae(this.char()))return this.error(m.INVALID_TAG,K(l,this.clonePosition()));var i=this.clonePosition();return r!==this.parseTagName()?this.error(m.UNMATCHED_CLOSING_TAG,K(i,this.clonePosition())):(this.bumpSpace(),this.bumpIf(">")?{val:{type:A.tag,value:r,children:o,location:K(t,this.clonePosition())},err:null}:this.error(m.INVALID_TAG,K(l,this.clonePosition())))}return this.error(m.UNCLOSED_TAG,K(t,this.clonePosition()))}return this.error(m.INVALID_TAG,K(t,this.clonePosition()))},e.prototype.parseTagName=function(){var e,n=this.offset();for(this.bump();!this.isEOF()&&(45===(e=this.char())||46===e||e>=48&&e<=57||95===e||e>=97&&e<=122||e>=65&&e<=90||183==e||e>=192&&e<=214||e>=216&&e<=246||e>=248&&e<=893||e>=895&&e<=8191||e>=8204&&e<=8205||e>=8255&&e<=8256||e>=8304&&e<=8591||e>=11264&&e<=12271||e>=12289&&e<=55295||e>=63744&&e<=64975||e>=65008&&e<=65533||e>=65536&&e<=983039);)this.bump();return this.message.slice(n,this.offset())},e.prototype.parseLiteral=function(e,n){for(var t=this.clonePosition(),r="";;){var a=this.tryParseQuote(n);if(a)r+=a;else{var o=this.tryParseUnquoted(e,n);if(o)r+=o;else{var l=this.tryParseLeftAngleBracket();if(!l)break;r+=l}}}var i=K(t,this.clonePosition());return{val:{type:A.literal,value:r,location:i},err:null}},e.prototype.tryParseLeftAngleBracket=function(){return this.isEOF()||60!==this.char()||!this.ignoreTag&&(Ae(e=this.peek()||0)||47===e)?null:(this.bump(),"<");var e},e.prototype.tryParseQuote=function(e){if(this.isEOF()||39!==this.char())return null;switch(this.peek()){case 39:return this.bump(),this.bump(),"'";case 123:case 60:case 62:case 125:break;case 35:if("plural"===e||"selectordinal"===e)break;return null;default:return null}this.bump();var n=[this.char()];for(this.bump();!this.isEOF();){var t=this.char();if(39===t){if(39!==this.peek()){this.bump();break}n.push(39),this.bump()}else n.push(t);this.bump()}return ie.apply(void 0,n)},e.prototype.tryParseUnquoted=function(e,n){if(this.isEOF())return null;var t=this.char();return 60===t||123===t||35===t&&("plural"===n||"selectordinal"===n)||125===t&&e>0?null:(this.bump(),ie(t))},e.prototype.parseArgument=function(e,n){var t=this.clonePosition();if(this.bump(),this.bumpSpace(),this.isEOF())return this.error(m.EXPECT_ARGUMENT_CLOSING_BRACE,K(t,this.clonePosition()));if(125===this.char())return this.bump(),this.error(m.EMPTY_ARGUMENT,K(t,this.clonePosition()));var r=this.parseIdentifierIfPossible().value;if(!r)return this.error(m.MALFORMED_ARGUMENT,K(t,this.clonePosition()));if(this.bumpSpace(),this.isEOF())return this.error(m.EXPECT_ARGUMENT_CLOSING_BRACE,K(t,this.clonePosition()));switch(this.char()){case 125:return this.bump(),{val:{type:A.argument,value:r,location:K(t,this.clonePosition())},err:null};case 44:return this.bump(),this.bumpSpace(),this.isEOF()?this.error(m.EXPECT_ARGUMENT_CLOSING_BRACE,K(t,this.clonePosition())):this.parseArgumentOptions(e,n,r,t);default:return this.error(m.MALFORMED_ARGUMENT,K(t,this.clonePosition()))}},e.prototype.parseIdentifierIfPossible=function(){var e=this.clonePosition(),n=this.offset(),t=oe(this.message,n),r=n+t.length;return this.bumpTo(r),{value:t,location:K(e,this.clonePosition())}},e.prototype.parseArgumentOptions=function(e,n,t,r){var o,l=this.clonePosition(),i=this.parseIdentifierIfPossible().value,s=this.clonePosition();switch(i){case"":return this.error(m.EXPECT_ARGUMENT_TYPE,K(l,s));case"number":case"date":case"time":this.bumpSpace();var u=null;if(this.bumpIf(",")){this.bumpSpace();var c=this.clonePosition();if((_=this.parseSimpleArgStyleIfPossible()).err)return _;if(0===(h=fe(_.val)).length)return this.error(m.EXPECT_ARGUMENT_STYLE,K(this.clonePosition(),this.clonePosition()));u={style:h,styleLocation:K(c,this.clonePosition())}}if((C=this.tryParseArgumentClose(r)).err)return C;var f=K(r,this.clonePosition());if(u&&le(null==u?void 0:u.style,"::",0)){var d=ce(u.style.slice(2));if("number"===i)return(_=this.parseNumberSkeletonFromString(d,u.styleLocation)).err?_:{val:{type:A.number,value:t,location:f,style:_.val},err:null};if(0===d.length)return this.error(m.EXPECT_DATE_TIME_SKELETON,f);var p=d;this.locale&&(p=function(e,n){for(var t="",r=0;r<e.length;r++){var a=e.charAt(r);if("j"===a){for(var o=0;r+1<e.length&&e.charAt(r+1)===a;)o++,r++;var l=1+(1&o),i=o<2?1:3+(o>>1),s=$(n);for("H"!=s&&"k"!=s||(i=0);i-- >0;)t+="a";for(;l-- >0;)t=s+t}else t+="J"===a?"H":a}return t}(d,this.locale));var h={type:g.dateTime,pattern:p,location:u.styleLocation,parsedOptions:this.shouldParseSkeletons?M(p):{}};return{val:{type:"date"===i?A.date:A.time,value:t,location:f,style:h},err:null}}return{val:{type:"number"===i?A.number:"date"===i?A.date:A.time,value:t,location:f,style:null!==(o=null==u?void 0:u.style)&&void 0!==o?o:null},err:null};case"plural":case"selectordinal":case"select":var y=this.clonePosition();if(this.bumpSpace(),!this.bumpIf(","))return this.error(m.EXPECT_SELECT_ARGUMENT_OPTIONS,K(y,a({},y)));this.bumpSpace();var v=this.parseIdentifierIfPossible(),b=0;if("select"!==i&&"offset"===v.value){if(!this.bumpIf(":"))return this.error(m.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE,K(this.clonePosition(),this.clonePosition()));var _;if(this.bumpSpace(),(_=this.tryParseDecimalInteger(m.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE,m.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE)).err)return _;this.bumpSpace(),v=this.parseIdentifierIfPossible(),b=_.val}var C,E=this.tryParsePluralOrSelectOptions(e,i,n,v);if(E.err)return E;if((C=this.tryParseArgumentClose(r)).err)return C;var w=K(r,this.clonePosition());return"select"===i?{val:{type:A.select,value:t,options:se(E.val),location:w},err:null}:{val:{type:A.plural,value:t,options:se(E.val),offset:b,pluralType:"plural"===i?"cardinal":"ordinal",location:w},err:null};default:return this.error(m.INVALID_ARGUMENT_TYPE,K(l,s))}},e.prototype.tryParseArgumentClose=function(e){return this.isEOF()||125!==this.char()?this.error(m.EXPECT_ARGUMENT_CLOSING_BRACE,K(e,this.clonePosition())):(this.bump(),{val:!0,err:null})},e.prototype.parseSimpleArgStyleIfPossible=function(){for(var e=0,n=this.clonePosition();!this.isEOF();)switch(this.char()){case 39:this.bump();var t=this.clonePosition();if(!this.bumpUntil("'"))return this.error(m.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE,K(t,this.clonePosition()));this.bump();break;case 123:e+=1,this.bump();break;case 125:if(!(e>0))return{val:this.message.slice(n.offset,this.offset()),err:null};e-=1;break;default:this.bump()}return{val:this.message.slice(n.offset,this.offset()),err:null}},e.prototype.parseNumberSkeletonFromString=function(e,n){var t=[];try{t=function(e){if(0===e.length)throw new Error("Number skeleton cannot be empty");for(var n=[],t=0,r=e.split(R).filter((function(e){return e.length>0}));t<r.length;t++){var a=r[t].split("/");if(0===a.length)throw new Error("Invalid number skeleton");for(var o=a[0],l=a.slice(1),i=0,s=l;i<s.length;i++)if(0===s[i].length)throw new Error("Invalid number skeleton");n.push({stem:o,options:l})}return n}(e)}catch(e){return this.error(m.INVALID_NUMBER_SKELETON,n)}return{val:{type:g.number,tokens:t,location:n,parsedOptions:this.shouldParseSkeletons?G(t):{}},err:null}},e.prototype.tryParsePluralOrSelectOptions=function(e,n,t,r){for(var a,o=!1,l=[],i=new Set,s=r.value,u=r.location;;){if(0===s.length){var c=this.clonePosition();if("select"===n||!this.bumpIf("="))break;var f=this.tryParseDecimalInteger(m.EXPECT_PLURAL_ARGUMENT_SELECTOR,m.INVALID_PLURAL_ARGUMENT_SELECTOR);if(f.err)return f;u=K(c,this.clonePosition()),s=this.message.slice(c.offset,this.offset())}if(i.has(s))return this.error("select"===n?m.DUPLICATE_SELECT_ARGUMENT_SELECTOR:m.DUPLICATE_PLURAL_ARGUMENT_SELECTOR,u);"other"===s&&(o=!0),this.bumpSpace();var d=this.clonePosition();if(!this.bumpIf("{"))return this.error("select"===n?m.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT:m.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT,K(this.clonePosition(),this.clonePosition()));var p=this.parseMessage(e+1,n,t);if(p.err)return p;var h=this.tryParseArgumentClose(d);if(h.err)return h;l.push([s,{value:p.val,location:K(d,this.clonePosition())}]),i.add(s),this.bumpSpace(),s=(a=this.parseIdentifierIfPossible()).value,u=a.location}return 0===l.length?this.error("select"===n?m.EXPECT_SELECT_ARGUMENT_SELECTOR:m.EXPECT_PLURAL_ARGUMENT_SELECTOR,K(this.clonePosition(),this.clonePosition())):this.requiresOtherClause&&!o?this.error(m.MISSING_OTHER_CLAUSE,K(this.clonePosition(),this.clonePosition())):{val:l,err:null}},e.prototype.tryParseDecimalInteger=function(e,n){var t=1,r=this.clonePosition();this.bumpIf("+")||this.bumpIf("-")&&(t=-1);for(var a=!1,o=0;!this.isEOF();){var l=this.char();if(!(l>=48&&l<=57))break;a=!0,o=10*o+(l-48),this.bump()}var i=K(r,this.clonePosition());return a?re(o*=t)?{val:o,err:null}:this.error(n,i):this.error(e,i)},e.prototype.offset=function(){return this.position.offset},e.prototype.isEOF=function(){return this.offset()===this.message.length},e.prototype.clonePosition=function(){return{offset:this.position.offset,line:this.position.line,column:this.position.column}},e.prototype.char=function(){var e=this.position.offset;if(e>=this.message.length)throw Error("out of bound");var n=ue(this.message,e);if(void 0===n)throw Error("Offset ".concat(e," is at invalid UTF-16 code unit boundary"));return n},e.prototype.error=function(e,n){return{val:null,err:{kind:e,message:this.message,location:n}}},e.prototype.bump=function(){if(!this.isEOF()){var e=this.char();10===e?(this.position.line+=1,this.position.column=1,this.position.offset+=1):(this.position.column+=1,this.position.offset+=e<65536?1:2)}},e.prototype.bumpIf=function(e){if(le(this.message,e,this.offset())){for(var n=0;n<e.length;n++)this.bump();return!0}return!1},e.prototype.bumpUntil=function(e){var n=this.offset(),t=this.message.indexOf(e,n);return t>=0?(this.bumpTo(t),!0):(this.bumpTo(this.message.length),!1)},e.prototype.bumpTo=function(e){if(this.offset()>e)throw Error("targetOffset ".concat(e," must be greater than or equal to the current offset ").concat(this.offset()));for(e=Math.min(e,this.message.length);;){var n=this.offset();if(n===e)break;if(n>e)throw Error("targetOffset ".concat(e," is at invalid UTF-16 code unit boundary"));if(this.bump(),this.isEOF())break}},e.prototype.bumpSpace=function(){for(;!this.isEOF()&&ge(this.char());)this.bump()},e.prototype.peek=function(){if(this.isEOF())return null;var e=this.char(),n=this.offset(),t=this.message.charCodeAt(n+(e>=65536?2:1));return null!=t?t:null},e}();function Ae(e){return e>=97&&e<=122||e>=65&&e<=90}function ge(e){return e>=9&&e<=13||32===e||133===e||e>=8206&&e<=8207||8232===e||8233===e}function ye(e){return e>=33&&e<=35||36===e||e>=37&&e<=39||40===e||41===e||42===e||43===e||44===e||45===e||e>=46&&e<=47||e>=58&&e<=59||e>=60&&e<=62||e>=63&&e<=64||91===e||92===e||93===e||94===e||96===e||123===e||124===e||125===e||126===e||161===e||e>=162&&e<=165||166===e||167===e||169===e||171===e||172===e||174===e||176===e||177===e||182===e||187===e||191===e||215===e||247===e||e>=8208&&e<=8213||e>=8214&&e<=8215||8216===e||8217===e||8218===e||e>=8219&&e<=8220||8221===e||8222===e||8223===e||e>=8224&&e<=8231||e>=8240&&e<=8248||8249===e||8250===e||e>=8251&&e<=8254||e>=8257&&e<=8259||8260===e||8261===e||8262===e||e>=8263&&e<=8273||8274===e||8275===e||e>=8277&&e<=8286||e>=8592&&e<=8596||e>=8597&&e<=8601||e>=8602&&e<=8603||e>=8604&&e<=8607||8608===e||e>=8609&&e<=8610||8611===e||e>=8612&&e<=8613||8614===e||e>=8615&&e<=8621||8622===e||e>=8623&&e<=8653||e>=8654&&e<=8655||e>=8656&&e<=8657||8658===e||8659===e||8660===e||e>=8661&&e<=8691||e>=8692&&e<=8959||e>=8960&&e<=8967||8968===e||8969===e||8970===e||8971===e||e>=8972&&e<=8991||e>=8992&&e<=8993||e>=8994&&e<=9e3||9001===e||9002===e||e>=9003&&e<=9083||9084===e||e>=9085&&e<=9114||e>=9115&&e<=9139||e>=9140&&e<=9179||e>=9180&&e<=9185||e>=9186&&e<=9254||e>=9255&&e<=9279||e>=9280&&e<=9290||e>=9291&&e<=9311||e>=9472&&e<=9654||9655===e||e>=9656&&e<=9664||9665===e||e>=9666&&e<=9719||e>=9720&&e<=9727||e>=9728&&e<=9838||9839===e||e>=9840&&e<=10087||10088===e||10089===e||10090===e||10091===e||10092===e||10093===e||10094===e||10095===e||10096===e||10097===e||10098===e||10099===e||10100===e||10101===e||e>=10132&&e<=10175||e>=10176&&e<=10180||10181===e||10182===e||e>=10183&&e<=10213||10214===e||10215===e||10216===e||10217===e||10218===e||10219===e||10220===e||10221===e||10222===e||10223===e||e>=10224&&e<=10239||e>=10240&&e<=10495||e>=10496&&e<=10626||10627===e||10628===e||10629===e||10630===e||10631===e||10632===e||10633===e||10634===e||10635===e||10636===e||10637===e||10638===e||10639===e||10640===e||10641===e||10642===e||10643===e||10644===e||10645===e||10646===e||10647===e||10648===e||e>=10649&&e<=10711||10712===e||10713===e||10714===e||10715===e||e>=10716&&e<=10747||10748===e||10749===e||e>=10750&&e<=11007||e>=11008&&e<=11055||e>=11056&&e<=11076||e>=11077&&e<=11078||e>=11079&&e<=11084||e>=11085&&e<=11123||e>=11124&&e<=11125||e>=11126&&e<=11157||11158===e||e>=11159&&e<=11263||e>=11776&&e<=11777||11778===e||11779===e||11780===e||11781===e||e>=11782&&e<=11784||11785===e||11786===e||11787===e||11788===e||11789===e||e>=11790&&e<=11798||11799===e||e>=11800&&e<=11801||11802===e||11803===e||11804===e||11805===e||e>=11806&&e<=11807||11808===e||11809===e||11810===e||11811===e||11812===e||11813===e||11814===e||11815===e||11816===e||11817===e||e>=11818&&e<=11822||11823===e||e>=11824&&e<=11833||e>=11834&&e<=11835||e>=11836&&e<=11839||11840===e||11841===e||11842===e||e>=11843&&e<=11855||e>=11856&&e<=11857||11858===e||e>=11859&&e<=11903||e>=12289&&e<=12291||12296===e||12297===e||12298===e||12299===e||12300===e||12301===e||12302===e||12303===e||12304===e||12305===e||e>=12306&&e<=12307||12308===e||12309===e||12310===e||12311===e||12312===e||12313===e||12314===e||12315===e||12316===e||12317===e||e>=12318&&e<=12319||12320===e||12336===e||64830===e||64831===e||e>=65093&&e<=65094}function ve(e){e.forEach((function(e){if(delete e.location,I(e)||S(e))for(var n in e.options)delete e.options[n].location,ve(e.options[n].value);else E(e)&&T(e.style)||(w(e)||k(e))&&N(e.style)?delete e.style.location:x(e)&&ve(e.children)}))}function be(e,n){void 0===n&&(n={}),n=a({shouldParseSkeletons:!0,requiresOtherClause:!0},n);var t=new me(e,n).parse();if(t.err){var r=SyntaxError(m[t.err.kind]);throw r.location=t.err.location,r.originalMessage=t.err.message,r}return(null==n?void 0:n.captureLocation)||ve(t.val),t.val}!function(e){e.MISSING_VALUE="MISSING_VALUE",e.INVALID_VALUE="INVALID_VALUE",e.MISSING_INTL_API="MISSING_INTL_API"}(he||(he={}));var _e,Ce=function(e){function n(n,t,r){var a=e.call(this,n)||this;return a.code=t,a.originalMessage=r,a}return r(n,e),n.prototype.toString=function(){return"[formatjs Error: ".concat(this.code,"] ").concat(this.message)},n}(Error),Ee=function(e){function n(n,t,r,a){return e.call(this,'Invalid values for "'.concat(n,'": "').concat(t,'". Options are "').concat(Object.keys(r).join('", "'),'"'),he.INVALID_VALUE,a)||this}return r(n,e),n}(Ce),we=function(e){function n(n,t,r){return e.call(this,'Value for "'.concat(n,'" must be of type ').concat(t),he.INVALID_VALUE,r)||this}return r(n,e),n}(Ce),ke=function(e){function n(n,t){return e.call(this,'The intl string context variable "'.concat(n,'" was not provided to the string "').concat(t,'"'),he.MISSING_VALUE,t)||this}return r(n,e),n}(Ce);function Ie(e){return"function"==typeof e}function Se(e,n,t,r,a,o,l){if(1===e.length&&_(e[0]))return[{type:_e.literal,value:e[0].value}];for(var i=[],s=0,u=e;s<u.length;s++){var c=u[s];if(_(c))i.push({type:_e.literal,value:c.value});else if(B(c))"number"==typeof o&&i.push({type:_e.literal,value:t.getNumberFormat(n).format(o)});else{var f=c.value;if(!a||!(f in a))throw new ke(f,l);var d=a[f];if(C(c))d&&"string"!=typeof d&&"number"!=typeof d||(d="string"==typeof d||"number"==typeof d?String(d):""),i.push({type:"string"==typeof d?_e.literal:_e.object,value:d});else if(w(c)){var p="string"==typeof c.style?r.date[c.style]:N(c.style)?c.style.parsedOptions:void 0;i.push({type:_e.literal,value:t.getDateTimeFormat(n,p).format(d)})}else if(k(c))p="string"==typeof c.style?r.time[c.style]:N(c.style)?c.style.parsedOptions:r.time.medium,i.push({type:_e.literal,value:t.getDateTimeFormat(n,p).format(d)});else if(E(c))(p="string"==typeof c.style?r.number[c.style]:T(c.style)?c.style.parsedOptions:void 0)&&p.scale&&(d*=p.scale||1),i.push({type:_e.literal,value:t.getNumberFormat(n,p).format(d)});else{if(x(c)){var h=c.children,m=c.value,A=a[m];if(!Ie(A))throw new we(m,"function",l);var g=A(Se(h,n,t,r,a,o).map((function(e){return e.value})));Array.isArray(g)||(g=[g]),i.push.apply(i,g.map((function(e){return{type:"string"==typeof e?_e.literal:_e.object,value:e}})))}if(I(c)){if(!(y=c.options[d]||c.options.other))throw new Ee(c.value,d,Object.keys(c.options),l);i.push.apply(i,Se(y.value,n,t,r,a))}else if(S(c)){var y;if(!(y=c.options["=".concat(d)])){if(!Intl.PluralRules)throw new Ce('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n',he.MISSING_INTL_API,l);var v=t.getPluralRules(n,{type:c.pluralType}).select(d-(c.offset||0));y=c.options[v]||c.options.other}if(!y)throw new Ee(c.value,d,Object.keys(c.options),l);i.push.apply(i,Se(y.value,n,t,r,a,d-(c.offset||0)))}}}}return(b=i).length<2?b:b.reduce((function(e,n){var t=e[e.length-1];return t&&t.type===_e.literal&&n.type===_e.literal?t.value+=n.value:e.push(n),e}),[]);var b}function Be(e){return{create:function(){return{get:function(n){return e[n]},set:function(n,t){e[n]=t}}}}}!function(e){e[e.literal=0]="literal",e[e.object=1]="object"}(_e||(_e={}));var xe,Te=function(){function e(n,t,r,l){void 0===t&&(t=e.defaultLocale);var u,c,f,d=this;if(this.formatterCache={number:{},dateTime:{},pluralRules:{}},this.format=function(e){var n=d.formatToParts(e);if(1===n.length)return n[0].value;var t=n.reduce((function(e,n){return e.length&&n.type===_e.literal&&"string"==typeof e[e.length-1]?e[e.length-1]+=n.value:e.push(n.value),e}),[]);return t.length<=1?t[0]||"":t},this.formatToParts=function(e){return Se(d.ast,d.locales,d.formatters,d.formats,e,void 0,d.message)},this.resolvedOptions=function(){var e;return{locale:(null===(e=d.resolvedLocale)||void 0===e?void 0:e.toString())||Intl.NumberFormat.supportedLocalesOf(d.locales)[0]}},this.getAst=function(){return d.ast},this.locales=t,this.resolvedLocale=e.resolveLocale(t),"string"==typeof n){if(this.message=n,!e.__parse)throw new TypeError("IntlMessageFormat.__parse must be set to process `message` of type `string`");var p=l||{},h=(p.formatters,o(p,["formatters"]));this.ast=e.__parse(n,a(a({},h),{locale:this.resolvedLocale}))}else this.ast=n;if(!Array.isArray(this.ast))throw new TypeError("A message must be provided as a String or AST.");this.formats=(c=e.formats,(f=r)?Object.keys(c).reduce((function(e,n){var t,r;return e[n]=(t=c[n],(r=f[n])?a(a(a({},t||{}),r||{}),Object.keys(t).reduce((function(e,n){return e[n]=a(a({},t[n]),r[n]||{}),e}),{})):t),e}),a({},c)):c),this.formatters=l&&l.formatters||(void 0===(u=this.formatterCache)&&(u={number:{},dateTime:{},pluralRules:{}}),{getNumberFormat:s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.NumberFormat).bind.apply(e,i([void 0],n,!1)))}),{cache:Be(u.number),strategy:v.variadic}),getDateTimeFormat:s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.DateTimeFormat).bind.apply(e,i([void 0],n,!1)))}),{cache:Be(u.dateTime),strategy:v.variadic}),getPluralRules:s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.PluralRules).bind.apply(e,i([void 0],n,!1)))}),{cache:Be(u.pluralRules),strategy:v.variadic})})}return Object.defineProperty(e,"defaultLocale",{get:function(){return e.memoizedDefaultLocale||(e.memoizedDefaultLocale=(new Intl.NumberFormat).resolvedOptions().locale),e.memoizedDefaultLocale},enumerable:!1,configurable:!0}),e.memoizedDefaultLocale=null,e.resolveLocale=function(e){if(void 0!==Intl.Locale){var n=Intl.NumberFormat.supportedLocalesOf(e);return n.length>0?new Intl.Locale(n[0]):new Intl.Locale("string"==typeof e?e:e[0])}},e.__parse=be,e.formats={number:{integer:{maximumFractionDigits:0},currency:{style:"currency"},percent:{style:"percent"}},date:{short:{month:"numeric",day:"numeric",year:"2-digit"},medium:{month:"short",day:"numeric",year:"numeric"},long:{month:"long",day:"numeric",year:"numeric"},full:{weekday:"long",month:"long",day:"numeric",year:"numeric"}},time:{short:{hour:"numeric",minute:"numeric"},medium:{hour:"numeric",minute:"numeric",second:"numeric"},long:{hour:"numeric",minute:"numeric",second:"numeric",timeZoneName:"short"},full:{hour:"numeric",minute:"numeric",second:"numeric",timeZoneName:"short"}}},e}();!function(e){e.FORMAT_ERROR="FORMAT_ERROR",e.UNSUPPORTED_FORMATTER="UNSUPPORTED_FORMATTER",e.INVALID_CONFIG="INVALID_CONFIG",e.MISSING_DATA="MISSING_DATA",e.MISSING_TRANSLATION="MISSING_TRANSLATION"}(xe||(xe={}));var Ne=function(e){function n(t,r,a){var o=this,l=a?a instanceof Error?a:new Error(String(a)):void 0;return(o=e.call(this,"[@formatjs/intl Error ".concat(t,"] ").concat(r,"\n").concat(l?"\n".concat(l.message,"\n").concat(l.stack):""))||this).code=t,"function"==typeof Error.captureStackTrace&&Error.captureStackTrace(o,n),o}return r(n,e),n}(Error),Pe=function(e){function n(n,t){return e.call(this,xe.UNSUPPORTED_FORMATTER,n,t)||this}return r(n,e),n}(Ne),Le=function(e){function n(n,t){return e.call(this,xe.INVALID_CONFIG,n,t)||this}return r(n,e),n}(Ne),Me=function(e){function n(n,t){return e.call(this,xe.MISSING_DATA,n,t)||this}return r(n,e),n}(Ne),Re=function(e){function n(n,t,r){var a=e.call(this,xe.FORMAT_ERROR,"".concat(n,"\nLocale: ").concat(t,"\n"),r)||this;return a.locale=t,a}return r(n,e),n}(Ne),Oe=function(e){function n(n,t,r,a){var o=e.call(this,"".concat(n,"\nMessageID: ").concat(null==r?void 0:r.id,"\nDefault Message: ").concat(null==r?void 0:r.defaultMessage,"\nDescription: ").concat(null==r?void 0:r.description,"\n"),t,a)||this;return o.descriptor=r,o.locale=t,o}return r(n,e),n}(Re),He=function(e){function n(n,t){var r=e.call(this,xe.MISSING_TRANSLATION,'Missing message: "'.concat(n.id,'" for locale "').concat(t,'", using ').concat(n.defaultMessage?"default message (".concat("string"==typeof n.defaultMessage?n.defaultMessage:n.defaultMessage.map((function(e){var n;return null!==(n=e.value)&&void 0!==n?n:JSON.stringify(e)})).join(),")"):"id"," as fallback."))||this;return r.descriptor=n,r}return r(n,e),n}(Ne);function De(e,n,t){return void 0===t&&(t={}),n.reduce((function(n,r){return r in e?n[r]=e[r]:r in t&&(n[r]=t[r]),n}),{})}var ze={formats:{},messages:{},timeZone:void 0,defaultLocale:"en",defaultFormats:{},fallbackOnEmptyString:!0,onError:function(e){},onWarn:function(e){}};function Ue(e){return{create:function(){return{get:function(n){return e[n]},set:function(n,t){e[n]=t}}}}}function Fe(e,n,t,r){var a,o=e&&e[n];if(o&&(a=o[t]),a)return a;r(new Pe("No ".concat(n," format named: ").concat(t)))}function je(e){b(e,"[React Intl] Could not find required `intl` object. <IntlProvider> needs to exist in the component ancestry.")}var We=a(a({},ze),{textComponent:e.Fragment});function Ge(e,n){if(e===n)return!0;if(!e||!n)return!1;var t=Object.keys(e),r=Object.keys(n),a=t.length;if(r.length!==a)return!1;for(var o=0;o<a;o++){var l=t[o];if(e[l]!==n[l]||!Object.prototype.hasOwnProperty.call(n,l))return!1}return!0}l(146);var Ve="undefined"==typeof window||window.__REACT_INTL_BYPASS_GLOBAL_CONTEXT__?e.createContext(null):window.__REACT_INTL_CONTEXT__||(window.__REACT_INTL_CONTEXT__=e.createContext(null)),Ye=(Ve.Consumer,Ve.Provider),$e=Ve;function Xe(){var n=e.useContext($e);return je(n),n}function Qe(n){var t=Xe(),r=t.formatMessage,a=t.textComponent,o=void 0===a?e.Fragment:a,l=n.id,i=n.description,s=n.defaultMessage,u=n.values,c=n.children,f=n.tagName,d=void 0===f?o:f,p=r({id:l,description:i,defaultMessage:s},u,{ignoreTag:n.ignoreTag});return"function"==typeof c?c(Array.isArray(p)?p:[p]):d?e.createElement(d,null,e.Children.toArray(p)):e.createElement(e.Fragment,null,p)}Qe.displayName="FormattedMessage";var Ke=e.memo(Qe,(function(e,n){var t=e.values,r=o(e,["values"]),a=n.values,l=o(n,["values"]);return Ge(a,t)&&Ge(r,l)}));Ke.displayName="MemoizedFormattedMessage";const Ze=Ke;function qe(e,n){return Object.keys(e).reduce((function(t,r){return t[r]=a({timeZone:n},e[r]),t}),{})}function Je(e,n){return Object.keys(a(a({},e),n)).reduce((function(t,r){return t[r]=a(a({},e[r]||{}),n[r]||{}),t}),{})}function en(e,n){if(!n)return e;var t=Te.formats;return a(a(a({},t),e),{date:Je(qe(t.date,n),qe(e.date||{},n)),time:Je(qe(t.time,n),qe(e.time||{},n))})}var nn=function(e,n,t,r,o){var l=e.locale,i=e.formats,s=e.messages,u=e.defaultLocale,c=e.defaultFormats,f=e.fallbackOnEmptyString,d=e.onError,p=e.timeZone,h=e.defaultRichTextElements;void 0===t&&(t={id:""});var m=t.id,g=t.defaultMessage;b(!!m,"[@formatjs/intl] An `id` must be provided to format a message. You can either:\n1. Configure your build toolchain with [babel-plugin-formatjs](https://formatjs.io/docs/tooling/babel-plugin)\nor [@formatjs/ts-transformer](https://formatjs.io/docs/tooling/ts-transformer) OR\n2. Configure your `eslint` config to include [eslint-plugin-formatjs](https://formatjs.io/docs/tooling/linter#enforce-id)\nto autofix this issue");var y=String(m),v=s&&Object.prototype.hasOwnProperty.call(s,y)&&s[y];if(Array.isArray(v)&&1===v.length&&v[0].type===A.literal)return v[0].value;if(!r&&v&&"string"==typeof v&&!h)return v.replace(/'\{(.*?)\}'/gi,"{$1}");if(r=a(a({},h),r||{}),i=en(i,p),c=en(c,p),!v){if(!1===f&&""===v)return v;if((!g||l&&l.toLowerCase()!==u.toLowerCase())&&d(new He(t,l)),g)try{return n.getMessageFormat(g,u,c,o).format(r)}catch(e){return d(new Oe('Error formatting default message for: "'.concat(y,'", rendering default message verbatim'),l,t,e)),"string"==typeof g?g:y}return y}try{return n.getMessageFormat(v,l,i,a({formatters:n},o||{})).format(r)}catch(e){d(new Oe('Error formatting message: "'.concat(y,'", using ').concat(g?"default message":"id"," as fallback."),l,t,e))}if(g)try{return n.getMessageFormat(g,u,c,o).format(r)}catch(e){d(new Oe('Error formatting the default message for: "'.concat(y,'", rendering message verbatim'),l,t,e))}return"string"==typeof v?v:"string"==typeof g?g:y},tn=["style","currency","unit","unitDisplay","useGrouping","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits","compactDisplay","currencyDisplay","currencySign","notation","signDisplay","unit","unitDisplay","numberingSystem","trailingZeroDisplay","roundingPriority","roundingIncrement","roundingMode"];function rn(e,n,t){var r=e.locale,a=e.formats,o=e.onError;void 0===t&&(t={});var l=t.format,i=l&&Fe(a,"number",l,o)||{};return n(r,De(t,tn,i))}function an(e,n,t,r){void 0===r&&(r={});try{return rn(e,n,r).format(t)}catch(n){e.onError(new Re("Error formatting number.",e.locale,n))}return String(t)}function on(e,n,t,r){void 0===r&&(r={});try{return rn(e,n,r).formatToParts(t)}catch(n){e.onError(new Re("Error formatting number.",e.locale,n))}return[]}var ln=["numeric","style"];function sn(e,n,t,r,a){void 0===a&&(a={}),r||(r="second"),Intl.RelativeTimeFormat||e.onError(new Ce('Intl.RelativeTimeFormat is not available in this environment.\nTry polyfilling it using "@formatjs/intl-relativetimeformat"\n',he.MISSING_INTL_API));try{return function(e,n,t){var r=e.locale,a=e.formats,o=e.onError;void 0===t&&(t={});var l=t.format,i=!!l&&Fe(a,"relative",l,o)||{};return n(r,De(t,ln,i))}(e,n,a).format(t,r)}catch(n){e.onError(new Re("Error formatting relative time.",e.locale,n))}return String(t)}var un=["formatMatcher","timeZone","hour12","weekday","era","year","month","day","hour","minute","second","timeZoneName","hourCycle","dateStyle","timeStyle","calendar","numberingSystem","fractionalSecondDigits"];function cn(e,n,t,r){var o=e.locale,l=e.formats,i=e.onError,s=e.timeZone;void 0===r&&(r={});var u=r.format,c=a(a({},s&&{timeZone:s}),u&&Fe(l,n,u,i)),f=De(r,un,c);return"time"!==n||f.hour||f.minute||f.second||f.timeStyle||f.dateStyle||(f=a(a({},f),{hour:"numeric",minute:"numeric"})),t(o,f)}function fn(e,n){for(var t=[],r=2;r<arguments.length;r++)t[r-2]=arguments[r];var a=t[0],o=t[1],l=void 0===o?{}:o,i="string"==typeof a?new Date(a||0):a;try{return cn(e,"date",n,l).format(i)}catch(n){e.onError(new Re("Error formatting date.",e.locale,n))}return String(i)}function dn(e,n){for(var t=[],r=2;r<arguments.length;r++)t[r-2]=arguments[r];var a=t[0],o=t[1],l=void 0===o?{}:o,i="string"==typeof a?new Date(a||0):a;try{return cn(e,"time",n,l).format(i)}catch(n){e.onError(new Re("Error formatting time.",e.locale,n))}return String(i)}function pn(e,n){for(var t=[],r=2;r<arguments.length;r++)t[r-2]=arguments[r];var a=t[0],o=t[1],l=t[2],i=void 0===l?{}:l,s=e.timeZone,u=e.locale,c=e.onError,f=De(i,un,s?{timeZone:s}:{});try{return n(u,f).formatRange(a,o)}catch(n){c(new Re("Error formatting date time range.",e.locale,n))}return String(a)}function hn(e,n){for(var t=[],r=2;r<arguments.length;r++)t[r-2]=arguments[r];var a=t[0],o=t[1],l=void 0===o?{}:o,i="string"==typeof a?new Date(a||0):a;try{return cn(e,"date",n,l).formatToParts(i)}catch(n){e.onError(new Re("Error formatting date.",e.locale,n))}return[]}function mn(e,n){for(var t=[],r=2;r<arguments.length;r++)t[r-2]=arguments[r];var a=t[0],o=t[1],l=void 0===o?{}:o,i="string"==typeof a?new Date(a||0):a;try{return cn(e,"time",n,l).formatToParts(i)}catch(n){e.onError(new Re("Error formatting time.",e.locale,n))}return[]}var An=["type"];function gn(e,n,t,r){var a=e.locale,o=e.onError;void 0===r&&(r={}),Intl.PluralRules||o(new Ce('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n',he.MISSING_INTL_API));var l=De(r,An);try{return n(a,l).select(t)}catch(e){o(new Re("Error formatting plural.",a,e))}return"other"}var yn=["type","style"],vn=Date.now();function bn(e,n,t,r){void 0===r&&(r={});var a=_n(e,n,t,r).reduce((function(e,n){var t=n.value;return"string"!=typeof t?e.push(t):"string"==typeof e[e.length-1]?e[e.length-1]+=t:e.push(t),e}),[]);return 1===a.length?a[0]:0===a.length?"":a}function _n(e,n,t,r){var o=e.locale,l=e.onError;void 0===r&&(r={}),Intl.ListFormat||l(new Ce('Intl.ListFormat is not available in this environment.\nTry polyfilling it using "@formatjs/intl-listformat"\n',he.MISSING_INTL_API));var i=De(r,yn);try{var s={},u=t.map((function(e,n){if("object"==typeof e){var t=function(e){return"".concat(vn,"_").concat(e,"_").concat(vn)}(n);return s[t]=e,t}return String(e)}));return n(o,i).formatToParts(u).map((function(e){return"literal"===e.type?e:a(a({},e),{value:s[e.value]||e.value})}))}catch(e){l(new Re("Error formatting list.",o,e))}return t}var Cn=["style","type","fallback","languageDisplay"];function En(e,n,t,r){var a=e.locale,o=e.onError;Intl.DisplayNames||o(new Ce('Intl.DisplayNames is not available in this environment.\nTry polyfilling it using "@formatjs/intl-displaynames"\n',he.MISSING_INTL_API));var l=De(r,Cn);try{return n(a,l).of(t)}catch(e){o(new Re("Error formatting display name.",a,e))}}function wn(e,n){var t=function(e){void 0===e&&(e={dateTime:{},number:{},message:{},relativeTime:{},pluralRules:{},list:{},displayNames:{}});var n=Intl.RelativeTimeFormat,t=Intl.ListFormat,r=Intl.DisplayNames,o=s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.DateTimeFormat).bind.apply(e,i([void 0],n,!1)))}),{cache:Ue(e.dateTime),strategy:v.variadic}),l=s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.NumberFormat).bind.apply(e,i([void 0],n,!1)))}),{cache:Ue(e.number),strategy:v.variadic}),u=s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.PluralRules).bind.apply(e,i([void 0],n,!1)))}),{cache:Ue(e.pluralRules),strategy:v.variadic});return{getDateTimeFormat:o,getNumberFormat:l,getMessageFormat:s((function(e,n,t,r){return new Te(e,n,t,a({formatters:{getNumberFormat:l,getDateTimeFormat:o,getPluralRules:u}},r||{}))}),{cache:Ue(e.message),strategy:v.variadic}),getRelativeTimeFormat:s((function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return new(n.bind.apply(n,i([void 0],e,!1)))}),{cache:Ue(e.relativeTime),strategy:v.variadic}),getPluralRules:u,getListFormat:s((function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return new(t.bind.apply(t,i([void 0],e,!1)))}),{cache:Ue(e.list),strategy:v.variadic}),getDisplayNames:s((function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return new(r.bind.apply(r,i([void 0],e,!1)))}),{cache:Ue(e.displayNames),strategy:v.variadic})}}(n),r=a(a({},ze),e),o=r.locale,l=r.defaultLocale,u=r.onError;return o?!Intl.NumberFormat.supportedLocalesOf(o).length&&u?u(new Me('Missing locale data for locale: "'.concat(o,'" in Intl.NumberFormat. Using default locale: "').concat(l,'" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details'))):!Intl.DateTimeFormat.supportedLocalesOf(o).length&&u&&u(new Me('Missing locale data for locale: "'.concat(o,'" in Intl.DateTimeFormat. Using default locale: "').concat(l,'" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details'))):(u&&u(new Le('"locale" was not configured, using "'.concat(l,'" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details'))),r.locale=r.defaultLocale||"en"),function(e){var n;e.onWarn&&e.defaultRichTextElements&&"string"==typeof((n=e.messages||{})?n[Object.keys(n)[0]]:void 0)&&e.onWarn('[@formatjs/intl] "defaultRichTextElements" was specified but "message" was not pre-compiled. \nPlease consider using "@formatjs/cli" to pre-compile your messages for performance.\nFor more details see https://formatjs.io/docs/getting-started/message-distribution')}(r),a(a({},r),{formatters:t,formatNumber:an.bind(null,r,t.getNumberFormat),formatNumberToParts:on.bind(null,r,t.getNumberFormat),formatRelativeTime:sn.bind(null,r,t.getRelativeTimeFormat),formatDate:fn.bind(null,r,t.getDateTimeFormat),formatDateToParts:hn.bind(null,r,t.getDateTimeFormat),formatTime:dn.bind(null,r,t.getDateTimeFormat),formatDateTimeRange:pn.bind(null,r,t.getDateTimeFormat),formatTimeToParts:mn.bind(null,r,t.getDateTimeFormat),formatPlural:gn.bind(null,r,t.getPluralRules),formatMessage:nn.bind(null,r,t),$t:nn.bind(null,r,t),formatList:bn.bind(null,r,t.getListFormat),formatListToParts:_n.bind(null,r,t.getListFormat),formatDisplayName:En.bind(null,r,t.getDisplayNames)})}function kn(n){return n?Object.keys(n).reduce((function(t,r){var a,o=n[r];return t[r]=Ie(o)?(a=o,function(n){return a(e.Children.toArray(n))}):o,t}),{}):n}var In=function(n,t,r,a){for(var o=[],l=4;l<arguments.length;l++)o[l-4]=arguments[l];var s=kn(a),u=nn.apply(void 0,i([n,t,r,s],o,!1));return Array.isArray(u)?e.Children.toArray(u):u},Sn=function(e,n){var t=e.defaultRichTextElements,r=o(e,["defaultRichTextElements"]),l=kn(t),i=wn(a(a(a({},We),r),{defaultRichTextElements:l}),n),s={locale:i.locale,timeZone:i.timeZone,fallbackOnEmptyString:i.fallbackOnEmptyString,formats:i.formats,defaultLocale:i.defaultLocale,defaultFormats:i.defaultFormats,messages:i.messages,onError:i.onError,defaultRichTextElements:l};return a(a({},i),{formatMessage:In.bind(null,s,i.formatters),$t:In.bind(null,s,i.formatters)})};function Bn(e){return{locale:e.locale,timeZone:e.timeZone,fallbackOnEmptyString:e.fallbackOnEmptyString,formats:e.formats,textComponent:e.textComponent,messages:e.messages,defaultLocale:e.defaultLocale,defaultFormats:e.defaultFormats,onError:e.onError,onWarn:e.onWarn,wrapRichTextChunksInFragment:e.wrapRichTextChunksInFragment,defaultRichTextElements:e.defaultRichTextElements}}var xn=function(n){function t(){var e=null!==n&&n.apply(this,arguments)||this;return e.cache={dateTime:{},number:{},message:{},relativeTime:{},pluralRules:{},list:{},displayNames:{}},e.state={cache:e.cache,intl:Sn(Bn(e.props),e.cache),prevConfig:Bn(e.props)},e}return r(t,n),t.getDerivedStateFromProps=function(e,n){var t=n.prevConfig,r=n.cache,a=Bn(e);return Ge(t,a)?null:{intl:Sn(a,r),prevConfig:a}},t.prototype.render=function(){return je(this.state.intl),e.createElement(Ye,{value:this.state.intl},this.props.children)},t.displayName="IntlProvider",t.defaultProps=We,t}(e.PureComponent);const Tn=xn;var Nn,Pn,Ln,Mn,Rn=l(942),On=l.n(Rn);function Hn(e){!function({element:e,isAddClassName:n,className:t}){n?e.classList.add(t):e.classList.remove(t)}({element:document.body,isAddClassName:e,className:"hide"})}!function(e){e.NobleGas="noble gas",e.DiatomicNonmetal="diatomic nonmetal",e.PolyatomicNonmetal="polyatomic nonmetal",e.TransitionMetal="transition metal",e.PostTransitionMetal="post-transition metal",e.Metalloid="metalloid",e.AlkaliMetal="alkali metal",e.AlkalineEarthMetal="alkaline earth metal",e.UnknownTransitionMetal="unknown, probably transition metal",e.UnknownPostTransitionMetal="unknown, probably post-transition metal",e.UnknownMetalloid="unknown, probably metalloid",e.UnknownNobleGas="unknown, predicted to be noble gas",e.UnknownAlkaliMetal="unknown, but predicted to be an alkali metal",e.Actinide="actinide",e.Lanthanide="lanthanide"}(Nn||(Nn={})),function(e){e.NobleGases="Noble gases",e.ReactiveNonMetals="Reactive non-metals",e.TransitionMetals="Transition metals",e.PostTransitionMetals="Post-transition metals",e.Metalloids="Metalloids",e.AlkaliMetals="Alkali metals",e.AlkalineEarthMetals="Alkaline earth metals",e.UnknownProperties="Unknown properties",e.Actinides="Actinides",e.Lanthanides="Lanthanides"}(Pn||(Pn={})),function(e){e.English="en",e.Russian="ru"}(Ln||(Ln={})),function(e){e.long="Длинная",e.superLong="Сверхдлинная"}(Mn||(Mn={}));const Dn={en:Ln.English,"en-US":Ln.English,ru:Ln.Russian,"ru-RU":Ln.Russian},zn={tableType:Mn.long,language:function(){const e=navigator.language;return Dn[e]}()||Ln.Russian,messages:{},isLoading:!0,periodicElements:[],selectedElement:void 0,selectedCategory:void 0,onSelectTableType:()=>()=>{},onSelectLanguage:()=>()=>{},onSelectElement:()=>()=>{},onSelectCategory:()=>()=>{}},Un=(0,e.createContext)(zn),Fn=({children:n})=>{const[t,r]=(0,e.useState)(zn.tableType),[a,o]=(0,e.useState)(zn.language),[i,s]=(0,e.useState)(zn.messages),[u,c]=(0,e.useState)(zn.isLoading),[f,d]=(0,e.useState)(zn.periodicElements),[p,h]=(0,e.useState)(zn.selectedElement),[m,A]=(0,e.useState)(zn.selectedCategory),g=(0,e.useCallback)((e=>()=>{r(e)}),[]),y=(0,e.useCallback)((e=>()=>{o(e)}),[]),v=(0,e.useCallback)((e=>()=>{Hn(Boolean(e&&e?.symbol!==p?.symbol)),A(void 0),h(e?.symbol===p?.symbol?void 0:e)}),[p]),b=(0,e.useCallback)((e=>()=>{A(e===m?void 0:e),h(void 0)}),[m]);(0,e.useEffect)((()=>{!async function(){try{const[n,t]=await Promise.all((e=a,e===Ln.Russian?[l.e(687).then(l.t.bind(l,687,19)),l.e(741).then(l.t.bind(l,741,19))]:[l.e(853).then(l.t.bind(l,853,19)),l.e(283).then(l.t.bind(l,283,19))]));console.info(t.default),n&&n.default&&n.default.MainTitle&&(document.title=n.default.MainTitle),s(n.default),d(t.default),c(!1)}catch(e){console.error(e)}var e}()}),[a]);const _={tableType:t,language:a,messages:i,isLoading:u,periodicElements:f,selectedElement:p,selectedCategory:m,onSelectTableType:g,onSelectLanguage:y,onSelectElement:v,onSelectCategory:b};return e.createElement(Un.Provider,{value:_},n)},jn=()=>(0,e.useContext)(Un);function Wn(e,n){const t=[];for(let r=e;r<=n;r++)t.push(r);return t}const Gn=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],[3,4,0,0,0,0,0,0,0,0,0,0,5,6,7,8,9,10],[11,12,0,0,0,0,0,0,0,0,0,0,13,14,15,16,17,18],Wn(19,36),Wn(37,54),[55,56,0,...Wn(72,86)],[87,88,0,...Wn(104,118)],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,...Wn(57,71)],[0,0,0,...Wn(89,103)]],Vn=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],[3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,6,7,8,9,10],[11,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,14,15,16,17,18],[19,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,...Wn(21,36)],[37,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,...Wn(39,54)],Wn(55,86),Wn(87,118)],Yn={[Mn.long]:Gn,[Mn.superLong]:Vn},$n={[Mn.long]:["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18"],[Mn.superLong]:["1","2","","","","","","","","","","","","","","","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18"]},Xn={[Mn.long]:["","1","2","3","4","5","6","7",""],[Mn.superLong]:["","1","2","3","4","5","6","7"]},Qn=[Pn.AlkaliMetals,Pn.AlkalineEarthMetals,Pn.TransitionMetals,Pn.PostTransitionMetals,Pn.Metalloids,Pn.ReactiveNonMetals,Pn.NobleGases,Pn.Lanthanides,Pn.Actinides,Pn.UnknownProperties],Kn={[Pn.AlkaliMetals]:[Nn.AlkaliMetal],[Pn.AlkalineEarthMetals]:[Nn.AlkalineEarthMetal],[Pn.TransitionMetals]:[Nn.TransitionMetal],[Pn.PostTransitionMetals]:[Nn.PostTransitionMetal],[Pn.Metalloids]:[Nn.Metalloid],[Pn.ReactiveNonMetals]:[Nn.DiatomicNonmetal,Nn.PolyatomicNonmetal],[Pn.NobleGases]:[Nn.NobleGas],[Pn.Lanthanides]:[Nn.Lanthanide],[Pn.Actinides]:[Nn.Actinide],[Pn.UnknownProperties]:[Nn.UnknownAlkaliMetal,Nn.UnknownMetalloid,Nn.UnknownNobleGas,Nn.UnknownPostTransitionMetal,Nn.UnknownTransitionMetal]};var Zn=l(72),qn=l.n(Zn),Jn=l(825),et=l.n(Jn),nt=l(659),tt=l.n(nt),rt=l(56),at=l.n(rt),ot=l(159),lt=l.n(ot),it=l(113),st=l.n(it),ut=l(809),ct={};ct.styleTagTransform=st(),ct.setAttributes=at(),ct.insert=tt().bind(null,"head"),ct.domAPI=et(),ct.insertStyleElement=lt(),qn()(ut.A,ct);const ft=ut.A&&ut.A.locals?ut.A.locals:void 0;var dt=l(638),pt={};pt.styleTagTransform=st(),pt.setAttributes=at(),pt.insert=tt().bind(null,"head"),pt.domAPI=et(),pt.insertStyleElement=lt(),qn()(dt.A,pt);const ht=dt.A&&dt.A.locals?dt.A.locals:void 0,mt=function(){const n=Xe(),{tableType:t}=jn(),r=(0,e.useMemo)((()=>t===Mn.superLong?Xn[t]:[...Xn[t],n.formatMessage({id:"Lanthanides"}),n.formatMessage({id:"Actinides"})]),[n,t]);return e.createElement("div",{className:ht.container},e.createElement("h4",null,e.createElement(Ze,{id:"PeriodsTitle"})),e.createElement("ul",{className:ht.list},r.map(((n,t)=>e.createElement("li",{key:`${n}-${t}`,className:On()(ft.periodItem,ht.item)},n)))))};var At=l(924),gt={};gt.styleTagTransform=st(),gt.setAttributes=at(),gt.insert=tt().bind(null,"head"),gt.domAPI=et(),gt.insertStyleElement=lt(),qn()(At.A,gt);const yt=At.A&&At.A.locals?At.A.locals:void 0,vt=function(){const{tableType:n}=jn(),t=$n[n];return e.createElement("div",{className:yt.container},e.createElement("h4",null,e.createElement(Ze,{id:"GroupsTitle"})),e.createElement("ul",{className:On()(ft.groups,yt.list)},t.map(((n,t)=>e.createElement("li",{key:`${n}-${t}`,className:ft.groupItem},n)))))},bt=e=>{switch(!0){case e===Nn.NobleGas:return"nobleGas";case e===Nn.DiatomicNonmetal||e===Nn.PolyatomicNonmetal:return"diatomicNonMetals";case e===Nn.TransitionMetal:return"transitionMetal";case e===Nn.PostTransitionMetal:return"postTransitionMetal";case e===Nn.Metalloid:return"metalloid";case e===Nn.AlkaliMetal:return"alkaliMetal";case e===Nn.AlkalineEarthMetal:return"alkalineEarthMetal";case e===Nn.UnknownTransitionMetal||e===Nn.UnknownPostTransitionMetal||e===Nn.UnknownMetalloid||e===Nn.UnknownNobleGas||e===Nn.UnknownAlkaliMetal:return"unknownProperties";case e===Nn.Actinide:return"actinide";case e===Nn.Lanthanide:return"lanthanide";default:return""}};var _t=l(916),Ct={};Ct.styleTagTransform=st(),Ct.setAttributes=at(),Ct.insert=tt().bind(null,"head"),Ct.domAPI=et(),Ct.insertStyleElement=lt(),qn()(_t.A,Ct);const Et=_t.A&&_t.A.locals?_t.A.locals:void 0,wt=function({cell:n}){const{periodicElements:t,selectedElement:r,selectedCategory:a,onSelectElement:o}=jn();if(0===n)return e.createElement("li",{className:ft.emptyCell});const l=t[n-1];return e.createElement("li",{key:l.symbol,className:On()(ft.cell,Et.cell,{[ft[bt(l.category)]]:!0,[Et.selectedCell]:a&&Kn[a].includes(l.category)||r?.symbol===l.symbol})},e.createElement("button",{className:Et.cellButton,onClick:o(l)},e.createElement("div",{className:Et.top},e.createElement("span",null,l.number),e.createElement("span",null,(i=l.atomic_mass,Math.round(1e4*i)/1e4))),e.createElement("strong",{className:Et.symbol},l.symbol),e.createElement("span",{className:Et.elementName},l.name)));var i};var kt=l(413),It={};It.styleTagTransform=st(),It.setAttributes=at(),It.insert=tt().bind(null,"head"),It.domAPI=et(),It.insertStyleElement=lt(),qn()(kt.A,It);const St=kt.A&&kt.A.locals?kt.A.locals:void 0,Bt=function(){const{tableType:n}=jn(),t=Yn[n];return e.createElement("ul",{className:St.list},t.map(((n,t)=>e.createElement("li",{key:t,className:On()(ft.row,St.row)},e.createElement("ul",null,n.map(((n,t)=>e.createElement(wt,{key:t,cell:n}))))))))};var xt=l(19),Tt={};Tt.styleTagTransform=st(),Tt.setAttributes=at(),Tt.insert=tt().bind(null,"head"),Tt.domAPI=et(),Tt.insertStyleElement=lt(),qn()(xt.A,Tt);const Nt=xt.A&&xt.A.locals?xt.A.locals:void 0,Pt=function(){return e.createElement("div",{className:Nt.container},e.createElement(mt,null),e.createElement("div",null,e.createElement(vt,null),e.createElement(Bt,null)))},Lt=e=>{switch(!0){case e===Pn.NobleGases:return"nobleGas";case e===Pn.ReactiveNonMetals:return"diatomicNonMetals";case e===Pn.TransitionMetals:return"transitionMetal";case e===Pn.PostTransitionMetals:return"postTransitionMetal";case e===Pn.Metalloids:return"metalloid";case e===Pn.AlkaliMetals:return"alkaliMetal";case e===Pn.AlkalineEarthMetals:return"alkalineEarthMetal";case e===Pn.UnknownProperties:return"unknownProperties";case e===Pn.Actinides:return"actinide";case e===Pn.Lanthanides:return"lanthanide";default:return""}};var Mt=l(292),Rt={};Rt.styleTagTransform=st(),Rt.setAttributes=at(),Rt.insert=tt().bind(null,"head"),Rt.domAPI=et(),Rt.insertStyleElement=lt(),qn()(Mt.A,Rt);const Ot=Mt.A&&Mt.A.locals?Mt.A.locals:void 0,Ht=function(){const{selectedCategory:n,onSelectCategory:t}=jn();return e.createElement("div",{className:Ot.container},e.createElement("ul",{className:Ot.categories},Qn.map((r=>e.createElement("li",{key:r,className:On()(Ot.category,{[Ot.selectedCategory]:n===r})},e.createElement("button",{onClick:t(r)},e.createElement("span",{className:On()(Ot.categoryIcon,ft[Lt(r)])}),e.createElement(Ze,{id:r})))))))};var Dt=l(961);const zt=function(n){const t=(0,e.useRef)(null);function r(e){t.current&&!t.current.contains(e.target)&&n()}return(0,e.useEffect)((()=>(document.addEventListener("mousedown",r),()=>{document.removeEventListener("mousedown",r)})),[]),t},Ut=function(n){(0,e.useEffect)((()=>{function e(e){"Escape"===e.key&&(e.preventDefault(),n())}return document.addEventListener("keydown",e),()=>{document.removeEventListener("keydown",e)}}),[])},Ft=e=>{var n;if("number"==typeof e)return n=e-273.15,Math.round(100*n)/100};var jt=l(36),Wt={};Wt.styleTagTransform=st(),Wt.setAttributes=at(),Wt.insert=tt().bind(null,"head"),Wt.domAPI=et(),Wt.insertStyleElement=lt(),qn()(jt.A,Wt);const Gt=jt.A&&jt.A.locals?jt.A.locals:void 0,Vt=function({href:n,className:t,content:r}){return e.createElement("a",{href:n,className:On()(Gt.link,t),target:"_blank",rel:"nofollow noopener"},r)};var Yt=l(527),$t={};$t.styleTagTransform=st(),$t.setAttributes=at(),$t.insert=tt().bind(null,"head"),$t.domAPI=et(),$t.insertStyleElement=lt(),qn()(Yt.A,$t);const Xt=Yt.A&&Yt.A.locals?Yt.A.locals:void 0,Qt=function({alt:n,src:t,className:r}){return e.createElement("div",{className:On()(Xt.container,r)},e.createElement("model-viewer",{alt:n,src:t,ar:!0,"shadow-intensity":"0","camera-controls":!0,"touch-action":"pan-y"}))};var Kt=l(393),Zt={};Zt.styleTagTransform=st(),Zt.setAttributes=at(),Zt.insert=tt().bind(null,"head"),Zt.domAPI=et(),Zt.insertStyleElement=lt(),qn()(Kt.A,Zt);const qt=Kt.A&&Kt.A.locals?Kt.A.locals:void 0,Jt=function(){const{periodicElements:n,selectedElement:t,onSelectElement:r}=jn(),a=(0,e.useMemo)((()=>{const e=t?t.number-1:void 0;if(e)return n.find((n=>n.number===e))}),[t]);return a?e.createElement("button",{title:a.name,className:On()(qt.button,qt.prev),onClick:r(a)}):null},er=function(){const{periodicElements:n,selectedElement:t,onSelectElement:r}=jn(),a=(0,e.useMemo)((()=>{const e=t?t.number+1:void 0;if(e&&!(e>n.length))return n.find((n=>n.number===e))}),[t]);return a?e.createElement("button",{title:a.name,className:On()(qt.button,qt.next),onClick:r(a)}):null},nr=/[a-zA-Z]([0-9]+)(\s|$)/g,tr=n=>{const t=n.replace(nr,((e,n,t)=>`${e[0]}<sup>${n}</sup>${t}`));return e.createElement("span",{dangerouslySetInnerHTML:{__html:t}})},rr=(n,{dimension:t,returnEmpty:r=!1,hasBrackets:a=!1}={})=>{const o=t?` ${t}`:"",l=r?"":" —";return"string"==typeof n&&n||"number"==typeof n?e.createElement("span",null,`${a?"(":""}${n}${o}${a?")":""}`):l},ar=/({{.*?}})/,or=({href:n,content:t})=>{if(!n||!t)return rr(t);const r=t.split(ar).filter(Boolean);let a=0;return e.createElement("span",null,r.map((t=>{if(t.startsWith("{{")&&t.endsWith("}}")){const r=e.createElement(Vt,{key:t,href:n[a],content:t.slice(2,-2)});return a+=1,r}return t})))};var lr=l(346),ir={};ir.styleTagTransform=st(),ir.setAttributes=at(),ir.insert=tt().bind(null,"head"),ir.domAPI=et(),ir.insertStyleElement=lt(),qn()(lr.A,ir);const sr=lr.A&&lr.A.locals?lr.A.locals:void 0,ur=function(){const n=Xe(),{selectedElement:t,onSelectElement:r}=jn(),a=zt(r(void 0));return Ut(r(void 0)),t?(0,Dt.createPortal)(e.createElement("div",{className:sr.backOverlay},e.createElement("div",{ref:a,className:sr.container},e.createElement("button",{title:n.formatMessage({id:"ClosePopupButtonTitle"}),className:sr.closeButton,onClick:r(void 0)}),e.createElement(Jt,null),e.createElement(er,null),e.createElement("div",{className:sr.scrollContainer},e.createElement("div",{className:sr.contentContainer},e.createElement(Qt,{alt:t.summary,src:t.bohr_model_3d}),e.createElement("h2",null,`${t.name} (${t.symbol})`),e.createElement("p",null,t.summary," ",e.createElement(Vt,{href:t.source,className:sr.linkToSource,content:e.createElement(Ze,{id:"LinkToSource"})})),e.createElement("ul",null,e.createElement("li",null,e.createElement(Ze,{id:"Appearance"}),rr(t.appearance)),e.createElement("li",null,e.createElement(Ze,{id:"StandardAtomicWeight"}),rr(t.atomic_mass))),e.createElement("h3",null,e.createElement(Ze,{id:"NameInPeriodicTable",values:{name:t.name}})),e.createElement("ul",null,e.createElement("li",null,e.createElement(Ze,{id:"AtomicNumber"}),rr(t.number)),e.createElement("li",null,e.createElement(Ze,{id:"Group"}),rr(t.group)),e.createElement("li",null,e.createElement(Ze,{id:"Period"}),rr(t.period)),e.createElement("li",null,e.createElement(Ze,{id:"Block"}),rr(t.block))),e.createElement("h3",null,e.createElement(Ze,{id:"PhysicalProperties"})),e.createElement("ul",null,e.createElement("li",null,e.createElement(Ze,{id:"PhaseAtSTP"}),rr(t.phase)),e.createElement("li",null,e.createElement(Ze,{id:"MeltingPoint"}),e.createElement("span",{className:sr.temperature},rr(t.melt,{dimension:"K"}),rr(Ft(t.melt),{dimension:"°C",returnEmpty:!0,hasBrackets:!0}))),e.createElement("li",null,e.createElement(Ze,{id:"BoilingPoint"}),e.createElement("span",{className:sr.temperature},rr(t.boil,{dimension:"K"}),rr(Ft(t.boil),{dimension:"°C",returnEmpty:!0,hasBrackets:!0}))),e.createElement("li",null,e.createElement(Ze,{id:"Density"}),rr(t.density,{dimension:"g/L"})),e.createElement("li",null,e.createElement(Ze,{id:"MolarHeatCapacity"}),rr(t.molar_heat,{dimension:"J/(mol·K)"}))),e.createElement("h3",null,e.createElement(Ze,{id:"AtomicProperties"})),e.createElement("ul",null,e.createElement("li",null,e.createElement(Ze,{id:"ElectronConfiguration"}),e.createElement("span",{className:sr.electronConfiguration},tr(t.electron_configuration),tr(t.electron_configuration_semantic))),e.createElement("li",null,e.createElement(Ze,{id:"ElectronsPerShell"}),rr(t.shells.join(", "))),e.createElement("li",null,e.createElement(Ze,{id:"ElectronegativityPaulingScale"}),rr(t.electronegativity_pauling)),e.createElement("li",null,e.createElement(Ze,{id:"IonizationEnergies"}),rr(t.ionization_energies.join(", ")))),e.createElement("h3",null,e.createElement(Ze,{id:"History"})),e.createElement("ul",null,e.createElement("li",null,e.createElement(Ze,{id:"Naming"}),or({href:t.naming_links,content:t.naming})),e.createElement("li",null,e.createElement(Ze,{id:"DiscoveredBy"}),or({href:t.discovered_by_links,content:t.discovered_by}))),e.createElement("img",{src:t.image.url,alt:t.image.title,className:sr.image}),e.createElement("small",null,t.image.title),e.createElement("small",{className:sr.attribution},t.image.attribution))))),document.body):null},cr=(0,e.createContext)({isOpen:!1,onOpenPopup:()=>{},onClosePopup:()=>{}}),fr=({children:n})=>{const[t,r]=(0,e.useState)(!1),a={isOpen:t,onOpenPopup:(0,e.useCallback)((()=>{r(!0),Hn(!0)}),[]),onClosePopup:(0,e.useCallback)((()=>{r(!1),Hn(!1)}),[])};return e.createElement(cr.Provider,{value:a},n)},dr=()=>(0,e.useContext)(cr),pr=l.p+"d794e33d5ace75352ef9.png",hr=[{title:"Bitcoin",network:"Bitcoin",items:[{coin:"BTC",address:"bc1qgzs2vdwglpq2u6s86t6lmgsaju0hmykp47rx9u"}]},{title:"Ethereum",network:"ERC-20",items:[{coin:"ETH",address:"0xec9f35C6C0F05cbEB18B78d070a5E1E7A807C524"},{coin:"USDT",address:"0xec9f35C6C0F05cbEB18B78d070a5E1E7A807C524"}]},{title:"TON",network:"TON",items:[{coin:"TON",address:"UQDzAmNiKNDC_Z7rbCM49GO7mwYyWTKiWvQp1GmsrEE_Jsuc"}]},{title:"Binance",network:"BNB Smart Chain",items:[{coin:"BNB",address:"0xec9f35C6C0F05cbEB18B78d070a5E1E7A807C524"},{coin:"USDT",address:"0xec9f35C6C0F05cbEB18B78d070a5E1E7A807C524"}]},{title:"Arbitrum",network:"Arbitrum",items:[{coin:"ETH",address:"0xec9f35C6C0F05cbEB18B78d070a5E1E7A807C524"},{coin:"USDT",address:"0xec9f35C6C0F05cbEB18B78d070a5E1E7A807C524"}]}];var mr=l(400),Ar={};Ar.styleTagTransform=st(),Ar.setAttributes=at(),Ar.insert=tt().bind(null,"head"),Ar.domAPI=et(),Ar.insertStyleElement=lt(),qn()(mr.A,Ar);const gr=mr.A&&mr.A.locals?mr.A.locals:void 0,yr=function({item:n,onCopyAddressText:t}){return e.createElement("div",{className:gr.content},e.createElement("span",null,n.coin),e.createElement("div",{className:gr.address},e.createElement("small",{className:gr.addressText},n.address),e.createElement("button",{onClick:t(n.address)},e.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"22",height:"23",fill:"none"},e.createElement("path",{d:"M20.429 20.179V6.82a.35.35 0 0 0-.123-.27.35.35 0 0 0-.27-.122H6.679c-.107 0-.201.04-.283.122a.367.367 0 0 0-.11.27V20.18c0 .106.037.196.11.27a.388.388 0 0 0 .283.122h13.357a.35.35 0 0 0 .27-.122.35.35 0 0 0 .123-.27ZM22 6.82V20.18c0 .54-.192 1.002-.577 1.387a1.892 1.892 0 0 1-1.387.577H6.679c-.54 0-1.003-.192-1.388-.577a1.891 1.891 0 0 1-.577-1.387V6.82c0-.54.193-1.002.577-1.387a1.892 1.892 0 0 1 1.388-.577h13.357c.54 0 1.002.192 1.387.577.385.385.577.847.577 1.387Zm-4.714-4.714v1.964h-1.572V2.107a.35.35 0 0 0-.123-.27.35.35 0 0 0-.27-.123H1.964c-.106 0-.2.041-.282.123a.367.367 0 0 0-.11.27v13.357c0 .107.036.2.11.283a.41.41 0 0 0 .282.11H3.93v1.572H1.964c-.54 0-1.002-.193-1.387-.577A1.892 1.892 0 0 1 0 15.464V2.107C0 1.567.192 1.105.577.72A1.891 1.891 0 0 1 1.964.143h13.357c.54 0 1.003.192 1.388.577.384.385.577.847.577 1.387Z"})))))};var vr=l(131),br={};br.styleTagTransform=st(),br.setAttributes=at(),br.insert=tt().bind(null,"head"),br.domAPI=et(),br.insertStyleElement=lt(),qn()(vr.A,br);const _r=vr.A&&vr.A.locals?vr.A.locals:void 0,Cr=function(){const n=Xe(),{onClosePopup:t}=dr(),r=zt(t);Ut(t);const a=(0,e.useCallback)((e=>()=>{try{navigator.clipboard.writeText(e)}catch(e){console.error(e)}}),[]);return(0,Dt.createPortal)(e.createElement("div",{className:_r.backOverlay},e.createElement("div",{ref:r,className:_r.container},e.createElement("button",{title:n.formatMessage({id:"ClosePopupButtonTitle"}),className:_r.closeButton,onClick:t}),e.createElement("div",{className:_r.scrollContainer},e.createElement("div",{className:_r.contentContainer},e.createElement("ul",{className:_r.list},hr.map((n=>e.createElement("li",{key:n.title,className:_r.listItem},e.createElement("h3",null,`${n.title} (${n.network})`),e.createElement("ul",null,n.items.map((n=>e.createElement("li",{key:`${n.coin}-${n.address}`},e.createElement(yr,{item:n,onCopyAddressText:a}))))))))))))),document.body)};var Er=l(351),wr={};wr.styleTagTransform=st(),wr.setAttributes=at(),wr.insert=tt().bind(null,"head"),wr.domAPI=et(),wr.insertStyleElement=lt(),qn()(Er.A,wr);const kr=Er.A&&Er.A.locals?Er.A.locals:void 0,Ir=()=>{const{isOpen:n,onOpenPopup:t}=dr();return e.createElement(e.Fragment,null,e.createElement("div",{className:kr.supportButtonContainer},e.createElement("button",{className:kr.supportButton,onClick:t},e.createElement(Ze,{id:"SupportMeTitle"}),e.createElement("img",{src:pr,alt:"Crypto BTC"}))),n&&e.createElement(Cr,null))};var Sr=l(959),Br={};Br.styleTagTransform=st(),Br.setAttributes=at(),Br.insert=tt().bind(null,"head"),Br.domAPI=et(),Br.insertStyleElement=lt(),qn()(Sr.A,Br);const xr=Sr.A&&Sr.A.locals?Sr.A.locals:void 0,Tr=function({options:n,currentValue:t,onSelectOption:r}){return e.createElement("ul",{className:xr.container},n.map(((n,a)=>e.createElement("li",{key:`${n.value}-${a}`,className:On()({[xr.active]:n.value===t})},e.createElement("button",{onClick:r(n.value)},n.label)))))};var Nr=l(765),Pr={};Pr.styleTagTransform=st(),Pr.setAttributes=at(),Pr.insert=tt().bind(null,"head"),Pr.domAPI=et(),Pr.insertStyleElement=lt(),qn()(Nr.A,Pr);const Lr=Nr.A&&Nr.A.locals?Nr.A.locals:void 0,Mr=[{label:"Рус",value:Ln.Russian},{label:"Eng",value:Ln.English}],Rr=function(){const{language:n,onSelectLanguage:t}=jn();return e.createElement("header",{className:Lr.header},e.createElement("h1",null,e.createElement(Ze,{id:"MainTitle"})),e.createElement(Tr,{options:Mr,currentValue:n,onSelectOption:t}))};var Or=l(559),Hr={};Hr.styleTagTransform=st(),Hr.setAttributes=at(),Hr.insert=tt().bind(null,"head"),Hr.domAPI=et(),Hr.insertStyleElement=lt(),qn()(Or.A,Hr);const Dr=Or.A&&Or.A.locals?Or.A.locals:void 0,zr=()=>e.createElement("footer",{className:Dr.footer},e.createElement("span",null,"2024"),e.createElement("a",{href:"https://github.com/alexeyvax/periodic-table",target:"_blank",rel:"nofollow noopener"},"alexeyvax"));var Ur=l(219),Fr={};Fr.styleTagTransform=st(),Fr.setAttributes=at(),Fr.insert=tt().bind(null,"head"),Fr.domAPI=et(),Fr.insertStyleElement=lt(),qn()(Ur.A,Fr);const jr=Ur.A&&Ur.A.locals?Ur.A.locals:void 0,Wr=[{label:e.createElement(Ze,{id:"LongTableTypeLabel"}),value:Mn.long},{label:e.createElement(Ze,{id:"SuperLongTableTypeLabel"}),value:Mn.superLong}],Gr=()=>{const{tableType:n,messages:t,language:r,isLoading:a,selectedElement:o,onSelectTableType:l}=jn();return e.createElement(Tn,{locale:r,messages:t},e.createElement("div",{className:jr.container},a?e.createElement("div",{className:jr.loader},"..."):e.createElement(e.Fragment,null,e.createElement("div",null,e.createElement("div",{className:ft.centerContainer},e.createElement(Rr,null),e.createElement(Tr,{options:Wr,currentValue:n,onSelectOption:l})),e.createElement("div",{className:On()(ft.centerContainer,{[ft.superLongCenterContainer]:n===Mn.superLong})},e.createElement(Pt,null)),e.createElement("div",{className:ft.centerContainer},e.createElement(Ht,null))),e.createElement("div",null,e.createElement("div",{className:ft.centerContainer},e.createElement(Ir,null)),e.createElement("div",{className:jr.wideContainer},e.createElement("div",{className:ft.centerContainer},e.createElement(zr,null)))),o&&e.createElement(ur,null))))};var Vr=l(478),Yr={};Yr.styleTagTransform=st(),Yr.setAttributes=at(),Yr.insert=tt().bind(null,"head"),Yr.domAPI=et(),Yr.insertStyleElement=lt(),qn()(Vr.A,Yr),Vr.A&&Vr.A.locals&&Vr.A.locals,(async()=>{const t=document.getElementById("root");(0,n.H)(t).render(e.createElement(Fn,null,e.createElement(fr,null,e.createElement(Gr,null))))})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,