/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e,n,t,r,a={219:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),l=t(314),o=t.n(l),i=t(517),s=o()(a());s.i(i.A),s.push([e.id,".styles__container___Mzk5M {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 100%;\n    height: 100%;\n}\n\n.styles__wideContainer___p8WVz {\n    width: 100%;\n    background-color: var(--dark);\n}\n\n.styles__loader___D1Tbr {\n    display: flex;\n    flex: 1;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    font-size: 32px;\n}\n","",{version:3,sources:["webpack://./src/components/App/styles.css"],names:[],mappings:"AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,8BAA8B;IAC9B,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,WAAW;IACX,6BAA6B;AACjC;;AAEA;IACI,aAAa;IACb,OAAO;IACP,uBAAuB;IACvB,mBAAmB;IACnB,YAAY;IACZ,eAAe;AACnB",sourcesContent:['@import "../../variables.css";\n\n.container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 100%;\n    height: 100%;\n}\n\n.wideContainer {\n    width: 100%;\n    background-color: var(--dark);\n}\n\n.loader {\n    display: flex;\n    flex: 1;\n    justify-content: center;\n    align-items: center;\n    height: 100%;\n    font-size: 32px;\n}\n'],sourceRoot:""}]),s.locals={container:"styles__container___Mzk5M",wideContainer:"styles__wideContainer___p8WVz",loader:"styles__loader___D1Tbr"};const u=s},292:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),l=t(314),o=t.n(l),i=t(517),s=o()(a());s.i(i.A),s.push([e.id,".styles__container___pa8WL {\n    display: flex;\n}\n\n.styles__categories___h8nCE {\n    display: flex;\n    width: 960px;\n    flex-wrap: wrap;\n    margin: 0 0 20px 0;\n    padding: 0;\n}\n\n.styles__category___zJXiQ {\n    width: 240px;\n    list-style: none;\n}\n\n.styles__category___zJXiQ button {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n    margin: 0;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n}\n\n.styles__categoryIcon____Bi_F {\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n    margin-right: 10px;\n    border-radius: 20px;\n    border: var(--border-size) solid transparent;\n}\n.styles__selectedCategory___xw9zV button .styles__categoryIcon____Bi_F {\n    border-color: var(--active-border-color);\n}\n","",{version:3,sources:["webpack://./src/components/Categories/styles.css"],names:[],mappings:"AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,eAAe;IACf,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,aAAa;IACb,SAAS;IACT,YAAY;IACZ,6BAA6B;IAC7B,eAAe;AACnB;;AAEA;IACI,qBAAqB;IACrB,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,mBAAmB;IACnB,4CAA4C;AAChD;AACA;IACI,wCAAwC;AAC5C",sourcesContent:['@import "../../variables.css";\n\n.container {\n    display: flex;\n}\n\n.categories {\n    display: flex;\n    width: 960px;\n    flex-wrap: wrap;\n    margin: 0 0 20px 0;\n    padding: 0;\n}\n\n.category {\n    width: 240px;\n    list-style: none;\n}\n\n.category button {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n    margin: 0;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n}\n\n.categoryIcon {\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n    margin-right: 10px;\n    border-radius: 20px;\n    border: var(--border-size) solid transparent;\n}\n.selectedCategory button .categoryIcon {\n    border-color: var(--active-border-color);\n}\n'],sourceRoot:""}]),s.locals={container:"styles__container___pa8WL",categories:"styles__categories___h8nCE",category:"styles__category___zJXiQ",categoryIcon:"styles__categoryIcon____Bi_F",selectedCategory:"styles__selectedCategory___xw9zV"};const u=s},346:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),l=t(314),o=t.n(l),i=t(517),s=o()(a());s.i(i.A),s.push([e.id,'@keyframes styles__fadein___iPGGh {\n    from { opacity: 0; }\n    to { opacity: 1; }\n}\n\n.styles__backOverlay___cnBH0 {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    animation: styles__fadein___iPGGh 0.2s ease-out forwards;\n}\n\n.styles__container___YixGt {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    overflow: hidden;\n    width: 100%;\n    height: 90%;\n    max-width: 900px;\n    max-height: 800px;\n    transform: translateX(-50%) translateY(-50%);\n    background-color: var(--white);\n}\n\n.styles__closeButton___TLYLl {\n    position: absolute;\n    top: 0;\n    right: 10px;\n    width: 60px;\n    height: 60px;\n    background-color: transparent;\n    cursor: pointer;\n    border: none;\n}\n.styles__closeButton___TLYLl::before {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 2px;\n    height: 30px;\n    background-color: var(--light-grey);\n    content: "";\n    transform: translateX(-50%) translateY(-50%) rotate(45deg);\n}\n.styles__closeButton___TLYLl::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 2px;\n    height: 30px;\n    background-color: var(--light-grey);\n    content: "";\n    transform: translateX(-50%) translateY(-50%) rotate(-45deg);\n}\n\n.styles__scrollContainer___NV4m8 {\n    overflow: auto;\n    width: 100%;\n    height: 100%;\n}\n\n.styles__contentContainer___ygQKR {\n    max-width: 740px;\n    width: 100%;\n    padding: 0 20px 20px;\n    margin: 0 auto;\n    box-sizing: border-box;\n}\n\n.styles__contentContainer___ygQKR model-viewer {\n    width: 100%;\n    height: 300px;\n}\n\n.styles__contentContainer___ygQKR h2 {\n    font-size: 26px;\n    text-align: center;\n}\n\n.styles__contentContainer___ygQKR ul {\n    margin: 0;\n    padding: 0;\n}\n\n.styles__contentContainer___ygQKR ul li {\n    display: flex;\n    list-style: none;\n    margin-bottom: 2px;\n}\n\n.styles__contentContainer___ygQKR ul li span {\n    flex: 1;\n    margin-left: 4px;\n}\n\n.styles__linkToSource___uldiQ {\n    white-space: nowrap;\n}\n\n.styles__electronConfiguration___ZLG31 {\n    display: flex;\n    flex-direction: column;\n    font-size: 14px;\n    line-height: 1.2;\n}\n.styles__electronConfiguration___ZLG31 > span {\n    margin-bottom: 4px;\n}\n\n.styles__image___SQSYE {\n    margin-top: 30px;\n    width: 100%;\n}\n\n.styles__attribution___hWAgz {\n    display: block;\n    margin-top: 10px;\n    font-size: 11px;\n}\n',"",{version:3,sources:["webpack://./src/components/ElementPopup/styles.css"],names:[],mappings:"AAEA;IACI,OAAO,UAAU,EAAE;IACnB,KAAK,UAAU,EAAE;AACrB;;AAEA;IACI,eAAe;IACf,MAAM;IACN,OAAO;IACP,WAAW;IACX,YAAY;IACZ,UAAU;IACV,oCAAoC;IACpC,wDAAwC;AAC5C;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gBAAgB;IAChB,WAAW;IACX,WAAW;IACX,gBAAgB;IAChB,iBAAiB;IACjB,4CAA4C;IAC5C,8BAA8B;AAClC;;AAEA;IACI,kBAAkB;IAClB,MAAM;IACN,WAAW;IACX,WAAW;IACX,YAAY;IACZ,6BAA6B;IAC7B,eAAe;IACf,YAAY;AAChB;AACA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,UAAU;IACV,YAAY;IACZ,mCAAmC;IACnC,WAAW;IACX,0DAA0D;AAC9D;AACA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,UAAU;IACV,YAAY;IACZ,mCAAmC;IACnC,WAAW;IACX,2DAA2D;AAC/D;;AAEA;IACI,cAAc;IACd,WAAW;IACX,YAAY;AAChB;;AAEA;IACI,gBAAgB;IAChB,WAAW;IACX,oBAAoB;IACpB,cAAc;IACd,sBAAsB;AAC1B;;AAEA;IACI,WAAW;IACX,aAAa;AACjB;;AAEA;IACI,eAAe;IACf,kBAAkB;AACtB;;AAEA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,OAAO;IACP,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,eAAe;IACf,gBAAgB;AACpB;AACA;IACI,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;IAChB,WAAW;AACf;;AAEA;IACI,cAAc;IACd,gBAAgB;IAChB,eAAe;AACnB",sourcesContent:['@import "../../variables.css";\n\n@keyframes fadein {\n    from { opacity: 0; }\n    to { opacity: 1; }\n}\n\n.backOverlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    animation: fadein 0.2s ease-out forwards;\n}\n\n.container {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    overflow: hidden;\n    width: 100%;\n    height: 90%;\n    max-width: 900px;\n    max-height: 800px;\n    transform: translateX(-50%) translateY(-50%);\n    background-color: var(--white);\n}\n\n.closeButton {\n    position: absolute;\n    top: 0;\n    right: 10px;\n    width: 60px;\n    height: 60px;\n    background-color: transparent;\n    cursor: pointer;\n    border: none;\n}\n.closeButton::before {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 2px;\n    height: 30px;\n    background-color: var(--light-grey);\n    content: "";\n    transform: translateX(-50%) translateY(-50%) rotate(45deg);\n}\n.closeButton::after {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 2px;\n    height: 30px;\n    background-color: var(--light-grey);\n    content: "";\n    transform: translateX(-50%) translateY(-50%) rotate(-45deg);\n}\n\n.scrollContainer {\n    overflow: auto;\n    width: 100%;\n    height: 100%;\n}\n\n.contentContainer {\n    max-width: 740px;\n    width: 100%;\n    padding: 0 20px 20px;\n    margin: 0 auto;\n    box-sizing: border-box;\n}\n\n.contentContainer model-viewer {\n    width: 100%;\n    height: 300px;\n}\n\n.contentContainer h2 {\n    font-size: 26px;\n    text-align: center;\n}\n\n.contentContainer ul {\n    margin: 0;\n    padding: 0;\n}\n\n.contentContainer ul li {\n    display: flex;\n    list-style: none;\n    margin-bottom: 2px;\n}\n\n.contentContainer ul li span {\n    flex: 1;\n    margin-left: 4px;\n}\n\n.linkToSource {\n    white-space: nowrap;\n}\n\n.electronConfiguration {\n    display: flex;\n    flex-direction: column;\n    font-size: 14px;\n    line-height: 1.2;\n}\n.electronConfiguration > span {\n    margin-bottom: 4px;\n}\n\n.image {\n    margin-top: 30px;\n    width: 100%;\n}\n\n.attribution {\n    display: block;\n    margin-top: 10px;\n    font-size: 11px;\n}\n'],sourceRoot:""}]),s.locals={backOverlay:"styles__backOverlay___cnBH0",fadein:"styles__fadein___iPGGh",container:"styles__container___YixGt",closeButton:"styles__closeButton___TLYLl",scrollContainer:"styles__scrollContainer___NV4m8",contentContainer:"styles__contentContainer___ygQKR",linkToSource:"styles__linkToSource___uldiQ",electronConfiguration:"styles__electronConfiguration___ZLG31",image:"styles__image___SQSYE",attribution:"styles__attribution___hWAgz"};const u=s},559:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),l=t(314),o=t.n(l),i=t(517),s=o()(a());s.i(i.A),s.push([e.id,".styles__footer___Wv8W7 {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    padding-top: 20px;\n    padding-bottom: 20px;\n}\n\n.styles__footer___Wv8W7 span,\n.styles__footer___Wv8W7 a {\n    color: var(--white);\n    font-size: 14px;\n}\n.styles__footer___Wv8W7 a:hover {\n    text-decoration: none;\n}\n","",{version:3,sources:["webpack://./src/components/Footer/styles.css"],names:[],mappings:"AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,WAAW;IACX,iBAAiB;IACjB,oBAAoB;AACxB;;AAEA;;IAEI,mBAAmB;IACnB,eAAe;AACnB;AACA;IACI,qBAAqB;AACzB",sourcesContent:['@import "../../variables.css";\n\n.footer {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    padding-top: 20px;\n    padding-bottom: 20px;\n}\n\n.footer span,\n.footer a {\n    color: var(--white);\n    font-size: 14px;\n}\n.footer a:hover {\n    text-decoration: none;\n}\n'],sourceRoot:""}]),s.locals={footer:"styles__footer___Wv8W7"};const u=s},916:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),l=t(314),o=t.n(l),i=t(517),s=o()(a());s.i(i.A),s.push([e.id,".styles__cell___orNp1 {\n    list-style: none;\n    border: var(--border-size) solid transparent;\n    overflow: hidden;\n}\n\n.styles__selectedCell___oBZ16 {\n    border-color: var(--active-border-color);\n}\n\n.styles__cellButton___cqja8 {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    flex-direction: column;\n    justify-content: space-between;\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n}\n\n.styles__top___ihZpO {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    font-size: var(--cell-small-text-size);\n}\n\n.styles__symbol___MoSNv {\n    width: 100%;\n    font-size: var(--cell-main-text-size);\n    text-align: center;\n}\n\n.styles__elementName___iizDV {\n    width: 100%;\n    font-size: var(--cell-small-text-size);\n    text-align: center;\n}\n","",{version:3,sources:["webpack://./src/components/PeriodicTable/Cell/styles.css"],names:[],mappings:"AAEA;IACI,gBAAgB;IAChB,4CAA4C;IAC5C,gBAAgB;AACpB;;AAEA;IACI,wCAAwC;AAC5C;;AAEA;IACI,aAAa;IACb,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,8BAA8B;IAC9B,sBAAsB;IACtB,UAAU;IACV,SAAS;IACT,YAAY;IACZ,6BAA6B;IAC7B,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,WAAW;IACX,sCAAsC;AAC1C;;AAEA;IACI,WAAW;IACX,qCAAqC;IACrC,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,sCAAsC;IACtC,kBAAkB;AACtB",sourcesContent:['@import "../../../variables.css";\n\n.cell {\n    list-style: none;\n    border: var(--border-size) solid transparent;\n    overflow: hidden;\n}\n\n.selectedCell {\n    border-color: var(--active-border-color);\n}\n\n.cellButton {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    flex-direction: column;\n    justify-content: space-between;\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n}\n\n.top {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n    font-size: var(--cell-small-text-size);\n}\n\n.symbol {\n    width: 100%;\n    font-size: var(--cell-main-text-size);\n    text-align: center;\n}\n\n.elementName {\n    width: 100%;\n    font-size: var(--cell-small-text-size);\n    text-align: center;\n}\n'],sourceRoot:""}]),s.locals={cell:"styles__cell___orNp1",selectedCell:"styles__selectedCell___oBZ16",cellButton:"styles__cellButton___cqja8",top:"styles__top___ihZpO",symbol:"styles__symbol___MoSNv",elementName:"styles__elementName___iizDV"};const u=s},924:(e,n,t)=>{"use strict";t.d(n,{A:()=>i});var r=t(354),a=t.n(r),l=t(314),o=t.n(l)()(a());o.push([e.id,"\n.styles__container___eh52j h4 {\n    height: 20px;\n    margin: 0;\n    text-align: center;\n}\n\n.styles__list___wTCaK {\n    margin-bottom: 4px;\n    font-size: 14px;\n}\n","",{version:3,sources:["webpack://./src/components/PeriodicTable/Groups/styles.css"],names:[],mappings:";AACA;IACI,YAAY;IACZ,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,eAAe;AACnB",sourcesContent:["\n.container h4 {\n    height: 20px;\n    margin: 0;\n    text-align: center;\n}\n\n.list {\n    margin-bottom: 4px;\n    font-size: 14px;\n}\n"],sourceRoot:""}]),o.locals={container:"styles__container___eh52j",list:"styles__list___wTCaK"};const i=o},638:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),l=t(314),o=t.n(l),i=t(517),s=o()(a());s.i(i.A),s.push([e.id,".styles__container___U_sTq {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.styles__container___U_sTq h4 {\n    margin: 0;\n    font-size: 15px;\n    writing-mode: vertical-lr;\n    text-orientation: upright;\n}\n\n.styles__list____ShVU {\n    display: flex;\n    flex-direction: column;\n    margin: 20px 0 0 0;\n    padding: 0;\n}\n\n.styles__item___DIiD_ {\n    display: flex;\n    width: var(--cell-size);\n    height: var(--cell-size);\n    padding: 2px;\n    margin-bottom: 4px;\n    font-size: 14px;\n    box-sizing: border-box;\n}\n","",{version:3,sources:["webpack://./src/components/PeriodicTable/Periods/styles.css"],names:[],mappings:"AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,mBAAmB;AACvB;;AAEA;IACI,SAAS;IACT,eAAe;IACf,yBAAyB;IACzB,yBAAyB;AAC7B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,wBAAwB;IACxB,YAAY;IACZ,kBAAkB;IAClB,eAAe;IACf,sBAAsB;AAC1B",sourcesContent:['@import "../../../variables.css";\n\n.container {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n}\n\n.container h4 {\n    margin: 0;\n    font-size: 15px;\n    writing-mode: vertical-lr;\n    text-orientation: upright;\n}\n\n.list {\n    display: flex;\n    flex-direction: column;\n    margin: 20px 0 0 0;\n    padding: 0;\n}\n\n.item {\n    display: flex;\n    width: var(--cell-size);\n    height: var(--cell-size);\n    padding: 2px;\n    margin-bottom: 4px;\n    font-size: 14px;\n    box-sizing: border-box;\n}\n'],sourceRoot:""}]),s.locals={container:"styles__container___U_sTq",list:"styles__list____ShVU",item:"styles__item___DIiD_"};const u=s},413:(e,n,t)=>{"use strict";t.d(n,{A:()=>i});var r=t(354),a=t.n(r),l=t(314),o=t.n(l)()(a());o.push([e.id,".styles__list___wz0zC {\n    margin: 0;\n    padding: 0;\n}\n\n.styles__row___ctAlV {\n    list-style: none;\n    margin-bottom: 4px;\n}\n\n.styles__row___ctAlV:last-child {\n    margin-bottom: 0;\n}\n","",{version:3,sources:["webpack://./src/components/PeriodicTable/Rows/styles.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;AACd;;AAEA;IACI,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;AACpB",sourcesContent:[".list {\n    margin: 0;\n    padding: 0;\n}\n\n.row {\n    list-style: none;\n    margin-bottom: 4px;\n}\n\n.row:last-child {\n    margin-bottom: 0;\n}\n"],sourceRoot:""}]),o.locals={list:"styles__list___wz0zC",row:"styles__row___ctAlV"};const i=o},19:(e,n,t)=>{"use strict";t.d(n,{A:()=>i});var r=t(354),a=t.n(r),l=t(314),o=t.n(l)()(a());o.push([e.id,".styles__container___r4uQ3 {\n    display: flex;\n    margin-bottom: 20px;\n    overflow-x: auto;\n}\n","",{version:3,sources:["webpack://./src/components/PeriodicTable/styles.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,gBAAgB;AACpB",sourcesContent:[".container {\n    display: flex;\n    margin-bottom: 20px;\n    overflow-x: auto;\n}\n"],sourceRoot:""}]),o.locals={container:"styles__container___r4uQ3"};const i=o},959:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),l=t(314),o=t.n(l),i=t(517),s=o()(a());s.i(i.A),s.push([e.id,".styles__container___ZbLxv {\n    display: inline-flex;\n    flex-direction: row;\n    margin: 0;\n    padding: 4px;\n    border: var(--border-size) solid var(--grey);\n    border-radius: 4px;\n}\n\n.styles__container___ZbLxv li {\n    list-style: none;\n}\n\n.styles__container___ZbLxv li button {\n    margin: 0;\n    padding: 6px 12px;\n    color: var(--grey);\n    cursor: pointer;\n    background-color: transparent;\n    border: none;\n    border-radius: 4px;\n}\n\n.styles__container___ZbLxv li.styles__active___Sanqr button {\n    color: var(--white);\n    cursor: default;\n    background-color: var(--blue);\n}\n","",{version:3,sources:["webpack://./src/components/Switcher/styles.css"],names:[],mappings:"AAEA;IACI,oBAAoB;IACpB,mBAAmB;IACnB,SAAS;IACT,YAAY;IACZ,4CAA4C;IAC5C,kBAAkB;AACtB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,SAAS;IACT,iBAAiB;IACjB,kBAAkB;IAClB,eAAe;IACf,6BAA6B;IAC7B,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,mBAAmB;IACnB,eAAe;IACf,6BAA6B;AACjC",sourcesContent:['@import "../../variables.css";\n\n.container {\n    display: inline-flex;\n    flex-direction: row;\n    margin: 0;\n    padding: 4px;\n    border: var(--border-size) solid var(--grey);\n    border-radius: 4px;\n}\n\n.container li {\n    list-style: none;\n}\n\n.container li button {\n    margin: 0;\n    padding: 6px 12px;\n    color: var(--grey);\n    cursor: pointer;\n    background-color: transparent;\n    border: none;\n    border-radius: 4px;\n}\n\n.container li.active button {\n    color: var(--white);\n    cursor: default;\n    background-color: var(--blue);\n}\n'],sourceRoot:""}]),s.locals={container:"styles__container___ZbLxv",active:"styles__active___Sanqr"};const u=s},765:(e,n,t)=>{"use strict";t.d(n,{A:()=>i});var r=t(354),a=t.n(r),l=t(314),o=t.n(l)()(a());o.push([e.id,".styles__header___nD0wM {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n}\n","",{version:3,sources:["webpack://./src/components/Title/styles.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;AACvB",sourcesContent:[".header {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n}\n"],sourceRoot:""}]),o.locals={header:"styles__header___nD0wM"};const i=o},809:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),l=t(314),o=t.n(l),i=t(517),s=o()(a());s.i(i.A),s.push([e.id,".sharedStyles__centerContainer___bZmFi {\n    width: 100%;\n    max-width: var(--max-page-width);\n    margin: 0 auto;\n    padding: 0 20px;\n    box-sizing: border-box;\n}\n.sharedStyles__superLongCenterContainer___tAABl {\n    max-width: var(--super-long-table-width);\n}\n\n.sharedStyles__periodItem___K8seE,\n.sharedStyles__groupItem___bfO9z {\n    align-items: center;\n    justify-content: center;\n    list-style: none;\n}\n\n.sharedStyles__groups___RKg_3,\n.sharedStyles__row___IqTA7 > ul {\n    display: flex;\n    flex-direction: row;\n    margin: 0;\n    padding: 0;\n}\n\n.sharedStyles__groupItem___bfO9z,\n.sharedStyles__cell___Jera5,\n.sharedStyles__emptyCell___NKTYb {\n    display: flex;\n    width: var(--cell-size);\n    height: var(--cell-size);\n    padding: 2px;\n    margin-right: 4px;\n    box-sizing: border-box;\n}\n.sharedStyles__groupItem___bfO9z:last-child,\n.sharedStyles__cell___Jera5:last-child,\n.sharedStyles__emptyCell___NKTYb:last-child {\n    margin-right: 0;\n}\n\n.sharedStyles__nobleGas___K8KZy {\n    background-color: var(--nobble-gas-color);\n}\n.sharedStyles__diatomicNonMetals___vSmhy {\n    background-color: var(--diatomic-non-metals-color);\n}\n.sharedStyles__transitionMetal___wRwTz {\n    background-color: var(--transition-metal-color);\n}\n.sharedStyles__postTransitionMetal___AUrXn {\n    background-color: var(--post-transition-metal-color);\n}\n.sharedStyles__metalloid___M855d {\n    background-color: var(--metalloid-color);\n}\n.sharedStyles__alkaliMetal___coWtC {\n    background-color: var(--alkali-metal-color);\n}\n.sharedStyles__alkalineEarthMetal___s4Jh3 {\n    background-color: var(--alkaline-earth-metal-color);\n}\n.sharedStyles__unknownProperties___dUEWx {\n    background-color: var(--unknown-properties-color);\n}\n.sharedStyles__actinide___Ns3Yi {\n    background-color: var(--actinide-color);\n}\n.sharedStyles__lanthanide___SmTfz {\n    background-color: var(--lanthanide-color);\n}\n","",{version:3,sources:["webpack://./src/sharedStyles.css"],names:[],mappings:"AAEA;IACI,WAAW;IACX,gCAAgC;IAChC,cAAc;IACd,eAAe;IACf,sBAAsB;AAC1B;AACA;IACI,wCAAwC;AAC5C;;AAEA;;IAEI,mBAAmB;IACnB,uBAAuB;IACvB,gBAAgB;AACpB;;AAEA;;IAEI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,UAAU;AACd;;AAEA;;;IAGI,aAAa;IACb,uBAAuB;IACvB,wBAAwB;IACxB,YAAY;IACZ,iBAAiB;IACjB,sBAAsB;AAC1B;AACA;;;IAGI,eAAe;AACnB;;AAEA;IACI,yCAAyC;AAC7C;AACA;IACI,kDAAkD;AACtD;AACA;IACI,+CAA+C;AACnD;AACA;IACI,oDAAoD;AACxD;AACA;IACI,wCAAwC;AAC5C;AACA;IACI,2CAA2C;AAC/C;AACA;IACI,mDAAmD;AACvD;AACA;IACI,iDAAiD;AACrD;AACA;IACI,uCAAuC;AAC3C;AACA;IACI,yCAAyC;AAC7C",sourcesContent:['@import "./variables.css";\n\n.centerContainer {\n    width: 100%;\n    max-width: var(--max-page-width);\n    margin: 0 auto;\n    padding: 0 20px;\n    box-sizing: border-box;\n}\n.superLongCenterContainer {\n    max-width: var(--super-long-table-width);\n}\n\n.periodItem,\n.groupItem {\n    align-items: center;\n    justify-content: center;\n    list-style: none;\n}\n\n.groups,\n.row > ul {\n    display: flex;\n    flex-direction: row;\n    margin: 0;\n    padding: 0;\n}\n\n.groupItem,\n.cell,\n.emptyCell {\n    display: flex;\n    width: var(--cell-size);\n    height: var(--cell-size);\n    padding: 2px;\n    margin-right: 4px;\n    box-sizing: border-box;\n}\n.groupItem:last-child,\n.cell:last-child,\n.emptyCell:last-child {\n    margin-right: 0;\n}\n\n.nobleGas {\n    background-color: var(--nobble-gas-color);\n}\n.diatomicNonMetals {\n    background-color: var(--diatomic-non-metals-color);\n}\n.transitionMetal {\n    background-color: var(--transition-metal-color);\n}\n.postTransitionMetal {\n    background-color: var(--post-transition-metal-color);\n}\n.metalloid {\n    background-color: var(--metalloid-color);\n}\n.alkaliMetal {\n    background-color: var(--alkali-metal-color);\n}\n.alkalineEarthMetal {\n    background-color: var(--alkaline-earth-metal-color);\n}\n.unknownProperties {\n    background-color: var(--unknown-properties-color);\n}\n.actinide {\n    background-color: var(--actinide-color);\n}\n.lanthanide {\n    background-color: var(--lanthanide-color);\n}\n'],sourceRoot:""}]),s.locals={centerContainer:"sharedStyles__centerContainer___bZmFi",superLongCenterContainer:"sharedStyles__superLongCenterContainer___tAABl",periodItem:"sharedStyles__periodItem___K8seE",groupItem:"sharedStyles__groupItem___bfO9z",groups:"sharedStyles__groups___RKg_3",row:"sharedStyles__row___IqTA7",cell:"sharedStyles__cell___Jera5",emptyCell:"sharedStyles__emptyCell___NKTYb",nobleGas:"sharedStyles__nobleGas___K8KZy",diatomicNonMetals:"sharedStyles__diatomicNonMetals___vSmhy",transitionMetal:"sharedStyles__transitionMetal___wRwTz",postTransitionMetal:"sharedStyles__postTransitionMetal___AUrXn",metalloid:"sharedStyles__metalloid___M855d",alkaliMetal:"sharedStyles__alkaliMetal___coWtC",alkalineEarthMetal:"sharedStyles__alkalineEarthMetal___s4Jh3",unknownProperties:"sharedStyles__unknownProperties___dUEWx",actinide:"sharedStyles__actinide___Ns3Yi",lanthanide:"sharedStyles__lanthanide___SmTfz"};const u=s},478:(e,n,t)=>{"use strict";t.d(n,{A:()=>u});var r=t(354),a=t.n(r),l=t(314),o=t.n(l),i=t(517),s=o()(a());s.i(i.A),s.push([e.id,'html {\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    height: 100%;\n    font-size: var(--main-font-size);\n    font-family: "Montserrat", serif;\n}\n\n#root {\n    height: 100%;\n}\n\n.hide {\n    overflow: hidden;\n}\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAEA;IACI,YAAY;AAChB;;AAEA;IACI,SAAS;IACT,YAAY;IACZ,gCAAgC;IAChC,gCAAgC;AACpC;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,gBAAgB;AACpB",sourcesContent:['@import "./variables.css";\n\nhtml {\n    height: 100%;\n}\n\nbody {\n    margin: 0;\n    height: 100%;\n    font-size: var(--main-font-size);\n    font-family: "Montserrat", serif;\n}\n\n:global(#root) {\n    height: 100%;\n}\n\n:global(.hide) {\n    overflow: hidden;\n}\n'],sourceRoot:""}]),s.locals={};const u=s},517:(e,n,t)=>{"use strict";t.d(n,{A:()=>i});var r=t(354),a=t.n(r),l=t(314),o=t.n(l)()(a());o.push([e.id,":root {\n    --main-font-size: 16px;\n    --max-page-width: 1280px;\n    --super-long-table-width: 2180px;\n\n    --cell-size: 60px;\n    --cell-size-mini: 4px;\n    --cell-main-text-size: 18px;\n    --cell-small-text-size: 9px;\n    --border-size: 1px;\n    \n    /* colors */\n    --active-border-color: #000000;\n    --dark: #242329;\n    --white: #ffffff;\n    --light-grey: #a0a0a0;\n    --grey: #dedede;\n    --blue: #5c47f6;\n\n    --nobble-gas-color: #ffe7eb;\n    --diatomic-non-metals-color: #e2eeff;\n    --transition-metal-color:#f3e8fd;\n    --post-transition-metal-color: #d6f9e8;\n    --metalloid-color: #fef7e1;\n    --alkali-metal-color: #d8f8ff;\n    --alkaline-earth-metal-color: #ffe7e7;\n    --unknown-properties-color: #e7e7ea;\n    --actinide-color: #fee6d4;\n    --lanthanide-color: #dff3ff;\n}\n","",{version:3,sources:["webpack://./src/variables.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,wBAAwB;IACxB,gCAAgC;;IAEhC,iBAAiB;IACjB,qBAAqB;IACrB,2BAA2B;IAC3B,2BAA2B;IAC3B,kBAAkB;;IAElB,WAAW;IACX,8BAA8B;IAC9B,eAAe;IACf,gBAAgB;IAChB,qBAAqB;IACrB,eAAe;IACf,eAAe;;IAEf,2BAA2B;IAC3B,oCAAoC;IACpC,gCAAgC;IAChC,sCAAsC;IACtC,0BAA0B;IAC1B,6BAA6B;IAC7B,qCAAqC;IACrC,mCAAmC;IACnC,yBAAyB;IACzB,2BAA2B;AAC/B",sourcesContent:[":root {\n    --main-font-size: 16px;\n    --max-page-width: 1280px;\n    --super-long-table-width: 2180px;\n\n    --cell-size: 60px;\n    --cell-size-mini: 4px;\n    --cell-main-text-size: 18px;\n    --cell-small-text-size: 9px;\n    --border-size: 1px;\n    \n    /* colors */\n    --active-border-color: #000000;\n    --dark: #242329;\n    --white: #ffffff;\n    --light-grey: #a0a0a0;\n    --grey: #dedede;\n    --blue: #5c47f6;\n\n    --nobble-gas-color: #ffe7eb;\n    --diatomic-non-metals-color: #e2eeff;\n    --transition-metal-color:#f3e8fd;\n    --post-transition-metal-color: #d6f9e8;\n    --metalloid-color: #fef7e1;\n    --alkali-metal-color: #d8f8ff;\n    --alkaline-earth-metal-color: #ffe7e7;\n    --unknown-properties-color: #e7e7ea;\n    --actinide-color: #fee6d4;\n    --lanthanide-color: #dff3ff;\n}\n"],sourceRoot:""}]),o.locals={};const i=o},314:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,l){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(o[s]=!0)}for(var u=0;u<e.length;u++){var c=[].concat(e[u]);r&&o[c[0]]||(void 0!==l&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=l),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),n.push(c))}},n}},354:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),l="/*# ".concat(a," */");return[n].concat([l]).join("\n")}return[n].join("\n")}},146:(e,n,t)=>{"use strict";var r=t(363),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},l={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},o={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},i={};function s(e){return r.isMemo(e)?o:i[e.$$typeof]||a}i[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},i[r.Memo]=o;var u=Object.defineProperty,c=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(n,t,r){if("string"!=typeof t){if(h){var a=p(t);a&&a!==h&&e(n,a,r)}var o=c(t);f&&(o=o.concat(f(t)));for(var i=s(n),m=s(t),g=0;g<o.length;++g){var y=o[g];if(!(l[y]||r&&r[y]||m&&m[y]||i&&i[y])){var v=d(t,y);try{u(n,y,v)}catch(e){}}}}return n}},551:(e,n,t)=>{"use strict";var r=t(540),a=t(982);function l(e){for(var n="https://reactjs.org/docs/error-decoder.html?invariant="+e,t=1;t<arguments.length;t++)n+="&args[]="+encodeURIComponent(arguments[t]);return"Minified React error #"+e+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,i={};function s(e,n){u(e,n),u(e+"Capture",n)}function u(e,n){for(i[e]=n,e=0;e<n.length;e++)o.add(n[e])}var c=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),f=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},h={};function m(e,n,t,r,a,l,o){this.acceptsBooleans=2===n||3===n||4===n,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=t,this.propertyName=e,this.type=n,this.sanitizeURL=l,this.removeEmptyString=o}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var n=e[0];g[n]=new m(n,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function v(e){return e[1].toUpperCase()}function b(e,n,t,r){var a=g.hasOwnProperty(n)?g[n]:null;(null!==a?0!==a.type:r||!(2<n.length)||"o"!==n[0]&&"O"!==n[0]||"n"!==n[1]&&"N"!==n[1])&&(function(e,n,t,r){if(null==n||function(e,n,t,r){if(null!==t&&0===t.type)return!1;switch(typeof n){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==t?!t.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,n,t,r))return!0;if(r)return!1;if(null!==t)switch(t.type){case 3:return!n;case 4:return!1===n;case 5:return isNaN(n);case 6:return isNaN(n)||1>n}return!1}(n,t,a,r)&&(t=null),r||null===a?function(e){return!!f.call(h,e)||!f.call(p,e)&&(d.test(e)?h[e]=!0:(p[e]=!0,!1))}(n)&&(null===t?e.removeAttribute(n):e.setAttribute(n,""+t)):a.mustUseProperty?e[a.propertyName]=null===t?3!==a.type&&"":t:(n=a.attributeName,r=a.attributeNamespace,null===t?e.removeAttribute(n):(t=3===(a=a.type)||4===a&&!0===t?"":""+t,r?e.setAttributeNS(r,n,t):e.setAttribute(n,t))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var n=e.replace(y,v);g[n]=new m(n,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var n=e.replace(y,v);g[n]=new m(n,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var n=e.replace(y,v);g[n]=new m(n,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var A=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,_=Symbol.for("react.element"),E=Symbol.for("react.portal"),C=Symbol.for("react.fragment"),w=Symbol.for("react.strict_mode"),S=Symbol.for("react.profiler"),k=Symbol.for("react.provider"),I=Symbol.for("react.context"),T=Symbol.for("react.forward_ref"),B=Symbol.for("react.suspense"),x=Symbol.for("react.suspense_list"),N=Symbol.for("react.memo"),P=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var L=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var M=Symbol.iterator;function R(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=M&&e[M]||e["@@iterator"])?e:null}var O,H=Object.assign;function z(e){if(void 0===O)try{throw Error()}catch(e){var n=e.stack.trim().match(/\n( *(at )?)/);O=n&&n[1]||""}return"\n"+O+e}var D=!1;function F(e,n){if(!e||D)return"";D=!0;var t=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(n)if(n=function(){throw Error()},Object.defineProperty(n.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(n,[])}catch(e){var r=e}Reflect.construct(e,[],n)}else{try{n.call()}catch(e){r=e}e.call(n.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(n){if(n&&r&&"string"==typeof n.stack){for(var a=n.stack.split("\n"),l=r.stack.split("\n"),o=a.length-1,i=l.length-1;1<=o&&0<=i&&a[o]!==l[i];)i--;for(;1<=o&&0<=i;o--,i--)if(a[o]!==l[i]){if(1!==o||1!==i)do{if(o--,0>--i||a[o]!==l[i]){var s="\n"+a[o].replace(" at new "," at ");return e.displayName&&s.includes("<anonymous>")&&(s=s.replace("<anonymous>",e.displayName)),s}}while(1<=o&&0<=i);break}}}finally{D=!1,Error.prepareStackTrace=t}return(e=e?e.displayName||e.name:"")?z(e):""}function U(e){switch(e.tag){case 5:return z(e.type);case 16:return z("Lazy");case 13:return z("Suspense");case 19:return z("SuspenseList");case 0:case 2:case 15:return F(e.type,!1);case 11:return F(e.type.render,!1);case 1:return F(e.type,!0);default:return""}}function j(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case C:return"Fragment";case E:return"Portal";case S:return"Profiler";case w:return"StrictMode";case B:return"Suspense";case x:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case I:return(e.displayName||"Context")+".Consumer";case k:return(e._context.displayName||"Context")+".Provider";case T:var n=e.render;return(e=e.displayName)||(e=""!==(e=n.displayName||n.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case N:return null!==(n=e.displayName||null)?n:j(e.type)||"Memo";case P:n=e._payload,e=e._init;try{return j(e(n))}catch(e){}}return null}function G(e){var n=e.type;switch(e.tag){case 24:return"Cache";case 9:return(n.displayName||"Context")+".Consumer";case 10:return(n._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=n.render).displayName||e.name||"",n.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return n;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return j(n);case 8:return n===w?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof n)return n.displayName||n.name||null;if("string"==typeof n)return n}return null}function V(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function W(e){var n=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===n||"radio"===n)}function $(e){e._valueTracker||(e._valueTracker=function(e){var n=W(e)?"checked":"value",t=Object.getOwnPropertyDescriptor(e.constructor.prototype,n),r=""+e[n];if(!e.hasOwnProperty(n)&&void 0!==t&&"function"==typeof t.get&&"function"==typeof t.set){var a=t.get,l=t.set;return Object.defineProperty(e,n,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,l.call(this,e)}}),Object.defineProperty(e,n,{enumerable:t.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[n]}}}}(e))}function Y(e){if(!e)return!1;var n=e._valueTracker;if(!n)return!0;var t=n.getValue(),r="";return e&&(r=W(e)?e.checked?"true":"false":e.value),(e=r)!==t&&(n.setValue(e),!0)}function Q(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(n){return e.body}}function X(e,n){var t=n.checked;return H({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=t?t:e._wrapperState.initialChecked})}function K(e,n){var t=null==n.defaultValue?"":n.defaultValue,r=null!=n.checked?n.checked:n.defaultChecked;t=V(null!=n.value?n.value:t),e._wrapperState={initialChecked:r,initialValue:t,controlled:"checkbox"===n.type||"radio"===n.type?null!=n.checked:null!=n.value}}function Z(e,n){null!=(n=n.checked)&&b(e,"checked",n,!1)}function q(e,n){Z(e,n);var t=V(n.value),r=n.type;if(null!=t)"number"===r?(0===t&&""===e.value||e.value!=t)&&(e.value=""+t):e.value!==""+t&&(e.value=""+t);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");n.hasOwnProperty("value")?ee(e,n.type,t):n.hasOwnProperty("defaultValue")&&ee(e,n.type,V(n.defaultValue)),null==n.checked&&null!=n.defaultChecked&&(e.defaultChecked=!!n.defaultChecked)}function J(e,n,t){if(n.hasOwnProperty("value")||n.hasOwnProperty("defaultValue")){var r=n.type;if(!("submit"!==r&&"reset"!==r||void 0!==n.value&&null!==n.value))return;n=""+e._wrapperState.initialValue,t||n===e.value||(e.value=n),e.defaultValue=n}""!==(t=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==t&&(e.name=t)}function ee(e,n,t){"number"===n&&Q(e.ownerDocument)===e||(null==t?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+t&&(e.defaultValue=""+t))}var ne=Array.isArray;function te(e,n,t,r){if(e=e.options,n){n={};for(var a=0;a<t.length;a++)n["$"+t[a]]=!0;for(t=0;t<e.length;t++)a=n.hasOwnProperty("$"+e[t].value),e[t].selected!==a&&(e[t].selected=a),a&&r&&(e[t].defaultSelected=!0)}else{for(t=""+V(t),n=null,a=0;a<e.length;a++){if(e[a].value===t)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==n||e[a].disabled||(n=e[a])}null!==n&&(n.selected=!0)}}function re(e,n){if(null!=n.dangerouslySetInnerHTML)throw Error(l(91));return H({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,n){var t=n.value;if(null==t){if(t=n.children,n=n.defaultValue,null!=t){if(null!=n)throw Error(l(92));if(ne(t)){if(1<t.length)throw Error(l(93));t=t[0]}n=t}null==n&&(n=""),t=n}e._wrapperState={initialValue:V(t)}}function le(e,n){var t=V(n.value),r=V(n.defaultValue);null!=t&&((t=""+t)!==e.value&&(e.value=t),null==n.defaultValue&&e.defaultValue!==t&&(e.defaultValue=t)),null!=r&&(e.defaultValue=""+r)}function oe(e){var n=e.textContent;n===e._wrapperState.initialValue&&""!==n&&null!==n&&(e.value=n)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function se(e,n){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(n):"http://www.w3.org/2000/svg"===e&&"foreignObject"===n?"http://www.w3.org/1999/xhtml":e}var ue,ce,fe=(ce=function(e,n){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=n;else{for((ue=ue||document.createElement("div")).innerHTML="<svg>"+n.valueOf().toString()+"</svg>",n=ue.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;n.firstChild;)e.appendChild(n.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,n,t,r){MSApp.execUnsafeLocalFunction((function(){return ce(e,n)}))}:ce);function de(e,n){if(n){var t=e.firstChild;if(t&&t===e.lastChild&&3===t.nodeType)return void(t.nodeValue=n)}e.textContent=n}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},he=["Webkit","ms","Moz","O"];function me(e,n,t){return null==n||"boolean"==typeof n||""===n?"":t||"number"!=typeof n||0===n||pe.hasOwnProperty(e)&&pe[e]?(""+n).trim():n+"px"}function ge(e,n){for(var t in e=e.style,n)if(n.hasOwnProperty(t)){var r=0===t.indexOf("--"),a=me(t,n[t],r);"float"===t&&(t="cssFloat"),r?e.setProperty(t,a):e[t]=a}}Object.keys(pe).forEach((function(e){he.forEach((function(n){n=n+e.charAt(0).toUpperCase()+e.substring(1),pe[n]=pe[e]}))}));var ye=H({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ve(e,n){if(n){if(ye[e]&&(null!=n.children||null!=n.dangerouslySetInnerHTML))throw Error(l(137,e));if(null!=n.dangerouslySetInnerHTML){if(null!=n.children)throw Error(l(60));if("object"!=typeof n.dangerouslySetInnerHTML||!("__html"in n.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=n.style&&"object"!=typeof n.style)throw Error(l(62))}}function be(e,n){if(-1===e.indexOf("-"))return"string"==typeof n.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Ae=null;function _e(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Ee=null,Ce=null,we=null;function Se(e){if(e=ba(e)){if("function"!=typeof Ee)throw Error(l(280));var n=e.stateNode;n&&(n=_a(n),Ee(e.stateNode,e.type,n))}}function ke(e){Ce?we?we.push(e):we=[e]:Ce=e}function Ie(){if(Ce){var e=Ce,n=we;if(we=Ce=null,Se(e),n)for(e=0;e<n.length;e++)Se(n[e])}}function Te(e,n){return e(n)}function Be(){}var xe=!1;function Ne(e,n,t){if(xe)return e(n,t);xe=!0;try{return Te(e,n,t)}finally{xe=!1,(null!==Ce||null!==we)&&(Be(),Ie())}}function Pe(e,n){var t=e.stateNode;if(null===t)return null;var r=_a(t);if(null===r)return null;t=r[n];e:switch(n){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(t&&"function"!=typeof t)throw Error(l(231,n,typeof t));return t}var Le=!1;if(c)try{var Me={};Object.defineProperty(Me,"passive",{get:function(){Le=!0}}),window.addEventListener("test",Me,Me),window.removeEventListener("test",Me,Me)}catch(ce){Le=!1}function Re(e,n,t,r,a,l,o,i,s){var u=Array.prototype.slice.call(arguments,3);try{n.apply(t,u)}catch(e){this.onError(e)}}var Oe=!1,He=null,ze=!1,De=null,Fe={onError:function(e){Oe=!0,He=e}};function Ue(e,n,t,r,a,l,o,i,s){Oe=!1,He=null,Re.apply(Fe,arguments)}function je(e){var n=e,t=e;if(e.alternate)for(;n.return;)n=n.return;else{e=n;do{!!(4098&(n=e).flags)&&(t=n.return),e=n.return}while(e)}return 3===n.tag?t:null}function Ge(e){if(13===e.tag){var n=e.memoizedState;if(null===n&&null!==(e=e.alternate)&&(n=e.memoizedState),null!==n)return n.dehydrated}return null}function Ve(e){if(je(e)!==e)throw Error(l(188))}function We(e){return null!==(e=function(e){var n=e.alternate;if(!n){if(null===(n=je(e)))throw Error(l(188));return n!==e?null:e}for(var t=e,r=n;;){var a=t.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){t=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===t)return Ve(a),e;if(o===r)return Ve(a),n;o=o.sibling}throw Error(l(188))}if(t.return!==r.return)t=a,r=o;else{for(var i=!1,s=a.child;s;){if(s===t){i=!0,t=a,r=o;break}if(s===r){i=!0,r=a,t=o;break}s=s.sibling}if(!i){for(s=o.child;s;){if(s===t){i=!0,t=o,r=a;break}if(s===r){i=!0,r=o,t=a;break}s=s.sibling}if(!i)throw Error(l(189))}}if(t.alternate!==r)throw Error(l(190))}if(3!==t.tag)throw Error(l(188));return t.stateNode.current===t?e:n}(e))?$e(e):null}function $e(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var n=$e(e);if(null!==n)return n;e=e.sibling}return null}var Ye=a.unstable_scheduleCallback,Qe=a.unstable_cancelCallback,Xe=a.unstable_shouldYield,Ke=a.unstable_requestPaint,Ze=a.unstable_now,qe=a.unstable_getCurrentPriorityLevel,Je=a.unstable_ImmediatePriority,en=a.unstable_UserBlockingPriority,nn=a.unstable_NormalPriority,tn=a.unstable_LowPriority,rn=a.unstable_IdlePriority,an=null,ln=null,on=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(sn(e)/un|0)|0},sn=Math.log,un=Math.LN2,cn=64,fn=4194304;function dn(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function pn(e,n){var t=e.pendingLanes;if(0===t)return 0;var r=0,a=e.suspendedLanes,l=e.pingedLanes,o=268435455&t;if(0!==o){var i=o&~a;0!==i?r=dn(i):0!=(l&=o)&&(r=dn(l))}else 0!=(o=t&~a)?r=dn(o):0!==l&&(r=dn(l));if(0===r)return 0;if(0!==n&&n!==r&&!(n&a)&&((a=r&-r)>=(l=n&-n)||16===a&&4194240&l))return n;if(4&r&&(r|=16&t),0!==(n=e.entangledLanes))for(e=e.entanglements,n&=r;0<n;)a=1<<(t=31-on(n)),r|=e[t],n&=~a;return r}function hn(e,n){switch(e){case 1:case 2:case 4:return n+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return n+5e3;default:return-1}}function mn(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function gn(){var e=cn;return!(4194240&(cn<<=1))&&(cn=64),e}function yn(e){for(var n=[],t=0;31>t;t++)n.push(e);return n}function vn(e,n,t){e.pendingLanes|=n,536870912!==n&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[n=31-on(n)]=t}function bn(e,n){var t=e.entangledLanes|=n;for(e=e.entanglements;t;){var r=31-on(t),a=1<<r;a&n|e[r]&n&&(e[r]|=n),t&=~a}}var An=0;function _n(e){return 1<(e&=-e)?4<e?268435455&e?16:536870912:4:1}var En,Cn,wn,Sn,kn,In=!1,Tn=[],Bn=null,xn=null,Nn=null,Pn=new Map,Ln=new Map,Mn=[],Rn="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function On(e,n){switch(e){case"focusin":case"focusout":Bn=null;break;case"dragenter":case"dragleave":xn=null;break;case"mouseover":case"mouseout":Nn=null;break;case"pointerover":case"pointerout":Pn.delete(n.pointerId);break;case"gotpointercapture":case"lostpointercapture":Ln.delete(n.pointerId)}}function Hn(e,n,t,r,a,l){return null===e||e.nativeEvent!==l?(e={blockedOn:n,domEventName:t,eventSystemFlags:r,nativeEvent:l,targetContainers:[a]},null!==n&&null!==(n=ba(n))&&Cn(n),e):(e.eventSystemFlags|=r,n=e.targetContainers,null!==a&&-1===n.indexOf(a)&&n.push(a),e)}function zn(e){var n=va(e.target);if(null!==n){var t=je(n);if(null!==t)if(13===(n=t.tag)){if(null!==(n=Ge(t)))return e.blockedOn=n,void kn(e.priority,(function(){wn(t)}))}else if(3===n&&t.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===t.tag?t.stateNode.containerInfo:null)}e.blockedOn=null}function Dn(e){if(null!==e.blockedOn)return!1;for(var n=e.targetContainers;0<n.length;){var t=Kn(e.domEventName,e.eventSystemFlags,n[0],e.nativeEvent);if(null!==t)return null!==(n=ba(t))&&Cn(n),e.blockedOn=t,!1;var r=new(t=e.nativeEvent).constructor(t.type,t);Ae=r,t.target.dispatchEvent(r),Ae=null,n.shift()}return!0}function Fn(e,n,t){Dn(e)&&t.delete(n)}function Un(){In=!1,null!==Bn&&Dn(Bn)&&(Bn=null),null!==xn&&Dn(xn)&&(xn=null),null!==Nn&&Dn(Nn)&&(Nn=null),Pn.forEach(Fn),Ln.forEach(Fn)}function jn(e,n){e.blockedOn===n&&(e.blockedOn=null,In||(In=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Un)))}function Gn(e){function n(n){return jn(n,e)}if(0<Tn.length){jn(Tn[0],e);for(var t=1;t<Tn.length;t++){var r=Tn[t];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==Bn&&jn(Bn,e),null!==xn&&jn(xn,e),null!==Nn&&jn(Nn,e),Pn.forEach(n),Ln.forEach(n),t=0;t<Mn.length;t++)(r=Mn[t]).blockedOn===e&&(r.blockedOn=null);for(;0<Mn.length&&null===(t=Mn[0]).blockedOn;)zn(t),null===t.blockedOn&&Mn.shift()}var Vn=A.ReactCurrentBatchConfig,Wn=!0;function $n(e,n,t,r){var a=An,l=Vn.transition;Vn.transition=null;try{An=1,Qn(e,n,t,r)}finally{An=a,Vn.transition=l}}function Yn(e,n,t,r){var a=An,l=Vn.transition;Vn.transition=null;try{An=4,Qn(e,n,t,r)}finally{An=a,Vn.transition=l}}function Qn(e,n,t,r){if(Wn){var a=Kn(e,n,t,r);if(null===a)Vr(e,n,r,Xn,t),On(e,r);else if(function(e,n,t,r,a){switch(n){case"focusin":return Bn=Hn(Bn,e,n,t,r,a),!0;case"dragenter":return xn=Hn(xn,e,n,t,r,a),!0;case"mouseover":return Nn=Hn(Nn,e,n,t,r,a),!0;case"pointerover":var l=a.pointerId;return Pn.set(l,Hn(Pn.get(l)||null,e,n,t,r,a)),!0;case"gotpointercapture":return l=a.pointerId,Ln.set(l,Hn(Ln.get(l)||null,e,n,t,r,a)),!0}return!1}(a,e,n,t,r))r.stopPropagation();else if(On(e,r),4&n&&-1<Rn.indexOf(e)){for(;null!==a;){var l=ba(a);if(null!==l&&En(l),null===(l=Kn(e,n,t,r))&&Vr(e,n,r,Xn,t),l===a)break;a=l}null!==a&&r.stopPropagation()}else Vr(e,n,r,null,t)}}var Xn=null;function Kn(e,n,t,r){if(Xn=null,null!==(e=va(e=_e(r))))if(null===(n=je(e)))e=null;else if(13===(t=n.tag)){if(null!==(e=Ge(n)))return e;e=null}else if(3===t){if(n.stateNode.current.memoizedState.isDehydrated)return 3===n.tag?n.stateNode.containerInfo:null;e=null}else n!==e&&(e=null);return Xn=e,null}function Zn(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(qe()){case Je:return 1;case en:return 4;case nn:case tn:return 16;case rn:return 536870912;default:return 16}default:return 16}}var qn=null,Jn=null,et=null;function nt(){if(et)return et;var e,n,t=Jn,r=t.length,a="value"in qn?qn.value:qn.textContent,l=a.length;for(e=0;e<r&&t[e]===a[e];e++);var o=r-e;for(n=1;n<=o&&t[r-n]===a[l-n];n++);return et=a.slice(e,1<n?1-n:void 0)}function tt(e){var n=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===n&&(e=13):e=n,10===e&&(e=13),32<=e||13===e?e:0}function rt(){return!0}function at(){return!1}function lt(e){function n(n,t,r,a,l){for(var o in this._reactName=n,this._targetInst=r,this.type=t,this.nativeEvent=a,this.target=l,this.currentTarget=null,e)e.hasOwnProperty(o)&&(n=e[o],this[o]=n?n(a):a[o]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?rt:at,this.isPropagationStopped=at,this}return H(n.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rt)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rt)},persist:function(){},isPersistent:rt}),n}var ot,it,st,ut={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ct=lt(ut),ft=H({},ut,{view:0,detail:0}),dt=lt(ft),pt=H({},ft,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:St,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==st&&(st&&"mousemove"===e.type?(ot=e.screenX-st.screenX,it=e.screenY-st.screenY):it=ot=0,st=e),ot)},movementY:function(e){return"movementY"in e?e.movementY:it}}),ht=lt(pt),mt=lt(H({},pt,{dataTransfer:0})),gt=lt(H({},ft,{relatedTarget:0})),yt=lt(H({},ut,{animationName:0,elapsedTime:0,pseudoElement:0})),vt=H({},ut,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),bt=lt(vt),At=lt(H({},ut,{data:0})),_t={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Et={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Ct={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function wt(e){var n=this.nativeEvent;return n.getModifierState?n.getModifierState(e):!!(e=Ct[e])&&!!n[e]}function St(){return wt}var kt=H({},ft,{key:function(e){if(e.key){var n=_t[e.key]||e.key;if("Unidentified"!==n)return n}return"keypress"===e.type?13===(e=tt(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Et[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:St,charCode:function(e){return"keypress"===e.type?tt(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tt(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),It=lt(kt),Tt=lt(H({},pt,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Bt=lt(H({},ft,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:St})),xt=lt(H({},ut,{propertyName:0,elapsedTime:0,pseudoElement:0})),Nt=H({},pt,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Pt=lt(Nt),Lt=[9,13,27,32],Mt=c&&"CompositionEvent"in window,Rt=null;c&&"documentMode"in document&&(Rt=document.documentMode);var Ot=c&&"TextEvent"in window&&!Rt,Ht=c&&(!Mt||Rt&&8<Rt&&11>=Rt),zt=String.fromCharCode(32),Dt=!1;function Ft(e,n){switch(e){case"keyup":return-1!==Lt.indexOf(n.keyCode);case"keydown":return 229!==n.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Ut(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var jt=!1,Gt={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vt(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===n?!!Gt[e.type]:"textarea"===n}function Wt(e,n,t,r){ke(r),0<(n=$r(n,"onChange")).length&&(t=new ct("onChange","change",null,t,r),e.push({event:t,listeners:n}))}var $t=null,Yt=null;function Qt(e){zr(e,0)}function Xt(e){if(Y(Aa(e)))return e}function Kt(e,n){if("change"===e)return n}var Zt=!1;if(c){var qt;if(c){var Jt="oninput"in document;if(!Jt){var er=document.createElement("div");er.setAttribute("oninput","return;"),Jt="function"==typeof er.oninput}qt=Jt}else qt=!1;Zt=qt&&(!document.documentMode||9<document.documentMode)}function nr(){$t&&($t.detachEvent("onpropertychange",tr),Yt=$t=null)}function tr(e){if("value"===e.propertyName&&Xt(Yt)){var n=[];Wt(n,Yt,e,_e(e)),Ne(Qt,n)}}function rr(e,n,t){"focusin"===e?(nr(),Yt=t,($t=n).attachEvent("onpropertychange",tr)):"focusout"===e&&nr()}function ar(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Xt(Yt)}function lr(e,n){if("click"===e)return Xt(n)}function or(e,n){if("input"===e||"change"===e)return Xt(n)}var ir="function"==typeof Object.is?Object.is:function(e,n){return e===n&&(0!==e||1/e==1/n)||e!=e&&n!=n};function sr(e,n){if(ir(e,n))return!0;if("object"!=typeof e||null===e||"object"!=typeof n||null===n)return!1;var t=Object.keys(e),r=Object.keys(n);if(t.length!==r.length)return!1;for(r=0;r<t.length;r++){var a=t[r];if(!f.call(n,a)||!ir(e[a],n[a]))return!1}return!0}function ur(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,n){var t,r=ur(e);for(e=0;r;){if(3===r.nodeType){if(t=e+r.textContent.length,e<=n&&t>=n)return{node:r,offset:n-e};e=t}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ur(r)}}function fr(e,n){return!(!e||!n)&&(e===n||(!e||3!==e.nodeType)&&(n&&3===n.nodeType?fr(e,n.parentNode):"contains"in e?e.contains(n):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(n))))}function dr(){for(var e=window,n=Q();n instanceof e.HTMLIFrameElement;){try{var t="string"==typeof n.contentWindow.location.href}catch(e){t=!1}if(!t)break;n=Q((e=n.contentWindow).document)}return n}function pr(e){var n=e&&e.nodeName&&e.nodeName.toLowerCase();return n&&("input"===n&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===n||"true"===e.contentEditable)}function hr(e){var n=dr(),t=e.focusedElem,r=e.selectionRange;if(n!==t&&t&&t.ownerDocument&&fr(t.ownerDocument.documentElement,t)){if(null!==r&&pr(t))if(n=r.start,void 0===(e=r.end)&&(e=n),"selectionStart"in t)t.selectionStart=n,t.selectionEnd=Math.min(e,t.value.length);else if((e=(n=t.ownerDocument||document)&&n.defaultView||window).getSelection){e=e.getSelection();var a=t.textContent.length,l=Math.min(r.start,a);r=void 0===r.end?l:Math.min(r.end,a),!e.extend&&l>r&&(a=r,r=l,l=a),a=cr(t,l);var o=cr(t,r);a&&o&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((n=n.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),l>r?(e.addRange(n),e.extend(o.node,o.offset)):(n.setEnd(o.node,o.offset),e.addRange(n)))}for(n=[],e=t;e=e.parentNode;)1===e.nodeType&&n.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof t.focus&&t.focus(),t=0;t<n.length;t++)(e=n[t]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var mr=c&&"documentMode"in document&&11>=document.documentMode,gr=null,yr=null,vr=null,br=!1;function Ar(e,n,t){var r=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;br||null==gr||gr!==Q(r)||(r="selectionStart"in(r=gr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},vr&&sr(vr,r)||(vr=r,0<(r=$r(yr,"onSelect")).length&&(n=new ct("onSelect","select",null,n,t),e.push({event:n,listeners:r}),n.target=gr)))}function _r(e,n){var t={};return t[e.toLowerCase()]=n.toLowerCase(),t["Webkit"+e]="webkit"+n,t["Moz"+e]="moz"+n,t}var Er={animationend:_r("Animation","AnimationEnd"),animationiteration:_r("Animation","AnimationIteration"),animationstart:_r("Animation","AnimationStart"),transitionend:_r("Transition","TransitionEnd")},Cr={},wr={};function Sr(e){if(Cr[e])return Cr[e];if(!Er[e])return e;var n,t=Er[e];for(n in t)if(t.hasOwnProperty(n)&&n in wr)return Cr[e]=t[n];return e}c&&(wr=document.createElement("div").style,"AnimationEvent"in window||(delete Er.animationend.animation,delete Er.animationiteration.animation,delete Er.animationstart.animation),"TransitionEvent"in window||delete Er.transitionend.transition);var kr=Sr("animationend"),Ir=Sr("animationiteration"),Tr=Sr("animationstart"),Br=Sr("transitionend"),xr=new Map,Nr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Pr(e,n){xr.set(e,n),s(n,[e])}for(var Lr=0;Lr<Nr.length;Lr++){var Mr=Nr[Lr];Pr(Mr.toLowerCase(),"on"+(Mr[0].toUpperCase()+Mr.slice(1)))}Pr(kr,"onAnimationEnd"),Pr(Ir,"onAnimationIteration"),Pr(Tr,"onAnimationStart"),Pr("dblclick","onDoubleClick"),Pr("focusin","onFocus"),Pr("focusout","onBlur"),Pr(Br,"onTransitionEnd"),u("onMouseEnter",["mouseout","mouseover"]),u("onMouseLeave",["mouseout","mouseover"]),u("onPointerEnter",["pointerout","pointerover"]),u("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Rr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Or=new Set("cancel close invalid load scroll toggle".split(" ").concat(Rr));function Hr(e,n,t){var r=e.type||"unknown-event";e.currentTarget=t,function(e,n,t,r,a,o,i,s,u){if(Ue.apply(this,arguments),Oe){if(!Oe)throw Error(l(198));var c=He;Oe=!1,He=null,ze||(ze=!0,De=c)}}(r,n,void 0,e),e.currentTarget=null}function zr(e,n){n=!!(4&n);for(var t=0;t<e.length;t++){var r=e[t],a=r.event;r=r.listeners;e:{var l=void 0;if(n)for(var o=r.length-1;0<=o;o--){var i=r[o],s=i.instance,u=i.currentTarget;if(i=i.listener,s!==l&&a.isPropagationStopped())break e;Hr(a,i,u),l=s}else for(o=0;o<r.length;o++){if(s=(i=r[o]).instance,u=i.currentTarget,i=i.listener,s!==l&&a.isPropagationStopped())break e;Hr(a,i,u),l=s}}}if(ze)throw e=De,ze=!1,De=null,e}function Dr(e,n){var t=n[ma];void 0===t&&(t=n[ma]=new Set);var r=e+"__bubble";t.has(r)||(Gr(n,e,2,!1),t.add(r))}function Fr(e,n,t){var r=0;n&&(r|=4),Gr(t,e,r,n)}var Ur="_reactListening"+Math.random().toString(36).slice(2);function jr(e){if(!e[Ur]){e[Ur]=!0,o.forEach((function(n){"selectionchange"!==n&&(Or.has(n)||Fr(n,!1,e),Fr(n,!0,e))}));var n=9===e.nodeType?e:e.ownerDocument;null===n||n[Ur]||(n[Ur]=!0,Fr("selectionchange",!1,n))}}function Gr(e,n,t,r){switch(Zn(n)){case 1:var a=$n;break;case 4:a=Yn;break;default:a=Qn}t=a.bind(null,n,t,e),a=void 0,!Le||"touchstart"!==n&&"touchmove"!==n&&"wheel"!==n||(a=!0),r?void 0!==a?e.addEventListener(n,t,{capture:!0,passive:a}):e.addEventListener(n,t,!0):void 0!==a?e.addEventListener(n,t,{passive:a}):e.addEventListener(n,t,!1)}function Vr(e,n,t,r,a){var l=r;if(!(1&n||2&n||null===r))e:for(;;){if(null===r)return;var o=r.tag;if(3===o||4===o){var i=r.stateNode.containerInfo;if(i===a||8===i.nodeType&&i.parentNode===a)break;if(4===o)for(o=r.return;null!==o;){var s=o.tag;if((3===s||4===s)&&((s=o.stateNode.containerInfo)===a||8===s.nodeType&&s.parentNode===a))return;o=o.return}for(;null!==i;){if(null===(o=va(i)))return;if(5===(s=o.tag)||6===s){r=l=o;continue e}i=i.parentNode}}r=r.return}Ne((function(){var r=l,a=_e(t),o=[];e:{var i=xr.get(e);if(void 0!==i){var s=ct,u=e;switch(e){case"keypress":if(0===tt(t))break e;case"keydown":case"keyup":s=It;break;case"focusin":u="focus",s=gt;break;case"focusout":u="blur",s=gt;break;case"beforeblur":case"afterblur":s=gt;break;case"click":if(2===t.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":s=ht;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":s=mt;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":s=Bt;break;case kr:case Ir:case Tr:s=yt;break;case Br:s=xt;break;case"scroll":s=dt;break;case"wheel":s=Pt;break;case"copy":case"cut":case"paste":s=bt;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":s=Tt}var c=!!(4&n),f=!c&&"scroll"===e,d=c?null!==i?i+"Capture":null:i;c=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=Pe(h,d))&&c.push(Wr(h,m,p))),f)break;h=h.return}0<c.length&&(i=new s(i,u,null,t,a),o.push({event:i,listeners:c}))}}if(!(7&n)){if(s="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||t===Ae||!(u=t.relatedTarget||t.fromElement)||!va(u)&&!u[ha])&&(s||i)&&(i=a.window===a?a:(i=a.ownerDocument)?i.defaultView||i.parentWindow:window,s?(s=r,null!==(u=(u=t.relatedTarget||t.toElement)?va(u):null)&&(u!==(f=je(u))||5!==u.tag&&6!==u.tag)&&(u=null)):(s=null,u=r),s!==u)){if(c=ht,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(c=Tt,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==s?i:Aa(s),p=null==u?i:Aa(u),(i=new c(m,h+"leave",s,t,a)).target=f,i.relatedTarget=p,m=null,va(a)===r&&((c=new c(d,h+"enter",u,t,a)).target=p,c.relatedTarget=f,m=c),f=m,s&&u)e:{for(d=u,h=0,p=c=s;p;p=Yr(p))h++;for(p=0,m=d;m;m=Yr(m))p++;for(;0<h-p;)c=Yr(c),h--;for(;0<p-h;)d=Yr(d),p--;for(;h--;){if(c===d||null!==d&&c===d.alternate)break e;c=Yr(c),d=Yr(d)}c=null}else c=null;null!==s&&Qr(o,i,s,c,!1),null!==u&&null!==f&&Qr(o,f,u,c,!0)}if("select"===(s=(i=r?Aa(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===s&&"file"===i.type)var g=Kt;else if(Vt(i))if(Zt)g=or;else{g=ar;var y=rr}else(s=i.nodeName)&&"input"===s.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(g=lr);switch(g&&(g=g(e,r))?Wt(o,g,t,a):(y&&y(e,i,r),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ee(i,"number",i.value)),y=r?Aa(r):window,e){case"focusin":(Vt(y)||"true"===y.contentEditable)&&(gr=y,yr=r,vr=null);break;case"focusout":vr=yr=gr=null;break;case"mousedown":br=!0;break;case"contextmenu":case"mouseup":case"dragend":br=!1,Ar(o,t,a);break;case"selectionchange":if(mr)break;case"keydown":case"keyup":Ar(o,t,a)}var v;if(Mt)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else jt?Ft(e,t)&&(b="onCompositionEnd"):"keydown"===e&&229===t.keyCode&&(b="onCompositionStart");b&&(Ht&&"ko"!==t.locale&&(jt||"onCompositionStart"!==b?"onCompositionEnd"===b&&jt&&(v=nt()):(Jn="value"in(qn=a)?qn.value:qn.textContent,jt=!0)),0<(y=$r(r,b)).length&&(b=new At(b,e,null,t,a),o.push({event:b,listeners:y}),(v||null!==(v=Ut(t)))&&(b.data=v))),(v=Ot?function(e,n){switch(e){case"compositionend":return Ut(n);case"keypress":return 32!==n.which?null:(Dt=!0,zt);case"textInput":return(e=n.data)===zt&&Dt?null:e;default:return null}}(e,t):function(e,n){if(jt)return"compositionend"===e||!Mt&&Ft(e,n)?(e=nt(),et=Jn=qn=null,jt=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(n.ctrlKey||n.altKey||n.metaKey)||n.ctrlKey&&n.altKey){if(n.char&&1<n.char.length)return n.char;if(n.which)return String.fromCharCode(n.which)}return null;case"compositionend":return Ht&&"ko"!==n.locale?null:n.data}}(e,t))&&0<(r=$r(r,"onBeforeInput")).length&&(a=new At("onBeforeInput","beforeinput",null,t,a),o.push({event:a,listeners:r}),a.data=v)}zr(o,n)}))}function Wr(e,n,t){return{instance:e,listener:n,currentTarget:t}}function $r(e,n){for(var t=n+"Capture",r=[];null!==e;){var a=e,l=a.stateNode;5===a.tag&&null!==l&&(a=l,null!=(l=Pe(e,t))&&r.unshift(Wr(e,l,a)),null!=(l=Pe(e,n))&&r.push(Wr(e,l,a))),e=e.return}return r}function Yr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Qr(e,n,t,r,a){for(var l=n._reactName,o=[];null!==t&&t!==r;){var i=t,s=i.alternate,u=i.stateNode;if(null!==s&&s===r)break;5===i.tag&&null!==u&&(i=u,a?null!=(s=Pe(t,l))&&o.unshift(Wr(t,s,i)):a||null!=(s=Pe(t,l))&&o.push(Wr(t,s,i))),t=t.return}0!==o.length&&e.push({event:n,listeners:o})}var Xr=/\r\n?/g,Kr=/\u0000|\uFFFD/g;function Zr(e){return("string"==typeof e?e:""+e).replace(Xr,"\n").replace(Kr,"")}function qr(e,n,t){if(n=Zr(n),Zr(e)!==n&&t)throw Error(l(425))}function Jr(){}var ea=null,na=null;function ta(e,n){return"textarea"===e||"noscript"===e||"string"==typeof n.children||"number"==typeof n.children||"object"==typeof n.dangerouslySetInnerHTML&&null!==n.dangerouslySetInnerHTML&&null!=n.dangerouslySetInnerHTML.__html}var ra="function"==typeof setTimeout?setTimeout:void 0,aa="function"==typeof clearTimeout?clearTimeout:void 0,la="function"==typeof Promise?Promise:void 0,oa="function"==typeof queueMicrotask?queueMicrotask:void 0!==la?function(e){return la.resolve(null).then(e).catch(ia)}:ra;function ia(e){setTimeout((function(){throw e}))}function sa(e,n){var t=n,r=0;do{var a=t.nextSibling;if(e.removeChild(t),a&&8===a.nodeType)if("/$"===(t=a.data)){if(0===r)return e.removeChild(a),void Gn(n);r--}else"$"!==t&&"$?"!==t&&"$!"!==t||r++;t=a}while(t);Gn(n)}function ua(e){for(;null!=e;e=e.nextSibling){var n=e.nodeType;if(1===n||3===n)break;if(8===n){if("$"===(n=e.data)||"$!"===n||"$?"===n)break;if("/$"===n)return null}}return e}function ca(e){e=e.previousSibling;for(var n=0;e;){if(8===e.nodeType){var t=e.data;if("$"===t||"$!"===t||"$?"===t){if(0===n)return e;n--}else"/$"===t&&n++}e=e.previousSibling}return null}var fa=Math.random().toString(36).slice(2),da="__reactFiber$"+fa,pa="__reactProps$"+fa,ha="__reactContainer$"+fa,ma="__reactEvents$"+fa,ga="__reactListeners$"+fa,ya="__reactHandles$"+fa;function va(e){var n=e[da];if(n)return n;for(var t=e.parentNode;t;){if(n=t[ha]||t[da]){if(t=n.alternate,null!==n.child||null!==t&&null!==t.child)for(e=ca(e);null!==e;){if(t=e[da])return t;e=ca(e)}return n}t=(e=t).parentNode}return null}function ba(e){return!(e=e[da]||e[ha])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Aa(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function _a(e){return e[pa]||null}var Ea=[],Ca=-1;function wa(e){return{current:e}}function Sa(e){0>Ca||(e.current=Ea[Ca],Ea[Ca]=null,Ca--)}function ka(e,n){Ca++,Ea[Ca]=e.current,e.current=n}var Ia={},Ta=wa(Ia),Ba=wa(!1),xa=Ia;function Na(e,n){var t=e.type.contextTypes;if(!t)return Ia;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===n)return r.__reactInternalMemoizedMaskedChildContext;var a,l={};for(a in t)l[a]=n[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=n,e.__reactInternalMemoizedMaskedChildContext=l),l}function Pa(e){return null!=e.childContextTypes}function La(){Sa(Ba),Sa(Ta)}function Ma(e,n,t){if(Ta.current!==Ia)throw Error(l(168));ka(Ta,n),ka(Ba,t)}function Ra(e,n,t){var r=e.stateNode;if(n=n.childContextTypes,"function"!=typeof r.getChildContext)return t;for(var a in r=r.getChildContext())if(!(a in n))throw Error(l(108,G(e)||"Unknown",a));return H({},t,r)}function Oa(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Ia,xa=Ta.current,ka(Ta,e),ka(Ba,Ba.current),!0}function Ha(e,n,t){var r=e.stateNode;if(!r)throw Error(l(169));t?(e=Ra(e,n,xa),r.__reactInternalMemoizedMergedChildContext=e,Sa(Ba),Sa(Ta),ka(Ta,e)):Sa(Ba),ka(Ba,t)}var za=null,Da=!1,Fa=!1;function Ua(e){null===za?za=[e]:za.push(e)}function ja(){if(!Fa&&null!==za){Fa=!0;var e=0,n=An;try{var t=za;for(An=1;e<t.length;e++){var r=t[e];do{r=r(!0)}while(null!==r)}za=null,Da=!1}catch(n){throw null!==za&&(za=za.slice(e+1)),Ye(Je,ja),n}finally{An=n,Fa=!1}}return null}var Ga=[],Va=0,Wa=null,$a=0,Ya=[],Qa=0,Xa=null,Ka=1,Za="";function qa(e,n){Ga[Va++]=$a,Ga[Va++]=Wa,Wa=e,$a=n}function Ja(e,n,t){Ya[Qa++]=Ka,Ya[Qa++]=Za,Ya[Qa++]=Xa,Xa=e;var r=Ka;e=Za;var a=32-on(r)-1;r&=~(1<<a),t+=1;var l=32-on(n)+a;if(30<l){var o=a-a%5;l=(r&(1<<o)-1).toString(32),r>>=o,a-=o,Ka=1<<32-on(n)+a|t<<a|r,Za=l+e}else Ka=1<<l|t<<a|r,Za=e}function el(e){null!==e.return&&(qa(e,1),Ja(e,1,0))}function nl(e){for(;e===Wa;)Wa=Ga[--Va],Ga[Va]=null,$a=Ga[--Va],Ga[Va]=null;for(;e===Xa;)Xa=Ya[--Qa],Ya[Qa]=null,Za=Ya[--Qa],Ya[Qa]=null,Ka=Ya[--Qa],Ya[Qa]=null}var tl=null,rl=null,al=!1,ll=null;function ol(e,n){var t=Nu(5,null,null,0);t.elementType="DELETED",t.stateNode=n,t.return=e,null===(n=e.deletions)?(e.deletions=[t],e.flags|=16):n.push(t)}function il(e,n){switch(e.tag){case 5:var t=e.type;return null!==(n=1!==n.nodeType||t.toLowerCase()!==n.nodeName.toLowerCase()?null:n)&&(e.stateNode=n,tl=e,rl=ua(n.firstChild),!0);case 6:return null!==(n=""===e.pendingProps||3!==n.nodeType?null:n)&&(e.stateNode=n,tl=e,rl=null,!0);case 13:return null!==(n=8!==n.nodeType?null:n)&&(t=null!==Xa?{id:Ka,overflow:Za}:null,e.memoizedState={dehydrated:n,treeContext:t,retryLane:1073741824},(t=Nu(18,null,null,0)).stateNode=n,t.return=e,e.child=t,tl=e,rl=null,!0);default:return!1}}function sl(e){return!(!(1&e.mode)||128&e.flags)}function ul(e){if(al){var n=rl;if(n){var t=n;if(!il(e,n)){if(sl(e))throw Error(l(418));n=ua(t.nextSibling);var r=tl;n&&il(e,n)?ol(r,t):(e.flags=-4097&e.flags|2,al=!1,tl=e)}}else{if(sl(e))throw Error(l(418));e.flags=-4097&e.flags|2,al=!1,tl=e}}}function cl(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;tl=e}function fl(e){if(e!==tl)return!1;if(!al)return cl(e),al=!0,!1;var n;if((n=3!==e.tag)&&!(n=5!==e.tag)&&(n="head"!==(n=e.type)&&"body"!==n&&!ta(e.type,e.memoizedProps)),n&&(n=rl)){if(sl(e))throw dl(),Error(l(418));for(;n;)ol(e,n),n=ua(n.nextSibling)}if(cl(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,n=0;e;){if(8===e.nodeType){var t=e.data;if("/$"===t){if(0===n){rl=ua(e.nextSibling);break e}n--}else"$"!==t&&"$!"!==t&&"$?"!==t||n++}e=e.nextSibling}rl=null}}else rl=tl?ua(e.stateNode.nextSibling):null;return!0}function dl(){for(var e=rl;e;)e=ua(e.nextSibling)}function pl(){rl=tl=null,al=!1}function hl(e){null===ll?ll=[e]:ll.push(e)}var ml=A.ReactCurrentBatchConfig;function gl(e,n,t){if(null!==(e=t.ref)&&"function"!=typeof e&&"object"!=typeof e){if(t._owner){if(t=t._owner){if(1!==t.tag)throw Error(l(309));var r=t.stateNode}if(!r)throw Error(l(147,e));var a=r,o=""+e;return null!==n&&null!==n.ref&&"function"==typeof n.ref&&n.ref._stringRef===o?n.ref:(n=function(e){var n=a.refs;null===e?delete n[o]:n[o]=e},n._stringRef=o,n)}if("string"!=typeof e)throw Error(l(284));if(!t._owner)throw Error(l(290,e))}return e}function yl(e,n){throw e=Object.prototype.toString.call(n),Error(l(31,"[object Object]"===e?"object with keys {"+Object.keys(n).join(", ")+"}":e))}function vl(e){return(0,e._init)(e._payload)}function bl(e){function n(n,t){if(e){var r=n.deletions;null===r?(n.deletions=[t],n.flags|=16):r.push(t)}}function t(t,r){if(!e)return null;for(;null!==r;)n(t,r),r=r.sibling;return null}function r(e,n){for(e=new Map;null!==n;)null!==n.key?e.set(n.key,n):e.set(n.index,n),n=n.sibling;return e}function a(e,n){return(e=Lu(e,n)).index=0,e.sibling=null,e}function o(n,t,r){return n.index=r,e?null!==(r=n.alternate)?(r=r.index)<t?(n.flags|=2,t):r:(n.flags|=2,t):(n.flags|=1048576,t)}function i(n){return e&&null===n.alternate&&(n.flags|=2),n}function s(e,n,t,r){return null===n||6!==n.tag?((n=Hu(t,e.mode,r)).return=e,n):((n=a(n,t)).return=e,n)}function u(e,n,t,r){var l=t.type;return l===C?f(e,n,t.props.children,r,t.key):null!==n&&(n.elementType===l||"object"==typeof l&&null!==l&&l.$$typeof===P&&vl(l)===n.type)?((r=a(n,t.props)).ref=gl(e,n,t),r.return=e,r):((r=Mu(t.type,t.key,t.props,null,e.mode,r)).ref=gl(e,n,t),r.return=e,r)}function c(e,n,t,r){return null===n||4!==n.tag||n.stateNode.containerInfo!==t.containerInfo||n.stateNode.implementation!==t.implementation?((n=zu(t,e.mode,r)).return=e,n):((n=a(n,t.children||[])).return=e,n)}function f(e,n,t,r,l){return null===n||7!==n.tag?((n=Ru(t,e.mode,r,l)).return=e,n):((n=a(n,t)).return=e,n)}function d(e,n,t){if("string"==typeof n&&""!==n||"number"==typeof n)return(n=Hu(""+n,e.mode,t)).return=e,n;if("object"==typeof n&&null!==n){switch(n.$$typeof){case _:return(t=Mu(n.type,n.key,n.props,null,e.mode,t)).ref=gl(e,null,n),t.return=e,t;case E:return(n=zu(n,e.mode,t)).return=e,n;case P:return d(e,(0,n._init)(n._payload),t)}if(ne(n)||R(n))return(n=Ru(n,e.mode,t,null)).return=e,n;yl(e,n)}return null}function p(e,n,t,r){var a=null!==n?n.key:null;if("string"==typeof t&&""!==t||"number"==typeof t)return null!==a?null:s(e,n,""+t,r);if("object"==typeof t&&null!==t){switch(t.$$typeof){case _:return t.key===a?u(e,n,t,r):null;case E:return t.key===a?c(e,n,t,r):null;case P:return p(e,n,(a=t._init)(t._payload),r)}if(ne(t)||R(t))return null!==a?null:f(e,n,t,r,null);yl(e,t)}return null}function h(e,n,t,r,a){if("string"==typeof r&&""!==r||"number"==typeof r)return s(n,e=e.get(t)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case _:return u(n,e=e.get(null===r.key?t:r.key)||null,r,a);case E:return c(n,e=e.get(null===r.key?t:r.key)||null,r,a);case P:return h(e,n,t,(0,r._init)(r._payload),a)}if(ne(r)||R(r))return f(n,e=e.get(t)||null,r,a,null);yl(n,r)}return null}function m(a,l,i,s){for(var u=null,c=null,f=l,m=l=0,g=null;null!==f&&m<i.length;m++){f.index>m?(g=f,f=null):g=f.sibling;var y=p(a,f,i[m],s);if(null===y){null===f&&(f=g);break}e&&f&&null===y.alternate&&n(a,f),l=o(y,l,m),null===c?u=y:c.sibling=y,c=y,f=g}if(m===i.length)return t(a,f),al&&qa(a,m),u;if(null===f){for(;m<i.length;m++)null!==(f=d(a,i[m],s))&&(l=o(f,l,m),null===c?u=f:c.sibling=f,c=f);return al&&qa(a,m),u}for(f=r(a,f);m<i.length;m++)null!==(g=h(f,a,m,i[m],s))&&(e&&null!==g.alternate&&f.delete(null===g.key?m:g.key),l=o(g,l,m),null===c?u=g:c.sibling=g,c=g);return e&&f.forEach((function(e){return n(a,e)})),al&&qa(a,m),u}function g(a,i,s,u){var c=R(s);if("function"!=typeof c)throw Error(l(150));if(null==(s=c.call(s)))throw Error(l(151));for(var f=c=null,m=i,g=i=0,y=null,v=s.next();null!==m&&!v.done;g++,v=s.next()){m.index>g?(y=m,m=null):y=m.sibling;var b=p(a,m,v.value,u);if(null===b){null===m&&(m=y);break}e&&m&&null===b.alternate&&n(a,m),i=o(b,i,g),null===f?c=b:f.sibling=b,f=b,m=y}if(v.done)return t(a,m),al&&qa(a,g),c;if(null===m){for(;!v.done;g++,v=s.next())null!==(v=d(a,v.value,u))&&(i=o(v,i,g),null===f?c=v:f.sibling=v,f=v);return al&&qa(a,g),c}for(m=r(a,m);!v.done;g++,v=s.next())null!==(v=h(m,a,g,v.value,u))&&(e&&null!==v.alternate&&m.delete(null===v.key?g:v.key),i=o(v,i,g),null===f?c=v:f.sibling=v,f=v);return e&&m.forEach((function(e){return n(a,e)})),al&&qa(a,g),c}return function e(r,l,o,s){if("object"==typeof o&&null!==o&&o.type===C&&null===o.key&&(o=o.props.children),"object"==typeof o&&null!==o){switch(o.$$typeof){case _:e:{for(var u=o.key,c=l;null!==c;){if(c.key===u){if((u=o.type)===C){if(7===c.tag){t(r,c.sibling),(l=a(c,o.props.children)).return=r,r=l;break e}}else if(c.elementType===u||"object"==typeof u&&null!==u&&u.$$typeof===P&&vl(u)===c.type){t(r,c.sibling),(l=a(c,o.props)).ref=gl(r,c,o),l.return=r,r=l;break e}t(r,c);break}n(r,c),c=c.sibling}o.type===C?((l=Ru(o.props.children,r.mode,s,o.key)).return=r,r=l):((s=Mu(o.type,o.key,o.props,null,r.mode,s)).ref=gl(r,l,o),s.return=r,r=s)}return i(r);case E:e:{for(c=o.key;null!==l;){if(l.key===c){if(4===l.tag&&l.stateNode.containerInfo===o.containerInfo&&l.stateNode.implementation===o.implementation){t(r,l.sibling),(l=a(l,o.children||[])).return=r,r=l;break e}t(r,l);break}n(r,l),l=l.sibling}(l=zu(o,r.mode,s)).return=r,r=l}return i(r);case P:return e(r,l,(c=o._init)(o._payload),s)}if(ne(o))return m(r,l,o,s);if(R(o))return g(r,l,o,s);yl(r,o)}return"string"==typeof o&&""!==o||"number"==typeof o?(o=""+o,null!==l&&6===l.tag?(t(r,l.sibling),(l=a(l,o)).return=r,r=l):(t(r,l),(l=Hu(o,r.mode,s)).return=r,r=l),i(r)):t(r,l)}}var Al=bl(!0),_l=bl(!1),El=wa(null),Cl=null,wl=null,Sl=null;function kl(){Sl=wl=Cl=null}function Il(e){var n=El.current;Sa(El),e._currentValue=n}function Tl(e,n,t){for(;null!==e;){var r=e.alternate;if((e.childLanes&n)!==n?(e.childLanes|=n,null!==r&&(r.childLanes|=n)):null!==r&&(r.childLanes&n)!==n&&(r.childLanes|=n),e===t)break;e=e.return}}function Bl(e,n){Cl=e,Sl=wl=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(!!(e.lanes&n)&&(bi=!0),e.firstContext=null)}function xl(e){var n=e._currentValue;if(Sl!==e)if(e={context:e,memoizedValue:n,next:null},null===wl){if(null===Cl)throw Error(l(308));wl=e,Cl.dependencies={lanes:0,firstContext:e}}else wl=wl.next=e;return n}var Nl=null;function Pl(e){null===Nl?Nl=[e]:Nl.push(e)}function Ll(e,n,t,r){var a=n.interleaved;return null===a?(t.next=t,Pl(n)):(t.next=a.next,a.next=t),n.interleaved=t,Ml(e,r)}function Ml(e,n){e.lanes|=n;var t=e.alternate;for(null!==t&&(t.lanes|=n),t=e,e=e.return;null!==e;)e.childLanes|=n,null!==(t=e.alternate)&&(t.childLanes|=n),t=e,e=e.return;return 3===t.tag?t.stateNode:null}var Rl=!1;function Ol(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Hl(e,n){e=e.updateQueue,n.updateQueue===e&&(n.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function zl(e,n){return{eventTime:e,lane:n,tag:0,payload:null,callback:null,next:null}}function Dl(e,n,t){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,2&Ts){var a=r.pending;return null===a?n.next=n:(n.next=a.next,a.next=n),r.pending=n,Ml(e,t)}return null===(a=r.interleaved)?(n.next=n,Pl(r)):(n.next=a.next,a.next=n),r.interleaved=n,Ml(e,t)}function Fl(e,n,t){if(null!==(n=n.updateQueue)&&(n=n.shared,4194240&t)){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,bn(e,t)}}function Ul(e,n){var t=e.updateQueue,r=e.alternate;if(null!==r&&t===(r=r.updateQueue)){var a=null,l=null;if(null!==(t=t.firstBaseUpdate)){do{var o={eventTime:t.eventTime,lane:t.lane,tag:t.tag,payload:t.payload,callback:t.callback,next:null};null===l?a=l=o:l=l.next=o,t=t.next}while(null!==t);null===l?a=l=n:l=l.next=n}else a=l=n;return t={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:l,shared:r.shared,effects:r.effects},void(e.updateQueue=t)}null===(e=t.lastBaseUpdate)?t.firstBaseUpdate=n:e.next=n,t.lastBaseUpdate=n}function jl(e,n,t,r){var a=e.updateQueue;Rl=!1;var l=a.firstBaseUpdate,o=a.lastBaseUpdate,i=a.shared.pending;if(null!==i){a.shared.pending=null;var s=i,u=s.next;s.next=null,null===o?l=u:o.next=u,o=s;var c=e.alternate;null!==c&&(i=(c=c.updateQueue).lastBaseUpdate)!==o&&(null===i?c.firstBaseUpdate=u:i.next=u,c.lastBaseUpdate=s)}if(null!==l){var f=a.baseState;for(o=0,c=u=s=null,i=l;;){var d=i.lane,p=i.eventTime;if((r&d)===d){null!==c&&(c=c.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var h=e,m=i;switch(d=n,p=t,m.tag){case 1:if("function"==typeof(h=m.payload)){f=h.call(p,f,d);break e}f=h;break e;case 3:h.flags=-65537&h.flags|128;case 0:if(null==(d="function"==typeof(h=m.payload)?h.call(p,f,d):h))break e;f=H({},f,d);break e;case 2:Rl=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(d=a.effects)?a.effects=[i]:d.push(i))}else p={eventTime:p,lane:d,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===c?(u=c=p,s=f):c=c.next=p,o|=d;if(null===(i=i.next)){if(null===(i=a.shared.pending))break;i=(d=i).next,d.next=null,a.lastBaseUpdate=d,a.shared.pending=null}}if(null===c&&(s=f),a.baseState=s,a.firstBaseUpdate=u,a.lastBaseUpdate=c,null!==(n=a.shared.interleaved)){a=n;do{o|=a.lane,a=a.next}while(a!==n)}else null===l&&(a.shared.lanes=0);Os|=o,e.lanes=o,e.memoizedState=f}}function Gl(e,n,t){if(e=n.effects,n.effects=null,null!==e)for(n=0;n<e.length;n++){var r=e[n],a=r.callback;if(null!==a){if(r.callback=null,r=t,"function"!=typeof a)throw Error(l(191,a));a.call(r)}}}var Vl={},Wl=wa(Vl),$l=wa(Vl),Yl=wa(Vl);function Ql(e){if(e===Vl)throw Error(l(174));return e}function Xl(e,n){switch(ka(Yl,n),ka($l,e),ka(Wl,Vl),e=n.nodeType){case 9:case 11:n=(n=n.documentElement)?n.namespaceURI:se(null,"");break;default:n=se(n=(e=8===e?n.parentNode:n).namespaceURI||null,e=e.tagName)}Sa(Wl),ka(Wl,n)}function Kl(){Sa(Wl),Sa($l),Sa(Yl)}function Zl(e){Ql(Yl.current);var n=Ql(Wl.current),t=se(n,e.type);n!==t&&(ka($l,e),ka(Wl,t))}function ql(e){$l.current===e&&(Sa(Wl),Sa($l))}var Jl=wa(0);function eo(e){for(var n=e;null!==n;){if(13===n.tag){var t=n.memoizedState;if(null!==t&&(null===(t=t.dehydrated)||"$?"===t.data||"$!"===t.data))return n}else if(19===n.tag&&void 0!==n.memoizedProps.revealOrder){if(128&n.flags)return n}else if(null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return null;n=n.return}n.sibling.return=n.return,n=n.sibling}return null}var no=[];function to(){for(var e=0;e<no.length;e++)no[e]._workInProgressVersionPrimary=null;no.length=0}var ro=A.ReactCurrentDispatcher,ao=A.ReactCurrentBatchConfig,lo=0,oo=null,io=null,so=null,uo=!1,co=!1,fo=0,po=0;function ho(){throw Error(l(321))}function mo(e,n){if(null===n)return!1;for(var t=0;t<n.length&&t<e.length;t++)if(!ir(e[t],n[t]))return!1;return!0}function go(e,n,t,r,a,o){if(lo=o,oo=n,n.memoizedState=null,n.updateQueue=null,n.lanes=0,ro.current=null===e||null===e.memoizedState?Jo:ei,e=t(r,a),co){o=0;do{if(co=!1,fo=0,25<=o)throw Error(l(301));o+=1,so=io=null,n.updateQueue=null,ro.current=ni,e=t(r,a)}while(co)}if(ro.current=qo,n=null!==io&&null!==io.next,lo=0,so=io=oo=null,uo=!1,n)throw Error(l(300));return e}function yo(){var e=0!==fo;return fo=0,e}function vo(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===so?oo.memoizedState=so=e:so=so.next=e,so}function bo(){if(null===io){var e=oo.alternate;e=null!==e?e.memoizedState:null}else e=io.next;var n=null===so?oo.memoizedState:so.next;if(null!==n)so=n,io=e;else{if(null===e)throw Error(l(310));e={memoizedState:(io=e).memoizedState,baseState:io.baseState,baseQueue:io.baseQueue,queue:io.queue,next:null},null===so?oo.memoizedState=so=e:so=so.next=e}return so}function Ao(e,n){return"function"==typeof n?n(e):n}function _o(e){var n=bo(),t=n.queue;if(null===t)throw Error(l(311));t.lastRenderedReducer=e;var r=io,a=r.baseQueue,o=t.pending;if(null!==o){if(null!==a){var i=a.next;a.next=o.next,o.next=i}r.baseQueue=a=o,t.pending=null}if(null!==a){o=a.next,r=r.baseState;var s=i=null,u=null,c=o;do{var f=c.lane;if((lo&f)===f)null!==u&&(u=u.next={lane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),r=c.hasEagerState?c.eagerState:e(r,c.action);else{var d={lane:f,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null};null===u?(s=u=d,i=r):u=u.next=d,oo.lanes|=f,Os|=f}c=c.next}while(null!==c&&c!==o);null===u?i=r:u.next=s,ir(r,n.memoizedState)||(bi=!0),n.memoizedState=r,n.baseState=i,n.baseQueue=u,t.lastRenderedState=r}if(null!==(e=t.interleaved)){a=e;do{o=a.lane,oo.lanes|=o,Os|=o,a=a.next}while(a!==e)}else null===a&&(t.lanes=0);return[n.memoizedState,t.dispatch]}function Eo(e){var n=bo(),t=n.queue;if(null===t)throw Error(l(311));t.lastRenderedReducer=e;var r=t.dispatch,a=t.pending,o=n.memoizedState;if(null!==a){t.pending=null;var i=a=a.next;do{o=e(o,i.action),i=i.next}while(i!==a);ir(o,n.memoizedState)||(bi=!0),n.memoizedState=o,null===n.baseQueue&&(n.baseState=o),t.lastRenderedState=o}return[o,r]}function Co(){}function wo(e,n){var t=oo,r=bo(),a=n(),o=!ir(r.memoizedState,a);if(o&&(r.memoizedState=a,bi=!0),r=r.queue,Oo(Io.bind(null,t,r,e),[e]),r.getSnapshot!==n||o||null!==so&&1&so.memoizedState.tag){if(t.flags|=2048,No(9,ko.bind(null,t,r,a,n),void 0,null),null===Bs)throw Error(l(349));30&lo||So(t,n,a)}return a}function So(e,n,t){e.flags|=16384,e={getSnapshot:n,value:t},null===(n=oo.updateQueue)?(n={lastEffect:null,stores:null},oo.updateQueue=n,n.stores=[e]):null===(t=n.stores)?n.stores=[e]:t.push(e)}function ko(e,n,t,r){n.value=t,n.getSnapshot=r,To(n)&&Bo(e)}function Io(e,n,t){return t((function(){To(n)&&Bo(e)}))}function To(e){var n=e.getSnapshot;e=e.value;try{var t=n();return!ir(e,t)}catch(e){return!0}}function Bo(e){var n=Ml(e,1);null!==n&&tu(n,e,1,-1)}function xo(e){var n=vo();return"function"==typeof e&&(e=e()),n.memoizedState=n.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ao,lastRenderedState:e},n.queue=e,e=e.dispatch=Qo.bind(null,oo,e),[n.memoizedState,e]}function No(e,n,t,r){return e={tag:e,create:n,destroy:t,deps:r,next:null},null===(n=oo.updateQueue)?(n={lastEffect:null,stores:null},oo.updateQueue=n,n.lastEffect=e.next=e):null===(t=n.lastEffect)?n.lastEffect=e.next=e:(r=t.next,t.next=e,e.next=r,n.lastEffect=e),e}function Po(){return bo().memoizedState}function Lo(e,n,t,r){var a=vo();oo.flags|=e,a.memoizedState=No(1|n,t,void 0,void 0===r?null:r)}function Mo(e,n,t,r){var a=bo();r=void 0===r?null:r;var l=void 0;if(null!==io){var o=io.memoizedState;if(l=o.destroy,null!==r&&mo(r,o.deps))return void(a.memoizedState=No(n,t,l,r))}oo.flags|=e,a.memoizedState=No(1|n,t,l,r)}function Ro(e,n){return Lo(8390656,8,e,n)}function Oo(e,n){return Mo(2048,8,e,n)}function Ho(e,n){return Mo(4,2,e,n)}function zo(e,n){return Mo(4,4,e,n)}function Do(e,n){return"function"==typeof n?(e=e(),n(e),function(){n(null)}):null!=n?(e=e(),n.current=e,function(){n.current=null}):void 0}function Fo(e,n,t){return t=null!=t?t.concat([e]):null,Mo(4,4,Do.bind(null,n,e),t)}function Uo(){}function jo(e,n){var t=bo();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&mo(n,r[1])?r[0]:(t.memoizedState=[e,n],e)}function Go(e,n){var t=bo();n=void 0===n?null:n;var r=t.memoizedState;return null!==r&&null!==n&&mo(n,r[1])?r[0]:(e=e(),t.memoizedState=[e,n],e)}function Vo(e,n,t){return 21&lo?(ir(t,n)||(t=gn(),oo.lanes|=t,Os|=t,e.baseState=!0),n):(e.baseState&&(e.baseState=!1,bi=!0),e.memoizedState=t)}function Wo(e,n){var t=An;An=0!==t&&4>t?t:4,e(!0);var r=ao.transition;ao.transition={};try{e(!1),n()}finally{An=t,ao.transition=r}}function $o(){return bo().memoizedState}function Yo(e,n,t){var r=nu(e);t={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null},Xo(e)?Ko(n,t):null!==(t=Ll(e,n,t,r))&&(tu(t,e,r,eu()),Zo(t,n,r))}function Qo(e,n,t){var r=nu(e),a={lane:r,action:t,hasEagerState:!1,eagerState:null,next:null};if(Xo(e))Ko(n,a);else{var l=e.alternate;if(0===e.lanes&&(null===l||0===l.lanes)&&null!==(l=n.lastRenderedReducer))try{var o=n.lastRenderedState,i=l(o,t);if(a.hasEagerState=!0,a.eagerState=i,ir(i,o)){var s=n.interleaved;return null===s?(a.next=a,Pl(n)):(a.next=s.next,s.next=a),void(n.interleaved=a)}}catch(e){}null!==(t=Ll(e,n,a,r))&&(tu(t,e,r,a=eu()),Zo(t,n,r))}}function Xo(e){var n=e.alternate;return e===oo||null!==n&&n===oo}function Ko(e,n){co=uo=!0;var t=e.pending;null===t?n.next=n:(n.next=t.next,t.next=n),e.pending=n}function Zo(e,n,t){if(4194240&t){var r=n.lanes;t|=r&=e.pendingLanes,n.lanes=t,bn(e,t)}}var qo={readContext:xl,useCallback:ho,useContext:ho,useEffect:ho,useImperativeHandle:ho,useInsertionEffect:ho,useLayoutEffect:ho,useMemo:ho,useReducer:ho,useRef:ho,useState:ho,useDebugValue:ho,useDeferredValue:ho,useTransition:ho,useMutableSource:ho,useSyncExternalStore:ho,useId:ho,unstable_isNewReconciler:!1},Jo={readContext:xl,useCallback:function(e,n){return vo().memoizedState=[e,void 0===n?null:n],e},useContext:xl,useEffect:Ro,useImperativeHandle:function(e,n,t){return t=null!=t?t.concat([e]):null,Lo(4194308,4,Do.bind(null,n,e),t)},useLayoutEffect:function(e,n){return Lo(4194308,4,e,n)},useInsertionEffect:function(e,n){return Lo(4,2,e,n)},useMemo:function(e,n){var t=vo();return n=void 0===n?null:n,e=e(),t.memoizedState=[e,n],e},useReducer:function(e,n,t){var r=vo();return n=void 0!==t?t(n):n,r.memoizedState=r.baseState=n,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:n},r.queue=e,e=e.dispatch=Yo.bind(null,oo,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},vo().memoizedState=e},useState:xo,useDebugValue:Uo,useDeferredValue:function(e){return vo().memoizedState=e},useTransition:function(){var e=xo(!1),n=e[0];return e=Wo.bind(null,e[1]),vo().memoizedState=e,[n,e]},useMutableSource:function(){},useSyncExternalStore:function(e,n,t){var r=oo,a=vo();if(al){if(void 0===t)throw Error(l(407));t=t()}else{if(t=n(),null===Bs)throw Error(l(349));30&lo||So(r,n,t)}a.memoizedState=t;var o={value:t,getSnapshot:n};return a.queue=o,Ro(Io.bind(null,r,o,e),[e]),r.flags|=2048,No(9,ko.bind(null,r,o,t,n),void 0,null),t},useId:function(){var e=vo(),n=Bs.identifierPrefix;if(al){var t=Za;n=":"+n+"R"+(t=(Ka&~(1<<32-on(Ka)-1)).toString(32)+t),0<(t=fo++)&&(n+="H"+t.toString(32)),n+=":"}else n=":"+n+"r"+(t=po++).toString(32)+":";return e.memoizedState=n},unstable_isNewReconciler:!1},ei={readContext:xl,useCallback:jo,useContext:xl,useEffect:Oo,useImperativeHandle:Fo,useInsertionEffect:Ho,useLayoutEffect:zo,useMemo:Go,useReducer:_o,useRef:Po,useState:function(){return _o(Ao)},useDebugValue:Uo,useDeferredValue:function(e){return Vo(bo(),io.memoizedState,e)},useTransition:function(){return[_o(Ao)[0],bo().memoizedState]},useMutableSource:Co,useSyncExternalStore:wo,useId:$o,unstable_isNewReconciler:!1},ni={readContext:xl,useCallback:jo,useContext:xl,useEffect:Oo,useImperativeHandle:Fo,useInsertionEffect:Ho,useLayoutEffect:zo,useMemo:Go,useReducer:Eo,useRef:Po,useState:function(){return Eo(Ao)},useDebugValue:Uo,useDeferredValue:function(e){var n=bo();return null===io?n.memoizedState=e:Vo(n,io.memoizedState,e)},useTransition:function(){return[Eo(Ao)[0],bo().memoizedState]},useMutableSource:Co,useSyncExternalStore:wo,useId:$o,unstable_isNewReconciler:!1};function ti(e,n){if(e&&e.defaultProps){for(var t in n=H({},n),e=e.defaultProps)void 0===n[t]&&(n[t]=e[t]);return n}return n}function ri(e,n,t,r){t=null==(t=t(r,n=e.memoizedState))?n:H({},n,t),e.memoizedState=t,0===e.lanes&&(e.updateQueue.baseState=t)}var ai={isMounted:function(e){return!!(e=e._reactInternals)&&je(e)===e},enqueueSetState:function(e,n,t){e=e._reactInternals;var r=eu(),a=nu(e),l=zl(r,a);l.payload=n,null!=t&&(l.callback=t),null!==(n=Dl(e,l,a))&&(tu(n,e,a,r),Fl(n,e,a))},enqueueReplaceState:function(e,n,t){e=e._reactInternals;var r=eu(),a=nu(e),l=zl(r,a);l.tag=1,l.payload=n,null!=t&&(l.callback=t),null!==(n=Dl(e,l,a))&&(tu(n,e,a,r),Fl(n,e,a))},enqueueForceUpdate:function(e,n){e=e._reactInternals;var t=eu(),r=nu(e),a=zl(t,r);a.tag=2,null!=n&&(a.callback=n),null!==(n=Dl(e,a,r))&&(tu(n,e,r,t),Fl(n,e,r))}};function li(e,n,t,r,a,l,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,l,o):!(n.prototype&&n.prototype.isPureReactComponent&&sr(t,r)&&sr(a,l))}function oi(e,n,t){var r=!1,a=Ia,l=n.contextType;return"object"==typeof l&&null!==l?l=xl(l):(a=Pa(n)?xa:Ta.current,l=(r=null!=(r=n.contextTypes))?Na(e,a):Ia),n=new n(t,l),e.memoizedState=null!==n.state&&void 0!==n.state?n.state:null,n.updater=ai,e.stateNode=n,n._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=l),n}function ii(e,n,t,r){e=n.state,"function"==typeof n.componentWillReceiveProps&&n.componentWillReceiveProps(t,r),"function"==typeof n.UNSAFE_componentWillReceiveProps&&n.UNSAFE_componentWillReceiveProps(t,r),n.state!==e&&ai.enqueueReplaceState(n,n.state,null)}function si(e,n,t,r){var a=e.stateNode;a.props=t,a.state=e.memoizedState,a.refs={},Ol(e);var l=n.contextType;"object"==typeof l&&null!==l?a.context=xl(l):(l=Pa(n)?xa:Ta.current,a.context=Na(e,l)),a.state=e.memoizedState,"function"==typeof(l=n.getDerivedStateFromProps)&&(ri(e,n,l,t),a.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(n=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),n!==a.state&&ai.enqueueReplaceState(a,a.state,null),jl(e,t,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4194308)}function ui(e,n){try{var t="",r=n;do{t+=U(r),r=r.return}while(r);var a=t}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:n,stack:a,digest:null}}function ci(e,n,t){return{value:e,source:null,stack:null!=t?t:null,digest:null!=n?n:null}}function fi(e,n){try{console.error(n.value)}catch(e){setTimeout((function(){throw e}))}}var di="function"==typeof WeakMap?WeakMap:Map;function pi(e,n,t){(t=zl(-1,t)).tag=3,t.payload={element:null};var r=n.value;return t.callback=function(){Vs||(Vs=!0,Ws=r),fi(0,n)},t}function hi(e,n,t){(t=zl(-1,t)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=n.value;t.payload=function(){return r(a)},t.callback=function(){fi(0,n)}}var l=e.stateNode;return null!==l&&"function"==typeof l.componentDidCatch&&(t.callback=function(){fi(0,n),"function"!=typeof r&&(null===$s?$s=new Set([this]):$s.add(this));var e=n.stack;this.componentDidCatch(n.value,{componentStack:null!==e?e:""})}),t}function mi(e,n,t){var r=e.pingCache;if(null===r){r=e.pingCache=new di;var a=new Set;r.set(n,a)}else void 0===(a=r.get(n))&&(a=new Set,r.set(n,a));a.has(t)||(a.add(t),e=Su.bind(null,e,n,t),n.then(e,e))}function gi(e){do{var n;if((n=13===e.tag)&&(n=null===(n=e.memoizedState)||null!==n.dehydrated),n)return e;e=e.return}while(null!==e);return null}function yi(e,n,t,r,a){return 1&e.mode?(e.flags|=65536,e.lanes=a,e):(e===n?e.flags|=65536:(e.flags|=128,t.flags|=131072,t.flags&=-52805,1===t.tag&&(null===t.alternate?t.tag=17:((n=zl(-1,1)).tag=2,Dl(t,n,1))),t.lanes|=1),e)}var vi=A.ReactCurrentOwner,bi=!1;function Ai(e,n,t,r){n.child=null===e?_l(n,null,t,r):Al(n,e.child,t,r)}function _i(e,n,t,r,a){t=t.render;var l=n.ref;return Bl(n,a),r=go(e,n,t,r,l,a),t=yo(),null===e||bi?(al&&t&&el(n),n.flags|=1,Ai(e,n,r,a),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~a,Vi(e,n,a))}function Ei(e,n,t,r,a){if(null===e){var l=t.type;return"function"!=typeof l||Pu(l)||void 0!==l.defaultProps||null!==t.compare||void 0!==t.defaultProps?((e=Mu(t.type,null,r,n,n.mode,a)).ref=n.ref,e.return=n,n.child=e):(n.tag=15,n.type=l,Ci(e,n,l,r,a))}if(l=e.child,!(e.lanes&a)){var o=l.memoizedProps;if((t=null!==(t=t.compare)?t:sr)(o,r)&&e.ref===n.ref)return Vi(e,n,a)}return n.flags|=1,(e=Lu(l,r)).ref=n.ref,e.return=n,n.child=e}function Ci(e,n,t,r,a){if(null!==e){var l=e.memoizedProps;if(sr(l,r)&&e.ref===n.ref){if(bi=!1,n.pendingProps=r=l,!(e.lanes&a))return n.lanes=e.lanes,Vi(e,n,a);131072&e.flags&&(bi=!0)}}return ki(e,n,t,r,a)}function wi(e,n,t){var r=n.pendingProps,a=r.children,l=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(1&n.mode){if(!(1073741824&t))return e=null!==l?l.baseLanes|t:t,n.lanes=n.childLanes=1073741824,n.memoizedState={baseLanes:e,cachePool:null,transitions:null},n.updateQueue=null,ka(Ls,Ps),Ps|=e,null;n.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==l?l.baseLanes:t,ka(Ls,Ps),Ps|=r}else n.memoizedState={baseLanes:0,cachePool:null,transitions:null},ka(Ls,Ps),Ps|=t;else null!==l?(r=l.baseLanes|t,n.memoizedState=null):r=t,ka(Ls,Ps),Ps|=r;return Ai(e,n,a,t),n.child}function Si(e,n){var t=n.ref;(null===e&&null!==t||null!==e&&e.ref!==t)&&(n.flags|=512,n.flags|=2097152)}function ki(e,n,t,r,a){var l=Pa(t)?xa:Ta.current;return l=Na(n,l),Bl(n,a),t=go(e,n,t,r,l,a),r=yo(),null===e||bi?(al&&r&&el(n),n.flags|=1,Ai(e,n,t,a),n.child):(n.updateQueue=e.updateQueue,n.flags&=-2053,e.lanes&=~a,Vi(e,n,a))}function Ii(e,n,t,r,a){if(Pa(t)){var l=!0;Oa(n)}else l=!1;if(Bl(n,a),null===n.stateNode)Gi(e,n),oi(n,t,r),si(n,t,r,a),r=!0;else if(null===e){var o=n.stateNode,i=n.memoizedProps;o.props=i;var s=o.context,u=t.contextType;u="object"==typeof u&&null!==u?xl(u):Na(n,u=Pa(t)?xa:Ta.current);var c=t.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof o.getSnapshotBeforeUpdate;f||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(i!==r||s!==u)&&ii(n,o,r,u),Rl=!1;var d=n.memoizedState;o.state=d,jl(n,r,o,a),s=n.memoizedState,i!==r||d!==s||Ba.current||Rl?("function"==typeof c&&(ri(n,t,c,r),s=n.memoizedState),(i=Rl||li(n,t,i,r,d,s,u))?(f||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(n.flags|=4194308)):("function"==typeof o.componentDidMount&&(n.flags|=4194308),n.memoizedProps=r,n.memoizedState=s),o.props=r,o.state=s,o.context=u,r=i):("function"==typeof o.componentDidMount&&(n.flags|=4194308),r=!1)}else{o=n.stateNode,Hl(e,n),i=n.memoizedProps,u=n.type===n.elementType?i:ti(n.type,i),o.props=u,f=n.pendingProps,d=o.context,s="object"==typeof(s=t.contextType)&&null!==s?xl(s):Na(n,s=Pa(t)?xa:Ta.current);var p=t.getDerivedStateFromProps;(c="function"==typeof p||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(i!==f||d!==s)&&ii(n,o,r,s),Rl=!1,d=n.memoizedState,o.state=d,jl(n,r,o,a);var h=n.memoizedState;i!==f||d!==h||Ba.current||Rl?("function"==typeof p&&(ri(n,t,p,r),h=n.memoizedState),(u=Rl||li(n,t,u,r,d,h,s)||!1)?(c||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(r,h,s),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,h,s)),"function"==typeof o.componentDidUpdate&&(n.flags|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(n.flags|=1024)):("function"!=typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(n.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(n.flags|=1024),n.memoizedProps=r,n.memoizedState=h),o.props=r,o.state=h,o.context=s,r=u):("function"!=typeof o.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(n.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(n.flags|=1024),r=!1)}return Ti(e,n,t,r,l,a)}function Ti(e,n,t,r,a,l){Si(e,n);var o=!!(128&n.flags);if(!r&&!o)return a&&Ha(n,t,!1),Vi(e,n,l);r=n.stateNode,vi.current=n;var i=o&&"function"!=typeof t.getDerivedStateFromError?null:r.render();return n.flags|=1,null!==e&&o?(n.child=Al(n,e.child,null,l),n.child=Al(n,null,i,l)):Ai(e,n,i,l),n.memoizedState=r.state,a&&Ha(n,t,!0),n.child}function Bi(e){var n=e.stateNode;n.pendingContext?Ma(0,n.pendingContext,n.pendingContext!==n.context):n.context&&Ma(0,n.context,!1),Xl(e,n.containerInfo)}function xi(e,n,t,r,a){return pl(),hl(a),n.flags|=256,Ai(e,n,t,r),n.child}var Ni,Pi,Li,Mi,Ri={dehydrated:null,treeContext:null,retryLane:0};function Oi(e){return{baseLanes:e,cachePool:null,transitions:null}}function Hi(e,n,t){var r,a=n.pendingProps,o=Jl.current,i=!1,s=!!(128&n.flags);if((r=s)||(r=(null===e||null!==e.memoizedState)&&!!(2&o)),r?(i=!0,n.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),ka(Jl,1&o),null===e)return ul(n),null!==(e=n.memoizedState)&&null!==(e=e.dehydrated)?(1&n.mode?"$!"===e.data?n.lanes=8:n.lanes=1073741824:n.lanes=1,null):(s=a.children,e=a.fallback,i?(a=n.mode,i=n.child,s={mode:"hidden",children:s},1&a||null===i?i=Ou(s,a,0,null):(i.childLanes=0,i.pendingProps=s),e=Ru(e,a,t,null),i.return=n,e.return=n,i.sibling=e,n.child=i,n.child.memoizedState=Oi(t),n.memoizedState=Ri,e):zi(n,s));if(null!==(o=e.memoizedState)&&null!==(r=o.dehydrated))return function(e,n,t,r,a,o,i){if(t)return 256&n.flags?(n.flags&=-257,Di(e,n,i,r=ci(Error(l(422))))):null!==n.memoizedState?(n.child=e.child,n.flags|=128,null):(o=r.fallback,a=n.mode,r=Ou({mode:"visible",children:r.children},a,0,null),(o=Ru(o,a,i,null)).flags|=2,r.return=n,o.return=n,r.sibling=o,n.child=r,1&n.mode&&Al(n,e.child,null,i),n.child.memoizedState=Oi(i),n.memoizedState=Ri,o);if(!(1&n.mode))return Di(e,n,i,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var s=r.dgst;return r=s,Di(e,n,i,r=ci(o=Error(l(419)),r,void 0))}if(s=!!(i&e.childLanes),bi||s){if(null!==(r=Bs)){switch(i&-i){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=a&(r.suspendedLanes|i)?0:a)&&a!==o.retryLane&&(o.retryLane=a,Ml(e,a),tu(r,e,a,-1))}return mu(),Di(e,n,i,r=ci(Error(l(421))))}return"$?"===a.data?(n.flags|=128,n.child=e.child,n=Iu.bind(null,e),a._reactRetry=n,null):(e=o.treeContext,rl=ua(a.nextSibling),tl=n,al=!0,ll=null,null!==e&&(Ya[Qa++]=Ka,Ya[Qa++]=Za,Ya[Qa++]=Xa,Ka=e.id,Za=e.overflow,Xa=n),(n=zi(n,r.children)).flags|=4096,n)}(e,n,s,a,r,o,t);if(i){i=a.fallback,s=n.mode,r=(o=e.child).sibling;var u={mode:"hidden",children:a.children};return 1&s||n.child===o?(a=Lu(o,u)).subtreeFlags=14680064&o.subtreeFlags:((a=n.child).childLanes=0,a.pendingProps=u,n.deletions=null),null!==r?i=Lu(r,i):(i=Ru(i,s,t,null)).flags|=2,i.return=n,a.return=n,a.sibling=i,n.child=a,a=i,i=n.child,s=null===(s=e.child.memoizedState)?Oi(t):{baseLanes:s.baseLanes|t,cachePool:null,transitions:s.transitions},i.memoizedState=s,i.childLanes=e.childLanes&~t,n.memoizedState=Ri,a}return e=(i=e.child).sibling,a=Lu(i,{mode:"visible",children:a.children}),!(1&n.mode)&&(a.lanes=t),a.return=n,a.sibling=null,null!==e&&(null===(t=n.deletions)?(n.deletions=[e],n.flags|=16):t.push(e)),n.child=a,n.memoizedState=null,a}function zi(e,n){return(n=Ou({mode:"visible",children:n},e.mode,0,null)).return=e,e.child=n}function Di(e,n,t,r){return null!==r&&hl(r),Al(n,e.child,null,t),(e=zi(n,n.pendingProps.children)).flags|=2,n.memoizedState=null,e}function Fi(e,n,t){e.lanes|=n;var r=e.alternate;null!==r&&(r.lanes|=n),Tl(e.return,n,t)}function Ui(e,n,t,r,a){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:n,rendering:null,renderingStartTime:0,last:r,tail:t,tailMode:a}:(l.isBackwards=n,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=t,l.tailMode=a)}function ji(e,n,t){var r=n.pendingProps,a=r.revealOrder,l=r.tail;if(Ai(e,n,r.children,t),2&(r=Jl.current))r=1&r|2,n.flags|=128;else{if(null!==e&&128&e.flags)e:for(e=n.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Fi(e,t,n);else if(19===e.tag)Fi(e,t,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(ka(Jl,r),1&n.mode)switch(a){case"forwards":for(t=n.child,a=null;null!==t;)null!==(e=t.alternate)&&null===eo(e)&&(a=t),t=t.sibling;null===(t=a)?(a=n.child,n.child=null):(a=t.sibling,t.sibling=null),Ui(n,!1,a,t,l);break;case"backwards":for(t=null,a=n.child,n.child=null;null!==a;){if(null!==(e=a.alternate)&&null===eo(e)){n.child=a;break}e=a.sibling,a.sibling=t,t=a,a=e}Ui(n,!0,t,null,l);break;case"together":Ui(n,!1,null,null,void 0);break;default:n.memoizedState=null}else n.memoizedState=null;return n.child}function Gi(e,n){!(1&n.mode)&&null!==e&&(e.alternate=null,n.alternate=null,n.flags|=2)}function Vi(e,n,t){if(null!==e&&(n.dependencies=e.dependencies),Os|=n.lanes,!(t&n.childLanes))return null;if(null!==e&&n.child!==e.child)throw Error(l(153));if(null!==n.child){for(t=Lu(e=n.child,e.pendingProps),n.child=t,t.return=n;null!==e.sibling;)e=e.sibling,(t=t.sibling=Lu(e,e.pendingProps)).return=n;t.sibling=null}return n.child}function Wi(e,n){if(!al)switch(e.tailMode){case"hidden":n=e.tail;for(var t=null;null!==n;)null!==n.alternate&&(t=n),n=n.sibling;null===t?e.tail=null:t.sibling=null;break;case"collapsed":t=e.tail;for(var r=null;null!==t;)null!==t.alternate&&(r=t),t=t.sibling;null===r?n||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function $i(e){var n=null!==e.alternate&&e.alternate.child===e.child,t=0,r=0;if(n)for(var a=e.child;null!==a;)t|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)t|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=t,n}function Yi(e,n,t){var r=n.pendingProps;switch(nl(n),n.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return $i(n),null;case 1:case 17:return Pa(n.type)&&La(),$i(n),null;case 3:return r=n.stateNode,Kl(),Sa(Ba),Sa(Ta),to(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(fl(n)?n.flags|=4:null===e||e.memoizedState.isDehydrated&&!(256&n.flags)||(n.flags|=1024,null!==ll&&(ou(ll),ll=null))),Pi(e,n),$i(n),null;case 5:ql(n);var a=Ql(Yl.current);if(t=n.type,null!==e&&null!=n.stateNode)Li(e,n,t,r,a),e.ref!==n.ref&&(n.flags|=512,n.flags|=2097152);else{if(!r){if(null===n.stateNode)throw Error(l(166));return $i(n),null}if(e=Ql(Wl.current),fl(n)){r=n.stateNode,t=n.type;var o=n.memoizedProps;switch(r[da]=n,r[pa]=o,e=!!(1&n.mode),t){case"dialog":Dr("cancel",r),Dr("close",r);break;case"iframe":case"object":case"embed":Dr("load",r);break;case"video":case"audio":for(a=0;a<Rr.length;a++)Dr(Rr[a],r);break;case"source":Dr("error",r);break;case"img":case"image":case"link":Dr("error",r),Dr("load",r);break;case"details":Dr("toggle",r);break;case"input":K(r,o),Dr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},Dr("invalid",r);break;case"textarea":ae(r,o),Dr("invalid",r)}for(var s in ve(t,o),a=null,o)if(o.hasOwnProperty(s)){var u=o[s];"children"===s?"string"==typeof u?r.textContent!==u&&(!0!==o.suppressHydrationWarning&&qr(r.textContent,u,e),a=["children",u]):"number"==typeof u&&r.textContent!==""+u&&(!0!==o.suppressHydrationWarning&&qr(r.textContent,u,e),a=["children",""+u]):i.hasOwnProperty(s)&&null!=u&&"onScroll"===s&&Dr("scroll",r)}switch(t){case"input":$(r),J(r,o,!0);break;case"textarea":$(r),oe(r);break;case"select":case"option":break;default:"function"==typeof o.onClick&&(r.onclick=Jr)}r=a,n.updateQueue=r,null!==r&&(n.flags|=4)}else{s=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(t)),"http://www.w3.org/1999/xhtml"===e?"script"===t?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(t,{is:r.is}):(e=s.createElement(t),"select"===t&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,t),e[da]=n,e[pa]=r,Ni(e,n,!1,!1),n.stateNode=e;e:{switch(s=be(t,r),t){case"dialog":Dr("cancel",e),Dr("close",e),a=r;break;case"iframe":case"object":case"embed":Dr("load",e),a=r;break;case"video":case"audio":for(a=0;a<Rr.length;a++)Dr(Rr[a],e);a=r;break;case"source":Dr("error",e),a=r;break;case"img":case"image":case"link":Dr("error",e),Dr("load",e),a=r;break;case"details":Dr("toggle",e),a=r;break;case"input":K(e,r),a=X(e,r),Dr("invalid",e);break;case"option":default:a=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=H({},r,{value:void 0}),Dr("invalid",e);break;case"textarea":ae(e,r),a=re(e,r),Dr("invalid",e)}for(o in ve(t,a),u=a)if(u.hasOwnProperty(o)){var c=u[o];"style"===o?ge(e,c):"dangerouslySetInnerHTML"===o?null!=(c=c?c.__html:void 0)&&fe(e,c):"children"===o?"string"==typeof c?("textarea"!==t||""!==c)&&de(e,c):"number"==typeof c&&de(e,""+c):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(i.hasOwnProperty(o)?null!=c&&"onScroll"===o&&Dr("scroll",e):null!=c&&b(e,o,c,s))}switch(t){case"input":$(e),J(e,r,!1);break;case"textarea":$(e),oe(e);break;case"option":null!=r.value&&e.setAttribute("value",""+V(r.value));break;case"select":e.multiple=!!r.multiple,null!=(o=r.value)?te(e,!!r.multiple,o,!1):null!=r.defaultValue&&te(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Jr)}switch(t){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(n.flags|=4)}null!==n.ref&&(n.flags|=512,n.flags|=2097152)}return $i(n),null;case 6:if(e&&null!=n.stateNode)Mi(e,n,e.memoizedProps,r);else{if("string"!=typeof r&&null===n.stateNode)throw Error(l(166));if(t=Ql(Yl.current),Ql(Wl.current),fl(n)){if(r=n.stateNode,t=n.memoizedProps,r[da]=n,(o=r.nodeValue!==t)&&null!==(e=tl))switch(e.tag){case 3:qr(r.nodeValue,t,!!(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&qr(r.nodeValue,t,!!(1&e.mode))}o&&(n.flags|=4)}else(r=(9===t.nodeType?t:t.ownerDocument).createTextNode(r))[da]=n,n.stateNode=r}return $i(n),null;case 13:if(Sa(Jl),r=n.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(al&&null!==rl&&1&n.mode&&!(128&n.flags))dl(),pl(),n.flags|=98560,o=!1;else if(o=fl(n),null!==r&&null!==r.dehydrated){if(null===e){if(!o)throw Error(l(318));if(!(o=null!==(o=n.memoizedState)?o.dehydrated:null))throw Error(l(317));o[da]=n}else pl(),!(128&n.flags)&&(n.memoizedState=null),n.flags|=4;$i(n),o=!1}else null!==ll&&(ou(ll),ll=null),o=!0;if(!o)return 65536&n.flags?n:null}return 128&n.flags?(n.lanes=t,n):((r=null!==r)!=(null!==e&&null!==e.memoizedState)&&r&&(n.child.flags|=8192,1&n.mode&&(null===e||1&Jl.current?0===Ms&&(Ms=3):mu())),null!==n.updateQueue&&(n.flags|=4),$i(n),null);case 4:return Kl(),Pi(e,n),null===e&&jr(n.stateNode.containerInfo),$i(n),null;case 10:return Il(n.type._context),$i(n),null;case 19:if(Sa(Jl),null===(o=n.memoizedState))return $i(n),null;if(r=!!(128&n.flags),null===(s=o.rendering))if(r)Wi(o,!1);else{if(0!==Ms||null!==e&&128&e.flags)for(e=n.child;null!==e;){if(null!==(s=eo(e))){for(n.flags|=128,Wi(o,!1),null!==(r=s.updateQueue)&&(n.updateQueue=r,n.flags|=4),n.subtreeFlags=0,r=t,t=n.child;null!==t;)e=r,(o=t).flags&=14680066,null===(s=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=s.childLanes,o.lanes=s.lanes,o.child=s.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=s.memoizedProps,o.memoizedState=s.memoizedState,o.updateQueue=s.updateQueue,o.type=s.type,e=s.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),t=t.sibling;return ka(Jl,1&Jl.current|2),n.child}e=e.sibling}null!==o.tail&&Ze()>js&&(n.flags|=128,r=!0,Wi(o,!1),n.lanes=4194304)}else{if(!r)if(null!==(e=eo(s))){if(n.flags|=128,r=!0,null!==(t=e.updateQueue)&&(n.updateQueue=t,n.flags|=4),Wi(o,!0),null===o.tail&&"hidden"===o.tailMode&&!s.alternate&&!al)return $i(n),null}else 2*Ze()-o.renderingStartTime>js&&1073741824!==t&&(n.flags|=128,r=!0,Wi(o,!1),n.lanes=4194304);o.isBackwards?(s.sibling=n.child,n.child=s):(null!==(t=o.last)?t.sibling=s:n.child=s,o.last=s)}return null!==o.tail?(n=o.tail,o.rendering=n,o.tail=n.sibling,o.renderingStartTime=Ze(),n.sibling=null,t=Jl.current,ka(Jl,r?1&t|2:1&t),n):($i(n),null);case 22:case 23:return fu(),r=null!==n.memoizedState,null!==e&&null!==e.memoizedState!==r&&(n.flags|=8192),r&&1&n.mode?!!(1073741824&Ps)&&($i(n),6&n.subtreeFlags&&(n.flags|=8192)):$i(n),null;case 24:case 25:return null}throw Error(l(156,n.tag))}function Qi(e,n){switch(nl(n),n.tag){case 1:return Pa(n.type)&&La(),65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 3:return Kl(),Sa(Ba),Sa(Ta),to(),65536&(e=n.flags)&&!(128&e)?(n.flags=-65537&e|128,n):null;case 5:return ql(n),null;case 13:if(Sa(Jl),null!==(e=n.memoizedState)&&null!==e.dehydrated){if(null===n.alternate)throw Error(l(340));pl()}return 65536&(e=n.flags)?(n.flags=-65537&e|128,n):null;case 19:return Sa(Jl),null;case 4:return Kl(),null;case 10:return Il(n.type._context),null;case 22:case 23:return fu(),null;default:return null}}Ni=function(e,n){for(var t=n.child;null!==t;){if(5===t.tag||6===t.tag)e.appendChild(t.stateNode);else if(4!==t.tag&&null!==t.child){t.child.return=t,t=t.child;continue}if(t===n)break;for(;null===t.sibling;){if(null===t.return||t.return===n)return;t=t.return}t.sibling.return=t.return,t=t.sibling}},Pi=function(){},Li=function(e,n,t,r){var a=e.memoizedProps;if(a!==r){e=n.stateNode,Ql(Wl.current);var l,o=null;switch(t){case"input":a=X(e,a),r=X(e,r),o=[];break;case"select":a=H({},a,{value:void 0}),r=H({},r,{value:void 0}),o=[];break;case"textarea":a=re(e,a),r=re(e,r),o=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Jr)}for(c in ve(t,r),t=null,a)if(!r.hasOwnProperty(c)&&a.hasOwnProperty(c)&&null!=a[c])if("style"===c){var s=a[c];for(l in s)s.hasOwnProperty(l)&&(t||(t={}),t[l]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(i.hasOwnProperty(c)?o||(o=[]):(o=o||[]).push(c,null));for(c in r){var u=r[c];if(s=null!=a?a[c]:void 0,r.hasOwnProperty(c)&&u!==s&&(null!=u||null!=s))if("style"===c)if(s){for(l in s)!s.hasOwnProperty(l)||u&&u.hasOwnProperty(l)||(t||(t={}),t[l]="");for(l in u)u.hasOwnProperty(l)&&s[l]!==u[l]&&(t||(t={}),t[l]=u[l])}else t||(o||(o=[]),o.push(c,t)),t=u;else"dangerouslySetInnerHTML"===c?(u=u?u.__html:void 0,s=s?s.__html:void 0,null!=u&&s!==u&&(o=o||[]).push(c,u)):"children"===c?"string"!=typeof u&&"number"!=typeof u||(o=o||[]).push(c,""+u):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(i.hasOwnProperty(c)?(null!=u&&"onScroll"===c&&Dr("scroll",e),o||s===u||(o=[])):(o=o||[]).push(c,u))}t&&(o=o||[]).push("style",t);var c=o;(n.updateQueue=c)&&(n.flags|=4)}},Mi=function(e,n,t,r){t!==r&&(n.flags|=4)};var Xi=!1,Ki=!1,Zi="function"==typeof WeakSet?WeakSet:Set,qi=null;function Ji(e,n){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){wu(e,n,t)}else t.current=null}function es(e,n,t){try{t()}catch(t){wu(e,n,t)}}var ns=!1;function ts(e,n,t){var r=n.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var l=a.destroy;a.destroy=void 0,void 0!==l&&es(n,t,l)}a=a.next}while(a!==r)}}function rs(e,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var t=n=n.next;do{if((t.tag&e)===e){var r=t.create;t.destroy=r()}t=t.next}while(t!==n)}}function as(e){var n=e.ref;if(null!==n){var t=e.stateNode;e.tag,e=t,"function"==typeof n?n(e):n.current=e}}function ls(e){var n=e.alternate;null!==n&&(e.alternate=null,ls(n)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(n=e.stateNode)&&(delete n[da],delete n[pa],delete n[ma],delete n[ga],delete n[ya]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function os(e){return 5===e.tag||3===e.tag||4===e.tag}function is(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||os(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ss(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?8===t.nodeType?t.parentNode.insertBefore(e,n):t.insertBefore(e,n):(8===t.nodeType?(n=t.parentNode).insertBefore(e,t):(n=t).appendChild(e),null!=(t=t._reactRootContainer)||null!==n.onclick||(n.onclick=Jr));else if(4!==r&&null!==(e=e.child))for(ss(e,n,t),e=e.sibling;null!==e;)ss(e,n,t),e=e.sibling}function us(e,n,t){var r=e.tag;if(5===r||6===r)e=e.stateNode,n?t.insertBefore(e,n):t.appendChild(e);else if(4!==r&&null!==(e=e.child))for(us(e,n,t),e=e.sibling;null!==e;)us(e,n,t),e=e.sibling}var cs=null,fs=!1;function ds(e,n,t){for(t=t.child;null!==t;)ps(e,n,t),t=t.sibling}function ps(e,n,t){if(ln&&"function"==typeof ln.onCommitFiberUnmount)try{ln.onCommitFiberUnmount(an,t)}catch(e){}switch(t.tag){case 5:Ki||Ji(t,n);case 6:var r=cs,a=fs;cs=null,ds(e,n,t),fs=a,null!==(cs=r)&&(fs?(e=cs,t=t.stateNode,8===e.nodeType?e.parentNode.removeChild(t):e.removeChild(t)):cs.removeChild(t.stateNode));break;case 18:null!==cs&&(fs?(e=cs,t=t.stateNode,8===e.nodeType?sa(e.parentNode,t):1===e.nodeType&&sa(e,t),Gn(e)):sa(cs,t.stateNode));break;case 4:r=cs,a=fs,cs=t.stateNode.containerInfo,fs=!0,ds(e,n,t),cs=r,fs=a;break;case 0:case 11:case 14:case 15:if(!Ki&&null!==(r=t.updateQueue)&&null!==(r=r.lastEffect)){a=r=r.next;do{var l=a,o=l.destroy;l=l.tag,void 0!==o&&(2&l||4&l)&&es(t,n,o),a=a.next}while(a!==r)}ds(e,n,t);break;case 1:if(!Ki&&(Ji(t,n),"function"==typeof(r=t.stateNode).componentWillUnmount))try{r.props=t.memoizedProps,r.state=t.memoizedState,r.componentWillUnmount()}catch(e){wu(t,n,e)}ds(e,n,t);break;case 21:ds(e,n,t);break;case 22:1&t.mode?(Ki=(r=Ki)||null!==t.memoizedState,ds(e,n,t),Ki=r):ds(e,n,t);break;default:ds(e,n,t)}}function hs(e){var n=e.updateQueue;if(null!==n){e.updateQueue=null;var t=e.stateNode;null===t&&(t=e.stateNode=new Zi),n.forEach((function(n){var r=Tu.bind(null,e,n);t.has(n)||(t.add(n),n.then(r,r))}))}}function ms(e,n){var t=n.deletions;if(null!==t)for(var r=0;r<t.length;r++){var a=t[r];try{var o=e,i=n,s=i;e:for(;null!==s;){switch(s.tag){case 5:cs=s.stateNode,fs=!1;break e;case 3:case 4:cs=s.stateNode.containerInfo,fs=!0;break e}s=s.return}if(null===cs)throw Error(l(160));ps(o,i,a),cs=null,fs=!1;var u=a.alternate;null!==u&&(u.return=null),a.return=null}catch(e){wu(a,n,e)}}if(12854&n.subtreeFlags)for(n=n.child;null!==n;)gs(n,e),n=n.sibling}function gs(e,n){var t=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(ms(n,e),ys(e),4&r){try{ts(3,e,e.return),rs(3,e)}catch(n){wu(e,e.return,n)}try{ts(5,e,e.return)}catch(n){wu(e,e.return,n)}}break;case 1:ms(n,e),ys(e),512&r&&null!==t&&Ji(t,t.return);break;case 5:if(ms(n,e),ys(e),512&r&&null!==t&&Ji(t,t.return),32&e.flags){var a=e.stateNode;try{de(a,"")}catch(n){wu(e,e.return,n)}}if(4&r&&null!=(a=e.stateNode)){var o=e.memoizedProps,i=null!==t?t.memoizedProps:o,s=e.type,u=e.updateQueue;if(e.updateQueue=null,null!==u)try{"input"===s&&"radio"===o.type&&null!=o.name&&Z(a,o),be(s,i);var c=be(s,o);for(i=0;i<u.length;i+=2){var f=u[i],d=u[i+1];"style"===f?ge(a,d):"dangerouslySetInnerHTML"===f?fe(a,d):"children"===f?de(a,d):b(a,f,d,c)}switch(s){case"input":q(a,o);break;case"textarea":le(a,o);break;case"select":var p=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!o.multiple;var h=o.value;null!=h?te(a,!!o.multiple,h,!1):p!==!!o.multiple&&(null!=o.defaultValue?te(a,!!o.multiple,o.defaultValue,!0):te(a,!!o.multiple,o.multiple?[]:"",!1))}a[pa]=o}catch(n){wu(e,e.return,n)}}break;case 6:if(ms(n,e),ys(e),4&r){if(null===e.stateNode)throw Error(l(162));a=e.stateNode,o=e.memoizedProps;try{a.nodeValue=o}catch(n){wu(e,e.return,n)}}break;case 3:if(ms(n,e),ys(e),4&r&&null!==t&&t.memoizedState.isDehydrated)try{Gn(n.containerInfo)}catch(n){wu(e,e.return,n)}break;case 4:default:ms(n,e),ys(e);break;case 13:ms(n,e),ys(e),8192&(a=e.child).flags&&(o=null!==a.memoizedState,a.stateNode.isHidden=o,!o||null!==a.alternate&&null!==a.alternate.memoizedState||(Us=Ze())),4&r&&hs(e);break;case 22:if(f=null!==t&&null!==t.memoizedState,1&e.mode?(Ki=(c=Ki)||f,ms(n,e),Ki=c):ms(n,e),ys(e),8192&r){if(c=null!==e.memoizedState,(e.stateNode.isHidden=c)&&!f&&1&e.mode)for(qi=e,f=e.child;null!==f;){for(d=qi=f;null!==qi;){switch(h=(p=qi).child,p.tag){case 0:case 11:case 14:case 15:ts(4,p,p.return);break;case 1:Ji(p,p.return);var m=p.stateNode;if("function"==typeof m.componentWillUnmount){r=p,t=p.return;try{n=r,m.props=n.memoizedProps,m.state=n.memoizedState,m.componentWillUnmount()}catch(e){wu(r,t,e)}}break;case 5:Ji(p,p.return);break;case 22:if(null!==p.memoizedState){_s(d);continue}}null!==h?(h.return=p,qi=h):_s(d)}f=f.sibling}e:for(f=null,d=e;;){if(5===d.tag){if(null===f){f=d;try{a=d.stateNode,c?"function"==typeof(o=a.style).setProperty?o.setProperty("display","none","important"):o.display="none":(s=d.stateNode,i=null!=(u=d.memoizedProps.style)&&u.hasOwnProperty("display")?u.display:null,s.style.display=me("display",i))}catch(n){wu(e,e.return,n)}}}else if(6===d.tag){if(null===f)try{d.stateNode.nodeValue=c?"":d.memoizedProps}catch(n){wu(e,e.return,n)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;f===d&&(f=null),d=d.return}f===d&&(f=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:ms(n,e),ys(e),4&r&&hs(e);case 21:}}function ys(e){var n=e.flags;if(2&n){try{e:{for(var t=e.return;null!==t;){if(os(t)){var r=t;break e}t=t.return}throw Error(l(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(de(a,""),r.flags&=-33),us(e,is(e),a);break;case 3:case 4:var o=r.stateNode.containerInfo;ss(e,is(e),o);break;default:throw Error(l(161))}}catch(n){wu(e,e.return,n)}e.flags&=-3}4096&n&&(e.flags&=-4097)}function vs(e,n,t){qi=e,bs(e,n,t)}function bs(e,n,t){for(var r=!!(1&e.mode);null!==qi;){var a=qi,l=a.child;if(22===a.tag&&r){var o=null!==a.memoizedState||Xi;if(!o){var i=a.alternate,s=null!==i&&null!==i.memoizedState||Ki;i=Xi;var u=Ki;if(Xi=o,(Ki=s)&&!u)for(qi=a;null!==qi;)s=(o=qi).child,22===o.tag&&null!==o.memoizedState?Es(a):null!==s?(s.return=o,qi=s):Es(a);for(;null!==l;)qi=l,bs(l,n,t),l=l.sibling;qi=a,Xi=i,Ki=u}As(e)}else 8772&a.subtreeFlags&&null!==l?(l.return=a,qi=l):As(e)}}function As(e){for(;null!==qi;){var n=qi;if(8772&n.flags){var t=n.alternate;try{if(8772&n.flags)switch(n.tag){case 0:case 11:case 15:Ki||rs(5,n);break;case 1:var r=n.stateNode;if(4&n.flags&&!Ki)if(null===t)r.componentDidMount();else{var a=n.elementType===n.type?t.memoizedProps:ti(n.type,t.memoizedProps);r.componentDidUpdate(a,t.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var o=n.updateQueue;null!==o&&Gl(n,o,r);break;case 3:var i=n.updateQueue;if(null!==i){if(t=null,null!==n.child)switch(n.child.tag){case 5:case 1:t=n.child.stateNode}Gl(n,i,t)}break;case 5:var s=n.stateNode;if(null===t&&4&n.flags){t=s;var u=n.memoizedProps;switch(n.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&t.focus();break;case"img":u.src&&(t.src=u.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===n.memoizedState){var c=n.alternate;if(null!==c){var f=c.memoizedState;if(null!==f){var d=f.dehydrated;null!==d&&Gn(d)}}}break;default:throw Error(l(163))}Ki||512&n.flags&&as(n)}catch(e){wu(n,n.return,e)}}if(n===e){qi=null;break}if(null!==(t=n.sibling)){t.return=n.return,qi=t;break}qi=n.return}}function _s(e){for(;null!==qi;){var n=qi;if(n===e){qi=null;break}var t=n.sibling;if(null!==t){t.return=n.return,qi=t;break}qi=n.return}}function Es(e){for(;null!==qi;){var n=qi;try{switch(n.tag){case 0:case 11:case 15:var t=n.return;try{rs(4,n)}catch(e){wu(n,t,e)}break;case 1:var r=n.stateNode;if("function"==typeof r.componentDidMount){var a=n.return;try{r.componentDidMount()}catch(e){wu(n,a,e)}}var l=n.return;try{as(n)}catch(e){wu(n,l,e)}break;case 5:var o=n.return;try{as(n)}catch(e){wu(n,o,e)}}}catch(e){wu(n,n.return,e)}if(n===e){qi=null;break}var i=n.sibling;if(null!==i){i.return=n.return,qi=i;break}qi=n.return}}var Cs,ws=Math.ceil,Ss=A.ReactCurrentDispatcher,ks=A.ReactCurrentOwner,Is=A.ReactCurrentBatchConfig,Ts=0,Bs=null,xs=null,Ns=0,Ps=0,Ls=wa(0),Ms=0,Rs=null,Os=0,Hs=0,zs=0,Ds=null,Fs=null,Us=0,js=1/0,Gs=null,Vs=!1,Ws=null,$s=null,Ys=!1,Qs=null,Xs=0,Ks=0,Zs=null,qs=-1,Js=0;function eu(){return 6&Ts?Ze():-1!==qs?qs:qs=Ze()}function nu(e){return 1&e.mode?2&Ts&&0!==Ns?Ns&-Ns:null!==ml.transition?(0===Js&&(Js=gn()),Js):0!==(e=An)?e:e=void 0===(e=window.event)?16:Zn(e.type):1}function tu(e,n,t,r){if(50<Ks)throw Ks=0,Zs=null,Error(l(185));vn(e,t,r),2&Ts&&e===Bs||(e===Bs&&(!(2&Ts)&&(Hs|=t),4===Ms&&iu(e,Ns)),ru(e,r),1===t&&0===Ts&&!(1&n.mode)&&(js=Ze()+500,Da&&ja()))}function ru(e,n){var t=e.callbackNode;!function(e,n){for(var t=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,l=e.pendingLanes;0<l;){var o=31-on(l),i=1<<o,s=a[o];-1===s?i&t&&!(i&r)||(a[o]=hn(i,n)):s<=n&&(e.expiredLanes|=i),l&=~i}}(e,n);var r=pn(e,e===Bs?Ns:0);if(0===r)null!==t&&Qe(t),e.callbackNode=null,e.callbackPriority=0;else if(n=r&-r,e.callbackPriority!==n){if(null!=t&&Qe(t),1===n)0===e.tag?function(e){Da=!0,Ua(e)}(su.bind(null,e)):Ua(su.bind(null,e)),oa((function(){!(6&Ts)&&ja()})),t=null;else{switch(_n(r)){case 1:t=Je;break;case 4:t=en;break;case 16:default:t=nn;break;case 536870912:t=rn}t=Bu(t,au.bind(null,e))}e.callbackPriority=n,e.callbackNode=t}}function au(e,n){if(qs=-1,Js=0,6&Ts)throw Error(l(327));var t=e.callbackNode;if(Eu()&&e.callbackNode!==t)return null;var r=pn(e,e===Bs?Ns:0);if(0===r)return null;if(30&r||r&e.expiredLanes||n)n=gu(e,r);else{n=r;var a=Ts;Ts|=2;var o=hu();for(Bs===e&&Ns===n||(Gs=null,js=Ze()+500,du(e,n));;)try{vu();break}catch(n){pu(e,n)}kl(),Ss.current=o,Ts=a,null!==xs?n=0:(Bs=null,Ns=0,n=Ms)}if(0!==n){if(2===n&&0!==(a=mn(e))&&(r=a,n=lu(e,a)),1===n)throw t=Rs,du(e,0),iu(e,r),ru(e,Ze()),t;if(6===n)iu(e,r);else{if(a=e.current.alternate,!(30&r||function(e){for(var n=e;;){if(16384&n.flags){var t=n.updateQueue;if(null!==t&&null!==(t=t.stores))for(var r=0;r<t.length;r++){var a=t[r],l=a.getSnapshot;a=a.value;try{if(!ir(l(),a))return!1}catch(e){return!1}}}if(t=n.child,16384&n.subtreeFlags&&null!==t)t.return=n,n=t;else{if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return!0;n=n.return}n.sibling.return=n.return,n=n.sibling}}return!0}(a)||(n=gu(e,r),2===n&&(o=mn(e),0!==o&&(r=o,n=lu(e,o))),1!==n)))throw t=Rs,du(e,0),iu(e,r),ru(e,Ze()),t;switch(e.finishedWork=a,e.finishedLanes=r,n){case 0:case 1:throw Error(l(345));case 2:case 5:_u(e,Fs,Gs);break;case 3:if(iu(e,r),(130023424&r)===r&&10<(n=Us+500-Ze())){if(0!==pn(e,0))break;if(((a=e.suspendedLanes)&r)!==r){eu(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=ra(_u.bind(null,e,Fs,Gs),n);break}_u(e,Fs,Gs);break;case 4:if(iu(e,r),(4194240&r)===r)break;for(n=e.eventTimes,a=-1;0<r;){var i=31-on(r);o=1<<i,(i=n[i])>a&&(a=i),r&=~o}if(r=a,10<(r=(120>(r=Ze()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*ws(r/1960))-r)){e.timeoutHandle=ra(_u.bind(null,e,Fs,Gs),r);break}_u(e,Fs,Gs);break;default:throw Error(l(329))}}}return ru(e,Ze()),e.callbackNode===t?au.bind(null,e):null}function lu(e,n){var t=Ds;return e.current.memoizedState.isDehydrated&&(du(e,n).flags|=256),2!==(e=gu(e,n))&&(n=Fs,Fs=t,null!==n&&ou(n)),e}function ou(e){null===Fs?Fs=e:Fs.push.apply(Fs,e)}function iu(e,n){for(n&=~zs,n&=~Hs,e.suspendedLanes|=n,e.pingedLanes&=~n,e=e.expirationTimes;0<n;){var t=31-on(n),r=1<<t;e[t]=-1,n&=~r}}function su(e){if(6&Ts)throw Error(l(327));Eu();var n=pn(e,0);if(!(1&n))return ru(e,Ze()),null;var t=gu(e,n);if(0!==e.tag&&2===t){var r=mn(e);0!==r&&(n=r,t=lu(e,r))}if(1===t)throw t=Rs,du(e,0),iu(e,n),ru(e,Ze()),t;if(6===t)throw Error(l(345));return e.finishedWork=e.current.alternate,e.finishedLanes=n,_u(e,Fs,Gs),ru(e,Ze()),null}function uu(e,n){var t=Ts;Ts|=1;try{return e(n)}finally{0===(Ts=t)&&(js=Ze()+500,Da&&ja())}}function cu(e){null!==Qs&&0===Qs.tag&&!(6&Ts)&&Eu();var n=Ts;Ts|=1;var t=Is.transition,r=An;try{if(Is.transition=null,An=1,e)return e()}finally{An=r,Is.transition=t,!(6&(Ts=n))&&ja()}}function fu(){Ps=Ls.current,Sa(Ls)}function du(e,n){e.finishedWork=null,e.finishedLanes=0;var t=e.timeoutHandle;if(-1!==t&&(e.timeoutHandle=-1,aa(t)),null!==xs)for(t=xs.return;null!==t;){var r=t;switch(nl(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&La();break;case 3:Kl(),Sa(Ba),Sa(Ta),to();break;case 5:ql(r);break;case 4:Kl();break;case 13:case 19:Sa(Jl);break;case 10:Il(r.type._context);break;case 22:case 23:fu()}t=t.return}if(Bs=e,xs=e=Lu(e.current,null),Ns=Ps=n,Ms=0,Rs=null,zs=Hs=Os=0,Fs=Ds=null,null!==Nl){for(n=0;n<Nl.length;n++)if(null!==(r=(t=Nl[n]).interleaved)){t.interleaved=null;var a=r.next,l=t.pending;if(null!==l){var o=l.next;l.next=a,r.next=o}t.pending=r}Nl=null}return e}function pu(e,n){for(;;){var t=xs;try{if(kl(),ro.current=qo,uo){for(var r=oo.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}uo=!1}if(lo=0,so=io=oo=null,co=!1,fo=0,ks.current=null,null===t||null===t.return){Ms=1,Rs=n,xs=null;break}e:{var o=e,i=t.return,s=t,u=n;if(n=Ns,s.flags|=32768,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u,f=s,d=f.tag;if(!(1&f.mode||0!==d&&11!==d&&15!==d)){var p=f.alternate;p?(f.updateQueue=p.updateQueue,f.memoizedState=p.memoizedState,f.lanes=p.lanes):(f.updateQueue=null,f.memoizedState=null)}var h=gi(i);if(null!==h){h.flags&=-257,yi(h,i,s,0,n),1&h.mode&&mi(o,c,n),u=c;var m=(n=h).updateQueue;if(null===m){var g=new Set;g.add(u),n.updateQueue=g}else m.add(u);break e}if(!(1&n)){mi(o,c,n),mu();break e}u=Error(l(426))}else if(al&&1&s.mode){var y=gi(i);if(null!==y){!(65536&y.flags)&&(y.flags|=256),yi(y,i,s,0,n),hl(ui(u,s));break e}}o=u=ui(u,s),4!==Ms&&(Ms=2),null===Ds?Ds=[o]:Ds.push(o),o=i;do{switch(o.tag){case 3:o.flags|=65536,n&=-n,o.lanes|=n,Ul(o,pi(0,u,n));break e;case 1:s=u;var v=o.type,b=o.stateNode;if(!(128&o.flags||"function"!=typeof v.getDerivedStateFromError&&(null===b||"function"!=typeof b.componentDidCatch||null!==$s&&$s.has(b)))){o.flags|=65536,n&=-n,o.lanes|=n,Ul(o,hi(o,s,n));break e}}o=o.return}while(null!==o)}Au(t)}catch(e){n=e,xs===t&&null!==t&&(xs=t=t.return);continue}break}}function hu(){var e=Ss.current;return Ss.current=qo,null===e?qo:e}function mu(){0!==Ms&&3!==Ms&&2!==Ms||(Ms=4),null===Bs||!(268435455&Os)&&!(268435455&Hs)||iu(Bs,Ns)}function gu(e,n){var t=Ts;Ts|=2;var r=hu();for(Bs===e&&Ns===n||(Gs=null,du(e,n));;)try{yu();break}catch(n){pu(e,n)}if(kl(),Ts=t,Ss.current=r,null!==xs)throw Error(l(261));return Bs=null,Ns=0,Ms}function yu(){for(;null!==xs;)bu(xs)}function vu(){for(;null!==xs&&!Xe();)bu(xs)}function bu(e){var n=Cs(e.alternate,e,Ps);e.memoizedProps=e.pendingProps,null===n?Au(e):xs=n,ks.current=null}function Au(e){var n=e;do{var t=n.alternate;if(e=n.return,32768&n.flags){if(null!==(t=Qi(t,n)))return t.flags&=32767,void(xs=t);if(null===e)return Ms=6,void(xs=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}else if(null!==(t=Yi(t,n,Ps)))return void(xs=t);if(null!==(n=n.sibling))return void(xs=n);xs=n=e}while(null!==n);0===Ms&&(Ms=5)}function _u(e,n,t){var r=An,a=Is.transition;try{Is.transition=null,An=1,function(e,n,t,r){do{Eu()}while(null!==Qs);if(6&Ts)throw Error(l(327));t=e.finishedWork;var a=e.finishedLanes;if(null===t)return null;if(e.finishedWork=null,e.finishedLanes=0,t===e.current)throw Error(l(177));e.callbackNode=null,e.callbackPriority=0;var o=t.lanes|t.childLanes;if(function(e,n){var t=e.pendingLanes&~n;e.pendingLanes=n,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=n,e.mutableReadLanes&=n,e.entangledLanes&=n,n=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<t;){var a=31-on(t),l=1<<a;n[a]=0,r[a]=-1,e[a]=-1,t&=~l}}(e,o),e===Bs&&(xs=Bs=null,Ns=0),!(2064&t.subtreeFlags)&&!(2064&t.flags)||Ys||(Ys=!0,Bu(nn,(function(){return Eu(),null}))),o=!!(15990&t.flags),15990&t.subtreeFlags||o){o=Is.transition,Is.transition=null;var i=An;An=1;var s=Ts;Ts|=4,ks.current=null,function(e,n){if(ea=Wn,pr(e=dr())){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(r&&0!==r.rangeCount){t=r.anchorNode;var a=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{t.nodeType,o.nodeType}catch(e){t=null;break e}var i=0,s=-1,u=-1,c=0,f=0,d=e,p=null;n:for(;;){for(var h;d!==t||0!==a&&3!==d.nodeType||(s=i+a),d!==o||0!==r&&3!==d.nodeType||(u=i+r),3===d.nodeType&&(i+=d.nodeValue.length),null!==(h=d.firstChild);)p=d,d=h;for(;;){if(d===e)break n;if(p===t&&++c===a&&(s=i),p===o&&++f===r&&(u=i),null!==(h=d.nextSibling))break;p=(d=p).parentNode}d=h}t=-1===s||-1===u?null:{start:s,end:u}}else t=null}t=t||{start:0,end:0}}else t=null;for(na={focusedElem:e,selectionRange:t},Wn=!1,qi=n;null!==qi;)if(e=(n=qi).child,1028&n.subtreeFlags&&null!==e)e.return=n,qi=e;else for(;null!==qi;){n=qi;try{var m=n.alternate;if(1024&n.flags)switch(n.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,v=n.stateNode,b=v.getSnapshotBeforeUpdate(n.elementType===n.type?g:ti(n.type,g),y);v.__reactInternalSnapshotBeforeUpdate=b}break;case 3:var A=n.stateNode.containerInfo;1===A.nodeType?A.textContent="":9===A.nodeType&&A.documentElement&&A.removeChild(A.documentElement);break;default:throw Error(l(163))}}catch(e){wu(n,n.return,e)}if(null!==(e=n.sibling)){e.return=n.return,qi=e;break}qi=n.return}m=ns,ns=!1}(e,t),gs(t,e),hr(na),Wn=!!ea,na=ea=null,e.current=t,vs(t,e,a),Ke(),Ts=s,An=i,Is.transition=o}else e.current=t;if(Ys&&(Ys=!1,Qs=e,Xs=a),0===(o=e.pendingLanes)&&($s=null),function(e){if(ln&&"function"==typeof ln.onCommitFiberRoot)try{ln.onCommitFiberRoot(an,e,void 0,!(128&~e.current.flags))}catch(e){}}(t.stateNode),ru(e,Ze()),null!==n)for(r=e.onRecoverableError,t=0;t<n.length;t++)r((a=n[t]).value,{componentStack:a.stack,digest:a.digest});if(Vs)throw Vs=!1,e=Ws,Ws=null,e;!!(1&Xs)&&0!==e.tag&&Eu(),1&(o=e.pendingLanes)?e===Zs?Ks++:(Ks=0,Zs=e):Ks=0,ja()}(e,n,t,r)}finally{Is.transition=a,An=r}return null}function Eu(){if(null!==Qs){var e=_n(Xs),n=Is.transition,t=An;try{if(Is.transition=null,An=16>e?16:e,null===Qs)var r=!1;else{if(e=Qs,Qs=null,Xs=0,6&Ts)throw Error(l(331));var a=Ts;for(Ts|=4,qi=e.current;null!==qi;){var o=qi,i=o.child;if(16&qi.flags){var s=o.deletions;if(null!==s){for(var u=0;u<s.length;u++){var c=s[u];for(qi=c;null!==qi;){var f=qi;switch(f.tag){case 0:case 11:case 15:ts(8,f,o)}var d=f.child;if(null!==d)d.return=f,qi=d;else for(;null!==qi;){var p=(f=qi).sibling,h=f.return;if(ls(f),f===c){qi=null;break}if(null!==p){p.return=h,qi=p;break}qi=h}}}var m=o.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}qi=o}}if(2064&o.subtreeFlags&&null!==i)i.return=o,qi=i;else e:for(;null!==qi;){if(2048&(o=qi).flags)switch(o.tag){case 0:case 11:case 15:ts(9,o,o.return)}var v=o.sibling;if(null!==v){v.return=o.return,qi=v;break e}qi=o.return}}var b=e.current;for(qi=b;null!==qi;){var A=(i=qi).child;if(2064&i.subtreeFlags&&null!==A)A.return=i,qi=A;else e:for(i=b;null!==qi;){if(2048&(s=qi).flags)try{switch(s.tag){case 0:case 11:case 15:rs(9,s)}}catch(e){wu(s,s.return,e)}if(s===i){qi=null;break e}var _=s.sibling;if(null!==_){_.return=s.return,qi=_;break e}qi=s.return}}if(Ts=a,ja(),ln&&"function"==typeof ln.onPostCommitFiberRoot)try{ln.onPostCommitFiberRoot(an,e)}catch(e){}r=!0}return r}finally{An=t,Is.transition=n}}return!1}function Cu(e,n,t){e=Dl(e,n=pi(0,n=ui(t,n),1),1),n=eu(),null!==e&&(vn(e,1,n),ru(e,n))}function wu(e,n,t){if(3===e.tag)Cu(e,e,t);else for(;null!==n;){if(3===n.tag){Cu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===$s||!$s.has(r))){n=Dl(n,e=hi(n,e=ui(t,e),1),1),e=eu(),null!==n&&(vn(n,1,e),ru(n,e));break}}n=n.return}}function Su(e,n,t){var r=e.pingCache;null!==r&&r.delete(n),n=eu(),e.pingedLanes|=e.suspendedLanes&t,Bs===e&&(Ns&t)===t&&(4===Ms||3===Ms&&(130023424&Ns)===Ns&&500>Ze()-Us?du(e,0):zs|=t),ru(e,n)}function ku(e,n){0===n&&(1&e.mode?(n=fn,!(130023424&(fn<<=1))&&(fn=4194304)):n=1);var t=eu();null!==(e=Ml(e,n))&&(vn(e,n,t),ru(e,t))}function Iu(e){var n=e.memoizedState,t=0;null!==n&&(t=n.retryLane),ku(e,t)}function Tu(e,n){var t=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(t=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(l(314))}null!==r&&r.delete(n),ku(e,t)}function Bu(e,n){return Ye(e,n)}function xu(e,n,t,r){this.tag=e,this.key=t,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=n,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Nu(e,n,t,r){return new xu(e,n,t,r)}function Pu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Lu(e,n){var t=e.alternate;return null===t?((t=Nu(e.tag,n,e.key,e.mode)).elementType=e.elementType,t.type=e.type,t.stateNode=e.stateNode,t.alternate=e,e.alternate=t):(t.pendingProps=n,t.type=e.type,t.flags=0,t.subtreeFlags=0,t.deletions=null),t.flags=14680064&e.flags,t.childLanes=e.childLanes,t.lanes=e.lanes,t.child=e.child,t.memoizedProps=e.memoizedProps,t.memoizedState=e.memoizedState,t.updateQueue=e.updateQueue,n=e.dependencies,t.dependencies=null===n?null:{lanes:n.lanes,firstContext:n.firstContext},t.sibling=e.sibling,t.index=e.index,t.ref=e.ref,t}function Mu(e,n,t,r,a,o){var i=2;if(r=e,"function"==typeof e)Pu(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case C:return Ru(t.children,a,o,n);case w:i=8,a|=8;break;case S:return(e=Nu(12,t,n,2|a)).elementType=S,e.lanes=o,e;case B:return(e=Nu(13,t,n,a)).elementType=B,e.lanes=o,e;case x:return(e=Nu(19,t,n,a)).elementType=x,e.lanes=o,e;case L:return Ou(t,a,o,n);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case k:i=10;break e;case I:i=9;break e;case T:i=11;break e;case N:i=14;break e;case P:i=16,r=null;break e}throw Error(l(130,null==e?e:typeof e,""))}return(n=Nu(i,t,n,a)).elementType=e,n.type=r,n.lanes=o,n}function Ru(e,n,t,r){return(e=Nu(7,e,r,n)).lanes=t,e}function Ou(e,n,t,r){return(e=Nu(22,e,r,n)).elementType=L,e.lanes=t,e.stateNode={isHidden:!1},e}function Hu(e,n,t){return(e=Nu(6,e,null,n)).lanes=t,e}function zu(e,n,t){return(n=Nu(4,null!==e.children?e.children:[],e.key,n)).lanes=t,n.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},n}function Du(e,n,t,r,a){this.tag=n,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=yn(0),this.expirationTimes=yn(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=yn(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Fu(e,n,t,r,a,l,o,i,s){return e=new Du(e,n,t,i,s),1===n?(n=1,!0===l&&(n|=8)):n=0,l=Nu(3,null,null,n),e.current=l,l.stateNode=e,l.memoizedState={element:r,isDehydrated:t,cache:null,transitions:null,pendingSuspenseBoundaries:null},Ol(l),e}function Uu(e){if(!e)return Ia;e:{if(je(e=e._reactInternals)!==e||1!==e.tag)throw Error(l(170));var n=e;do{switch(n.tag){case 3:n=n.stateNode.context;break e;case 1:if(Pa(n.type)){n=n.stateNode.__reactInternalMemoizedMergedChildContext;break e}}n=n.return}while(null!==n);throw Error(l(171))}if(1===e.tag){var t=e.type;if(Pa(t))return Ra(e,t,n)}return n}function ju(e,n,t,r,a,l,o,i,s){return(e=Fu(t,r,!0,e,0,l,0,i,s)).context=Uu(null),t=e.current,(l=zl(r=eu(),a=nu(t))).callback=null!=n?n:null,Dl(t,l,a),e.current.lanes=a,vn(e,a,r),ru(e,r),e}function Gu(e,n,t,r){var a=n.current,l=eu(),o=nu(a);return t=Uu(t),null===n.context?n.context=t:n.pendingContext=t,(n=zl(l,o)).payload={element:e},null!==(r=void 0===r?null:r)&&(n.callback=r),null!==(e=Dl(a,n,o))&&(tu(e,a,o,l),Fl(e,a,o)),o}function Vu(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Wu(e,n){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var t=e.retryLane;e.retryLane=0!==t&&t<n?t:n}}function $u(e,n){Wu(e,n),(e=e.alternate)&&Wu(e,n)}Cs=function(e,n,t){if(null!==e)if(e.memoizedProps!==n.pendingProps||Ba.current)bi=!0;else{if(!(e.lanes&t||128&n.flags))return bi=!1,function(e,n,t){switch(n.tag){case 3:Bi(n),pl();break;case 5:Zl(n);break;case 1:Pa(n.type)&&Oa(n);break;case 4:Xl(n,n.stateNode.containerInfo);break;case 10:var r=n.type._context,a=n.memoizedProps.value;ka(El,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=n.memoizedState))return null!==r.dehydrated?(ka(Jl,1&Jl.current),n.flags|=128,null):t&n.child.childLanes?Hi(e,n,t):(ka(Jl,1&Jl.current),null!==(e=Vi(e,n,t))?e.sibling:null);ka(Jl,1&Jl.current);break;case 19:if(r=!!(t&n.childLanes),128&e.flags){if(r)return ji(e,n,t);n.flags|=128}if(null!==(a=n.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),ka(Jl,Jl.current),r)break;return null;case 22:case 23:return n.lanes=0,wi(e,n,t)}return Vi(e,n,t)}(e,n,t);bi=!!(131072&e.flags)}else bi=!1,al&&1048576&n.flags&&Ja(n,$a,n.index);switch(n.lanes=0,n.tag){case 2:var r=n.type;Gi(e,n),e=n.pendingProps;var a=Na(n,Ta.current);Bl(n,t),a=go(null,n,r,e,a,t);var o=yo();return n.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(n.tag=1,n.memoizedState=null,n.updateQueue=null,Pa(r)?(o=!0,Oa(n)):o=!1,n.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Ol(n),a.updater=ai,n.stateNode=a,a._reactInternals=n,si(n,r,e,t),n=Ti(null,n,r,!0,o,t)):(n.tag=0,al&&o&&el(n),Ai(null,n,a,t),n=n.child),n;case 16:r=n.elementType;e:{switch(Gi(e,n),e=n.pendingProps,r=(a=r._init)(r._payload),n.type=r,a=n.tag=function(e){if("function"==typeof e)return Pu(e)?1:0;if(null!=e){if((e=e.$$typeof)===T)return 11;if(e===N)return 14}return 2}(r),e=ti(r,e),a){case 0:n=ki(null,n,r,e,t);break e;case 1:n=Ii(null,n,r,e,t);break e;case 11:n=_i(null,n,r,e,t);break e;case 14:n=Ei(null,n,r,ti(r.type,e),t);break e}throw Error(l(306,r,""))}return n;case 0:return r=n.type,a=n.pendingProps,ki(e,n,r,a=n.elementType===r?a:ti(r,a),t);case 1:return r=n.type,a=n.pendingProps,Ii(e,n,r,a=n.elementType===r?a:ti(r,a),t);case 3:e:{if(Bi(n),null===e)throw Error(l(387));r=n.pendingProps,a=(o=n.memoizedState).element,Hl(e,n),jl(n,r,null,t);var i=n.memoizedState;if(r=i.element,o.isDehydrated){if(o={element:r,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},n.updateQueue.baseState=o,n.memoizedState=o,256&n.flags){n=xi(e,n,r,t,a=ui(Error(l(423)),n));break e}if(r!==a){n=xi(e,n,r,t,a=ui(Error(l(424)),n));break e}for(rl=ua(n.stateNode.containerInfo.firstChild),tl=n,al=!0,ll=null,t=_l(n,null,r,t),n.child=t;t;)t.flags=-3&t.flags|4096,t=t.sibling}else{if(pl(),r===a){n=Vi(e,n,t);break e}Ai(e,n,r,t)}n=n.child}return n;case 5:return Zl(n),null===e&&ul(n),r=n.type,a=n.pendingProps,o=null!==e?e.memoizedProps:null,i=a.children,ta(r,a)?i=null:null!==o&&ta(r,o)&&(n.flags|=32),Si(e,n),Ai(e,n,i,t),n.child;case 6:return null===e&&ul(n),null;case 13:return Hi(e,n,t);case 4:return Xl(n,n.stateNode.containerInfo),r=n.pendingProps,null===e?n.child=Al(n,null,r,t):Ai(e,n,r,t),n.child;case 11:return r=n.type,a=n.pendingProps,_i(e,n,r,a=n.elementType===r?a:ti(r,a),t);case 7:return Ai(e,n,n.pendingProps,t),n.child;case 8:case 12:return Ai(e,n,n.pendingProps.children,t),n.child;case 10:e:{if(r=n.type._context,a=n.pendingProps,o=n.memoizedProps,i=a.value,ka(El,r._currentValue),r._currentValue=i,null!==o)if(ir(o.value,i)){if(o.children===a.children&&!Ba.current){n=Vi(e,n,t);break e}}else for(null!==(o=n.child)&&(o.return=n);null!==o;){var s=o.dependencies;if(null!==s){i=o.child;for(var u=s.firstContext;null!==u;){if(u.context===r){if(1===o.tag){(u=zl(-1,t&-t)).tag=2;var c=o.updateQueue;if(null!==c){var f=(c=c.shared).pending;null===f?u.next=u:(u.next=f.next,f.next=u),c.pending=u}}o.lanes|=t,null!==(u=o.alternate)&&(u.lanes|=t),Tl(o.return,t,n),s.lanes|=t;break}u=u.next}}else if(10===o.tag)i=o.type===n.type?null:o.child;else if(18===o.tag){if(null===(i=o.return))throw Error(l(341));i.lanes|=t,null!==(s=i.alternate)&&(s.lanes|=t),Tl(i,t,n),i=o.sibling}else i=o.child;if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===n){i=null;break}if(null!==(o=i.sibling)){o.return=i.return,i=o;break}i=i.return}o=i}Ai(e,n,a.children,t),n=n.child}return n;case 9:return a=n.type,r=n.pendingProps.children,Bl(n,t),r=r(a=xl(a)),n.flags|=1,Ai(e,n,r,t),n.child;case 14:return a=ti(r=n.type,n.pendingProps),Ei(e,n,r,a=ti(r.type,a),t);case 15:return Ci(e,n,n.type,n.pendingProps,t);case 17:return r=n.type,a=n.pendingProps,a=n.elementType===r?a:ti(r,a),Gi(e,n),n.tag=1,Pa(r)?(e=!0,Oa(n)):e=!1,Bl(n,t),oi(n,r,a),si(n,r,a,t),Ti(null,n,r,!0,e,t);case 19:return ji(e,n,t);case 22:return wi(e,n,t)}throw Error(l(156,n.tag))};var Yu="function"==typeof reportError?reportError:function(e){console.error(e)};function Qu(e){this._internalRoot=e}function Xu(e){this._internalRoot=e}function Ku(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Zu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function qu(){}function Ju(e,n,t,r,a){var l=t._reactRootContainer;if(l){var o=l;if("function"==typeof a){var i=a;a=function(){var e=Vu(o);i.call(e)}}Gu(n,o,e,a)}else o=function(e,n,t,r,a){if(a){if("function"==typeof r){var l=r;r=function(){var e=Vu(o);l.call(e)}}var o=ju(n,r,e,0,null,!1,0,"",qu);return e._reactRootContainer=o,e[ha]=o.current,jr(8===e.nodeType?e.parentNode:e),cu(),o}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof r){var i=r;r=function(){var e=Vu(s);i.call(e)}}var s=Fu(e,0,!1,null,0,!1,0,"",qu);return e._reactRootContainer=s,e[ha]=s.current,jr(8===e.nodeType?e.parentNode:e),cu((function(){Gu(n,s,t,r)})),s}(t,n,e,a,r);return Vu(o)}Xu.prototype.render=Qu.prototype.render=function(e){var n=this._internalRoot;if(null===n)throw Error(l(409));Gu(e,n,null,null)},Xu.prototype.unmount=Qu.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var n=e.containerInfo;cu((function(){Gu(null,e,null,null)})),n[ha]=null}},Xu.prototype.unstable_scheduleHydration=function(e){if(e){var n=Sn();e={blockedOn:null,target:e,priority:n};for(var t=0;t<Mn.length&&0!==n&&n<Mn[t].priority;t++);Mn.splice(t,0,e),0===t&&zn(e)}},En=function(e){switch(e.tag){case 3:var n=e.stateNode;if(n.current.memoizedState.isDehydrated){var t=dn(n.pendingLanes);0!==t&&(bn(n,1|t),ru(n,Ze()),!(6&Ts)&&(js=Ze()+500,ja()))}break;case 13:cu((function(){var n=Ml(e,1);if(null!==n){var t=eu();tu(n,e,1,t)}})),$u(e,1)}},Cn=function(e){if(13===e.tag){var n=Ml(e,134217728);null!==n&&tu(n,e,134217728,eu()),$u(e,134217728)}},wn=function(e){if(13===e.tag){var n=nu(e),t=Ml(e,n);null!==t&&tu(t,e,n,eu()),$u(e,n)}},Sn=function(){return An},kn=function(e,n){var t=An;try{return An=e,n()}finally{An=t}},Ee=function(e,n,t){switch(n){case"input":if(q(e,t),n=t.name,"radio"===t.type&&null!=n){for(t=e;t.parentNode;)t=t.parentNode;for(t=t.querySelectorAll("input[name="+JSON.stringify(""+n)+'][type="radio"]'),n=0;n<t.length;n++){var r=t[n];if(r!==e&&r.form===e.form){var a=_a(r);if(!a)throw Error(l(90));Y(r),q(r,a)}}}break;case"textarea":le(e,t);break;case"select":null!=(n=t.value)&&te(e,!!t.multiple,n,!1)}},Te=uu,Be=cu;var ec={usingClientEntryPoint:!1,Events:[ba,Aa,_a,ke,Ie,uu]},nc={findFiberByHostInstance:va,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},tc={bundleType:nc.bundleType,version:nc.version,rendererPackageName:nc.rendererPackageName,rendererConfig:nc.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:A.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=We(e))?null:e.stateNode},findFiberByHostInstance:nc.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var rc=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!rc.isDisabled&&rc.supportsFiber)try{an=rc.inject(tc),ln=rc}catch(ce){}}n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ec,n.createPortal=function(e,n){var t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Ku(n))throw Error(l(200));return function(e,n,t){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:E,key:null==r?null:""+r,children:e,containerInfo:n,implementation:t}}(e,n,null,t)},n.createRoot=function(e,n){if(!Ku(e))throw Error(l(299));var t=!1,r="",a=Yu;return null!=n&&(!0===n.unstable_strictMode&&(t=!0),void 0!==n.identifierPrefix&&(r=n.identifierPrefix),void 0!==n.onRecoverableError&&(a=n.onRecoverableError)),n=Fu(e,1,!1,null,0,t,0,r,a),e[ha]=n.current,jr(8===e.nodeType?e.parentNode:e),new Qu(n)},n.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var n=e._reactInternals;if(void 0===n){if("function"==typeof e.render)throw Error(l(188));throw e=Object.keys(e).join(","),Error(l(268,e))}return null===(e=We(n))?null:e.stateNode},n.flushSync=function(e){return cu(e)},n.hydrate=function(e,n,t){if(!Zu(n))throw Error(l(200));return Ju(null,e,n,!0,t)},n.hydrateRoot=function(e,n,t){if(!Ku(e))throw Error(l(405));var r=null!=t&&t.hydratedSources||null,a=!1,o="",i=Yu;if(null!=t&&(!0===t.unstable_strictMode&&(a=!0),void 0!==t.identifierPrefix&&(o=t.identifierPrefix),void 0!==t.onRecoverableError&&(i=t.onRecoverableError)),n=ju(n,null,e,1,null!=t?t:null,a,0,o,i),e[ha]=n.current,jr(e),r)for(e=0;e<r.length;e++)a=(a=(t=r[e])._getVersion)(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a);return new Xu(n)},n.render=function(e,n,t){if(!Zu(n))throw Error(l(200));return Ju(null,e,n,!1,t)},n.unmountComponentAtNode=function(e){if(!Zu(e))throw Error(l(40));return!!e._reactRootContainer&&(cu((function(){Ju(null,null,e,!1,(function(){e._reactRootContainer=null,e[ha]=null}))})),!0)},n.unstable_batchedUpdates=uu,n.unstable_renderSubtreeIntoContainer=function(e,n,t,r){if(!Zu(t))throw Error(l(200));if(null==e||void 0===e._reactInternals)throw Error(l(38));return Ju(e,n,t,!1,r)},n.version="18.3.1-next-f1338f8080-20240426"},338:(e,n,t)=>{"use strict";var r=t(961);n.H=r.createRoot,r.hydrateRoot},961:(e,n,t)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=t(551)},799:(e,n)=>{"use strict";var t="function"==typeof Symbol&&Symbol.for,r=t?Symbol.for("react.element"):60103,a=t?Symbol.for("react.portal"):60106,l=t?Symbol.for("react.fragment"):60107,o=t?Symbol.for("react.strict_mode"):60108,i=t?Symbol.for("react.profiler"):60114,s=t?Symbol.for("react.provider"):60109,u=t?Symbol.for("react.context"):60110,c=t?Symbol.for("react.async_mode"):60111,f=t?Symbol.for("react.concurrent_mode"):60111,d=t?Symbol.for("react.forward_ref"):60112,p=t?Symbol.for("react.suspense"):60113,h=t?Symbol.for("react.suspense_list"):60120,m=t?Symbol.for("react.memo"):60115,g=t?Symbol.for("react.lazy"):60116,y=t?Symbol.for("react.block"):60121,v=t?Symbol.for("react.fundamental"):60117,b=t?Symbol.for("react.responder"):60118,A=t?Symbol.for("react.scope"):60119;function _(e){if("object"==typeof e&&null!==e){var n=e.$$typeof;switch(n){case r:switch(e=e.type){case c:case f:case l:case i:case o:case p:return e;default:switch(e=e&&e.$$typeof){case u:case d:case g:case m:case s:return e;default:return n}}case a:return n}}}function E(e){return _(e)===f}n.AsyncMode=c,n.ConcurrentMode=f,n.ContextConsumer=u,n.ContextProvider=s,n.Element=r,n.ForwardRef=d,n.Fragment=l,n.Lazy=g,n.Memo=m,n.Portal=a,n.Profiler=i,n.StrictMode=o,n.Suspense=p,n.isAsyncMode=function(e){return E(e)||_(e)===c},n.isConcurrentMode=E,n.isContextConsumer=function(e){return _(e)===u},n.isContextProvider=function(e){return _(e)===s},n.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},n.isForwardRef=function(e){return _(e)===d},n.isFragment=function(e){return _(e)===l},n.isLazy=function(e){return _(e)===g},n.isMemo=function(e){return _(e)===m},n.isPortal=function(e){return _(e)===a},n.isProfiler=function(e){return _(e)===i},n.isStrictMode=function(e){return _(e)===o},n.isSuspense=function(e){return _(e)===p},n.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===l||e===f||e===i||e===o||e===p||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===g||e.$$typeof===m||e.$$typeof===s||e.$$typeof===u||e.$$typeof===d||e.$$typeof===v||e.$$typeof===b||e.$$typeof===A||e.$$typeof===y)},n.typeOf=_},363:(e,n,t)=>{"use strict";e.exports=t(799)},287:(e,n)=>{"use strict";var t=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),l=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),s=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),f=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator,h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,n,t){this.props=e,this.context=n,this.refs=g,this.updater=t||h}function v(){}function b(e,n,t){this.props=e,this.context=n,this.refs=g,this.updater=t||h}y.prototype.isReactComponent={},y.prototype.setState=function(e,n){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,n,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=y.prototype;var A=b.prototype=new v;A.constructor=b,m(A,y.prototype),A.isPureReactComponent=!0;var _=Array.isArray,E=Object.prototype.hasOwnProperty,C={current:null},w={key:!0,ref:!0,__self:!0,__source:!0};function S(e,n,r){var a,l={},o=null,i=null;if(null!=n)for(a in void 0!==n.ref&&(i=n.ref),void 0!==n.key&&(o=""+n.key),n)E.call(n,a)&&!w.hasOwnProperty(a)&&(l[a]=n[a]);var s=arguments.length-2;if(1===s)l.children=r;else if(1<s){for(var u=Array(s),c=0;c<s;c++)u[c]=arguments[c+2];l.children=u}if(e&&e.defaultProps)for(a in s=e.defaultProps)void 0===l[a]&&(l[a]=s[a]);return{$$typeof:t,type:e,key:o,ref:i,props:l,_owner:C.current}}function k(e){return"object"==typeof e&&null!==e&&e.$$typeof===t}var I=/\/+/g;function T(e,n){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var n={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return n[e]}))}(""+e.key):n.toString(36)}function B(e,n,a,l,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var s=!1;if(null===e)s=!0;else switch(i){case"string":case"number":s=!0;break;case"object":switch(e.$$typeof){case t:case r:s=!0}}if(s)return o=o(s=e),e=""===l?"."+T(s,0):l,_(o)?(a="",null!=e&&(a=e.replace(I,"$&/")+"/"),B(o,n,a,"",(function(e){return e}))):null!=o&&(k(o)&&(o=function(e,n){return{$$typeof:t,type:e.type,key:n,ref:e.ref,props:e.props,_owner:e._owner}}(o,a+(!o.key||s&&s.key===o.key?"":(""+o.key).replace(I,"$&/")+"/")+e)),n.push(o)),1;if(s=0,l=""===l?".":l+":",_(e))for(var u=0;u<e.length;u++){var c=l+T(i=e[u],u);s+=B(i,n,a,c,o)}else if(c=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof c)for(e=c.call(e),u=0;!(i=e.next()).done;)s+=B(i=i.value,n,a,c=l+T(i,u++),o);else if("object"===i)throw n=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n)+"). If you meant to render a collection of children, use an array instead.");return s}function x(e,n,t){if(null==e)return e;var r=[],a=0;return B(e,r,"","",(function(e){return n.call(t,e,a++)})),r}function N(e){if(-1===e._status){var n=e._result;(n=n()).then((function(n){0!==e._status&&-1!==e._status||(e._status=1,e._result=n)}),(function(n){0!==e._status&&-1!==e._status||(e._status=2,e._result=n)})),-1===e._status&&(e._status=0,e._result=n)}if(1===e._status)return e._result.default;throw e._result}var P={current:null},L={transition:null},M={ReactCurrentDispatcher:P,ReactCurrentBatchConfig:L,ReactCurrentOwner:C};function R(){throw Error("act(...) is not supported in production builds of React.")}n.Children={map:x,forEach:function(e,n,t){x(e,(function(){n.apply(this,arguments)}),t)},count:function(e){var n=0;return x(e,(function(){n++})),n},toArray:function(e){return x(e,(function(e){return e}))||[]},only:function(e){if(!k(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},n.Component=y,n.Fragment=a,n.Profiler=o,n.PureComponent=b,n.StrictMode=l,n.Suspense=c,n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=M,n.act=R,n.cloneElement=function(e,n,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=m({},e.props),l=e.key,o=e.ref,i=e._owner;if(null!=n){if(void 0!==n.ref&&(o=n.ref,i=C.current),void 0!==n.key&&(l=""+n.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(u in n)E.call(n,u)&&!w.hasOwnProperty(u)&&(a[u]=void 0===n[u]&&void 0!==s?s[u]:n[u])}var u=arguments.length-2;if(1===u)a.children=r;else if(1<u){s=Array(u);for(var c=0;c<u;c++)s[c]=arguments[c+2];a.children=s}return{$$typeof:t,type:e.type,key:l,ref:o,props:a,_owner:i}},n.createContext=function(e){return(e={$$typeof:s,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},n.createElement=S,n.createFactory=function(e){var n=S.bind(null,e);return n.type=e,n},n.createRef=function(){return{current:null}},n.forwardRef=function(e){return{$$typeof:u,render:e}},n.isValidElement=k,n.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:N}},n.memo=function(e,n){return{$$typeof:f,type:e,compare:void 0===n?null:n}},n.startTransition=function(e){var n=L.transition;L.transition={};try{e()}finally{L.transition=n}},n.unstable_act=R,n.useCallback=function(e,n){return P.current.useCallback(e,n)},n.useContext=function(e){return P.current.useContext(e)},n.useDebugValue=function(){},n.useDeferredValue=function(e){return P.current.useDeferredValue(e)},n.useEffect=function(e,n){return P.current.useEffect(e,n)},n.useId=function(){return P.current.useId()},n.useImperativeHandle=function(e,n,t){return P.current.useImperativeHandle(e,n,t)},n.useInsertionEffect=function(e,n){return P.current.useInsertionEffect(e,n)},n.useLayoutEffect=function(e,n){return P.current.useLayoutEffect(e,n)},n.useMemo=function(e,n){return P.current.useMemo(e,n)},n.useReducer=function(e,n,t){return P.current.useReducer(e,n,t)},n.useRef=function(e){return P.current.useRef(e)},n.useState=function(e){return P.current.useState(e)},n.useSyncExternalStore=function(e,n,t){return P.current.useSyncExternalStore(e,n,t)},n.useTransition=function(){return P.current.useTransition()},n.version="18.3.1"},540:(e,n,t)=>{"use strict";e.exports=t(287)},463:(e,n)=>{"use strict";function t(e,n){var t=e.length;e.push(n);e:for(;0<t;){var r=t-1>>>1,a=e[r];if(!(0<l(a,n)))break e;e[r]=n,e[t]=a,t=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var n=e[0],t=e.pop();if(t!==n){e[0]=t;e:for(var r=0,a=e.length,o=a>>>1;r<o;){var i=2*(r+1)-1,s=e[i],u=i+1,c=e[u];if(0>l(s,t))u<a&&0>l(c,s)?(e[r]=c,e[u]=t,r=u):(e[r]=s,e[i]=t,r=i);else{if(!(u<a&&0>l(c,t)))break e;e[r]=c,e[u]=t,r=u}}}return n}function l(e,n){var t=e.sortIndex-n.sortIndex;return 0!==t?t:e.id-n.id}if("object"==typeof performance&&"function"==typeof performance.now){var o=performance;n.unstable_now=function(){return o.now()}}else{var i=Date,s=i.now();n.unstable_now=function(){return i.now()-s}}var u=[],c=[],f=1,d=null,p=3,h=!1,m=!1,g=!1,y="function"==typeof setTimeout?setTimeout:null,v="function"==typeof clearTimeout?clearTimeout:null,b="undefined"!=typeof setImmediate?setImmediate:null;function A(e){for(var n=r(c);null!==n;){if(null===n.callback)a(c);else{if(!(n.startTime<=e))break;a(c),n.sortIndex=n.expirationTime,t(u,n)}n=r(c)}}function _(e){if(g=!1,A(e),!m)if(null!==r(u))m=!0,L(E);else{var n=r(c);null!==n&&M(_,n.startTime-e)}}function E(e,t){m=!1,g&&(g=!1,v(k),k=-1),h=!0;var l=p;try{for(A(t),d=r(u);null!==d&&(!(d.expirationTime>t)||e&&!B());){var o=d.callback;if("function"==typeof o){d.callback=null,p=d.priorityLevel;var i=o(d.expirationTime<=t);t=n.unstable_now(),"function"==typeof i?d.callback=i:d===r(u)&&a(u),A(t)}else a(u);d=r(u)}if(null!==d)var s=!0;else{var f=r(c);null!==f&&M(_,f.startTime-t),s=!1}return s}finally{d=null,p=l,h=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var C,w=!1,S=null,k=-1,I=5,T=-1;function B(){return!(n.unstable_now()-T<I)}function x(){if(null!==S){var e=n.unstable_now();T=e;var t=!0;try{t=S(!0,e)}finally{t?C():(w=!1,S=null)}}else w=!1}if("function"==typeof b)C=function(){b(x)};else if("undefined"!=typeof MessageChannel){var N=new MessageChannel,P=N.port2;N.port1.onmessage=x,C=function(){P.postMessage(null)}}else C=function(){y(x,0)};function L(e){S=e,w||(w=!0,C())}function M(e,t){k=y((function(){e(n.unstable_now())}),t)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(e){e.callback=null},n.unstable_continueExecution=function(){m||h||(m=!0,L(E))},n.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):I=0<e?Math.floor(1e3/e):5},n.unstable_getCurrentPriorityLevel=function(){return p},n.unstable_getFirstCallbackNode=function(){return r(u)},n.unstable_next=function(e){switch(p){case 1:case 2:case 3:var n=3;break;default:n=p}var t=p;p=n;try{return e()}finally{p=t}},n.unstable_pauseExecution=function(){},n.unstable_requestPaint=function(){},n.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var t=p;p=e;try{return n()}finally{p=t}},n.unstable_scheduleCallback=function(e,a,l){var o=n.unstable_now();switch(l="object"==typeof l&&null!==l&&"number"==typeof(l=l.delay)&&0<l?o+l:o,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:f++,callback:a,priorityLevel:e,startTime:l,expirationTime:i=l+i,sortIndex:-1},l>o?(e.sortIndex=l,t(c,e),null===r(u)&&e===r(c)&&(g?(v(k),k=-1):g=!0,M(_,l-o))):(e.sortIndex=i,t(u,e),m||h||(m=!0,L(E))),e},n.unstable_shouldYield=B,n.unstable_wrapCallback=function(e){var n=p;return function(){var t=p;p=n;try{return e.apply(this,arguments)}finally{p=t}}}},982:(e,n,t)=>{"use strict";e.exports=t(463)},72:e=>{"use strict";var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var l={},o=[],i=0;i<e.length;i++){var s=e[i],u=r.base?s[0]+r.base:s[0],c=l[u]||0,f="".concat(u," ").concat(c);l[u]=c+1;var d=t(f),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)n[d].references++,n[d].updater(p);else{var h=a(p,r);r.byIndex=i,n.splice(i,0,{identifier:f,updater:h,references:1})}o.push(f)}return o}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var l=r(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<l.length;o++){var i=t(l[o]);n[i].references--}for(var s=r(e,a),u=0;u<l.length;u++){var c=t(l[u]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}l=s}}},659:e=>{"use strict";var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},159:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},56:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},825:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var l=t.sourceMap;l&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(l))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},113:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},942:(e,n)=>{var t;!function(){"use strict";var r={}.hasOwnProperty;function a(){for(var e="",n=0;n<arguments.length;n++){var t=arguments[n];t&&(e=o(e,l(t)))}return e}function l(e){if("string"==typeof e||"number"==typeof e)return e;if("object"!=typeof e)return"";if(Array.isArray(e))return a.apply(null,e);if(e.toString!==Object.prototype.toString&&!e.toString.toString().includes("[native code]"))return e.toString();var n="";for(var t in e)r.call(e,t)&&e[t]&&(n=o(n,t));return n}function o(e,n){return n?e?e+" "+n:e+n:e}e.exports?(a.default=a,e.exports=a):void 0===(t=function(){return a}.apply(n,[]))||(e.exports=t)}()}},l={};function o(e){var n=l[e];if(void 0!==n)return n.exports;var t=l[e]={id:e,exports:{}};return a[e](t,t.exports,o),t.exports}o.m=a,o.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return o.d(n,{a:n}),n},n=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,o.t=function(t,r){if(1&r&&(t=this(t)),8&r)return t;if("object"==typeof t&&t){if(4&r&&t.__esModule)return t;if(16&r&&"function"==typeof t.then)return t}var a=Object.create(null);o.r(a);var l={};e=e||[null,n({}),n([]),n(n)];for(var i=2&r&&t;"object"==typeof i&&!~e.indexOf(i);i=n(i))Object.getOwnPropertyNames(i).forEach((e=>l[e]=()=>t[e]));return l.default=()=>t,o.d(a,l),a},o.d=(e,n)=>{for(var t in n)o.o(n,t)&&!o.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},o.f={},o.e=e=>Promise.all(Object.keys(o.f).reduce(((n,t)=>(o.f[t](e,n),n)),[])),o.u=e=>e+".js",o.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),o.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t={},r="periodic-table:",o.l=(e,n,a,l)=>{if(t[e])t[e].push(n);else{var i,s;if(void 0!==a)for(var u=document.getElementsByTagName("script"),c=0;c<u.length;c++){var f=u[c];if(f.getAttribute("src")==e||f.getAttribute("data-webpack")==r+a){i=f;break}}i||(s=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,o.nc&&i.setAttribute("nonce",o.nc),i.setAttribute("data-webpack",r+a),i.src=e),t[e]=[n];var d=(n,r)=>{i.onerror=i.onload=null,clearTimeout(p);var a=t[e];if(delete t[e],i.parentNode&&i.parentNode.removeChild(i),a&&a.forEach((e=>e(r))),n)return n(r)},p=setTimeout(d.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=d.bind(null,i.onerror),i.onload=d.bind(null,i.onload),s&&document.head.appendChild(i)}},o.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;o.g.importScripts&&(e=o.g.location+"");var n=o.g.document;if(!e&&n&&(n.currentScript&&"SCRIPT"===n.currentScript.tagName.toUpperCase()&&(e=n.currentScript.src),!e)){var t=n.getElementsByTagName("script");if(t.length)for(var r=t.length-1;r>-1&&(!e||!/^http(s?):/.test(e));)e=t[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),o.p=e})(),(()=>{var e={23:0};o.f.j=(n,t)=>{var r=o.o(e,n)?e[n]:void 0;if(0!==r)if(r)t.push(r[2]);else{var a=new Promise(((t,a)=>r=e[n]=[t,a]));t.push(r[2]=a);var l=o.p+o.u(n),i=new Error;o.l(l,(t=>{if(o.o(e,n)&&(0!==(r=e[n])&&(e[n]=void 0),r)){var a=t&&("load"===t.type?"missing":t.type),l=t&&t.target&&t.target.src;i.message="Loading chunk "+n+" failed.\n("+a+": "+l+")",i.name="ChunkLoadError",i.type=a,i.request=l,r[1](i)}}),"chunk-"+n,n)}};var n=(n,t)=>{var r,a,[l,i,s]=t,u=0;if(l.some((n=>0!==e[n]))){for(r in i)o.o(i,r)&&(o.m[r]=i[r]);s&&s(o)}for(n&&n(t);u<l.length;u++)a=l[u],o.o(e,a)&&e[a]&&e[a][0](),e[a]=0},t=self.webpackChunkperiodic_table=self.webpackChunkperiodic_table||[];t.forEach(n.bind(null,0)),t.push=n.bind(null,t.push.bind(t))})(),o.nc=void 0,(()=>{"use strict";var e=o(540),n=o(338),t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])},t(e,n)};function r(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Class extends value "+String(n)+" is not a constructor or null");function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}var a=function(){return a=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e},a.apply(this,arguments)};function l(e,n){var t={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&n.indexOf(r)<0&&(t[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)n.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(t[r[a]]=e[r[a]])}return t}function i(e,n,t){if(t||2===arguments.length)for(var r,a=0,l=n.length;a<l;a++)!r&&a in n||(r||(r=Array.prototype.slice.call(n,0,a)),r[a]=n[a]);return e.concat(r||Array.prototype.slice.call(n))}function s(e,n){var t=n&&n.cache?n.cache:v,r=n&&n.serializer?n.serializer:p;return(n&&n.strategy?n.strategy:d)(e,{cache:t,serializer:r})}function u(e,n,t,r){var a,l=null==(a=r)||"number"==typeof a||"boolean"==typeof a?r:t(r),o=n.get(l);return void 0===o&&(o=e.call(this,r),n.set(l,o)),o}function c(e,n,t){var r=Array.prototype.slice.call(arguments,3),a=t(r),l=n.get(a);return void 0===l&&(l=e.apply(this,r),n.set(a,l)),l}function f(e,n,t,r,a){return t.bind(n,e,r,a)}function d(e,n){return f(e,this,1===e.length?u:c,n.cache.create(),n.serializer)}Object.create,Object.create,"function"==typeof SuppressedError&&SuppressedError;var p=function(){return JSON.stringify(arguments)};function h(){this.cache=Object.create(null)}h.prototype.get=function(e){return this.cache[e]},h.prototype.set=function(e,n){this.cache[e]=n};var m,g,y,v={create:function(){return new h}},b={variadic:function(e,n){return f(e,this,c,n.cache.create(),n.serializer)},monadic:function(e,n){return f(e,this,u,n.cache.create(),n.serializer)}};function A(e,n,t){if(void 0===t&&(t=Error),!e)throw new t(n)}function _(e){return e.type===g.literal}function E(e){return e.type===g.argument}function C(e){return e.type===g.number}function w(e){return e.type===g.date}function S(e){return e.type===g.time}function k(e){return e.type===g.select}function I(e){return e.type===g.plural}function T(e){return e.type===g.pound}function B(e){return e.type===g.tag}function x(e){return!(!e||"object"!=typeof e||e.type!==y.number)}function N(e){return!(!e||"object"!=typeof e||e.type!==y.dateTime)}s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.NumberFormat).bind.apply(e,i([void 0],n,!1)))}),{strategy:b.variadic}),s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.DateTimeFormat).bind.apply(e,i([void 0],n,!1)))}),{strategy:b.variadic}),s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.PluralRules).bind.apply(e,i([void 0],n,!1)))}),{strategy:b.variadic}),s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.Locale).bind.apply(e,i([void 0],n,!1)))}),{strategy:b.variadic}),s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.ListFormat).bind.apply(e,i([void 0],n,!1)))}),{strategy:b.variadic}),function(e){e[e.EXPECT_ARGUMENT_CLOSING_BRACE=1]="EXPECT_ARGUMENT_CLOSING_BRACE",e[e.EMPTY_ARGUMENT=2]="EMPTY_ARGUMENT",e[e.MALFORMED_ARGUMENT=3]="MALFORMED_ARGUMENT",e[e.EXPECT_ARGUMENT_TYPE=4]="EXPECT_ARGUMENT_TYPE",e[e.INVALID_ARGUMENT_TYPE=5]="INVALID_ARGUMENT_TYPE",e[e.EXPECT_ARGUMENT_STYLE=6]="EXPECT_ARGUMENT_STYLE",e[e.INVALID_NUMBER_SKELETON=7]="INVALID_NUMBER_SKELETON",e[e.INVALID_DATE_TIME_SKELETON=8]="INVALID_DATE_TIME_SKELETON",e[e.EXPECT_NUMBER_SKELETON=9]="EXPECT_NUMBER_SKELETON",e[e.EXPECT_DATE_TIME_SKELETON=10]="EXPECT_DATE_TIME_SKELETON",e[e.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE=11]="UNCLOSED_QUOTE_IN_ARGUMENT_STYLE",e[e.EXPECT_SELECT_ARGUMENT_OPTIONS=12]="EXPECT_SELECT_ARGUMENT_OPTIONS",e[e.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE=13]="EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE",e[e.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE=14]="INVALID_PLURAL_ARGUMENT_OFFSET_VALUE",e[e.EXPECT_SELECT_ARGUMENT_SELECTOR=15]="EXPECT_SELECT_ARGUMENT_SELECTOR",e[e.EXPECT_PLURAL_ARGUMENT_SELECTOR=16]="EXPECT_PLURAL_ARGUMENT_SELECTOR",e[e.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT=17]="EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT",e[e.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT=18]="EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT",e[e.INVALID_PLURAL_ARGUMENT_SELECTOR=19]="INVALID_PLURAL_ARGUMENT_SELECTOR",e[e.DUPLICATE_PLURAL_ARGUMENT_SELECTOR=20]="DUPLICATE_PLURAL_ARGUMENT_SELECTOR",e[e.DUPLICATE_SELECT_ARGUMENT_SELECTOR=21]="DUPLICATE_SELECT_ARGUMENT_SELECTOR",e[e.MISSING_OTHER_CLAUSE=22]="MISSING_OTHER_CLAUSE",e[e.INVALID_TAG=23]="INVALID_TAG",e[e.INVALID_TAG_NAME=25]="INVALID_TAG_NAME",e[e.UNMATCHED_CLOSING_TAG=26]="UNMATCHED_CLOSING_TAG",e[e.UNCLOSED_TAG=27]="UNCLOSED_TAG"}(m||(m={})),function(e){e[e.literal=0]="literal",e[e.argument=1]="argument",e[e.number=2]="number",e[e.date=3]="date",e[e.time=4]="time",e[e.select=5]="select",e[e.plural=6]="plural",e[e.pound=7]="pound",e[e.tag=8]="tag"}(g||(g={})),function(e){e[e.number=0]="number",e[e.dateTime=1]="dateTime"}(y||(y={}));var P=/[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/,L=/(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;function M(e){var n={};return e.replace(L,(function(e){var t=e.length;switch(e[0]){case"G":n.era=4===t?"long":5===t?"narrow":"short";break;case"y":n.year=2===t?"2-digit":"numeric";break;case"Y":case"u":case"U":case"r":throw new RangeError("`Y/u/U/r` (year) patterns are not supported, use `y` instead");case"q":case"Q":throw new RangeError("`q/Q` (quarter) patterns are not supported");case"M":case"L":n.month=["numeric","2-digit","short","long","narrow"][t-1];break;case"w":case"W":throw new RangeError("`w/W` (week) patterns are not supported");case"d":n.day=["numeric","2-digit"][t-1];break;case"D":case"F":case"g":throw new RangeError("`D/F/g` (day) patterns are not supported, use `d` instead");case"E":n.weekday=4===t?"long":5===t?"narrow":"short";break;case"e":if(t<4)throw new RangeError("`e..eee` (weekday) patterns are not supported");n.weekday=["short","long","narrow","short"][t-4];break;case"c":if(t<4)throw new RangeError("`c..ccc` (weekday) patterns are not supported");n.weekday=["short","long","narrow","short"][t-4];break;case"a":n.hour12=!0;break;case"b":case"B":throw new RangeError("`b/B` (period) patterns are not supported, use `a` instead");case"h":n.hourCycle="h12",n.hour=["numeric","2-digit"][t-1];break;case"H":n.hourCycle="h23",n.hour=["numeric","2-digit"][t-1];break;case"K":n.hourCycle="h11",n.hour=["numeric","2-digit"][t-1];break;case"k":n.hourCycle="h24",n.hour=["numeric","2-digit"][t-1];break;case"j":case"J":case"C":throw new RangeError("`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead");case"m":n.minute=["numeric","2-digit"][t-1];break;case"s":n.second=["numeric","2-digit"][t-1];break;case"S":case"A":throw new RangeError("`S/A` (second) patterns are not supported, use `s` instead");case"z":n.timeZoneName=t<4?"short":"long";break;case"Z":case"O":case"v":case"V":case"X":case"x":throw new RangeError("`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead")}return""})),n}var R=/[\t-\r \x85\u200E\u200F\u2028\u2029]/i,O=/^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g,H=/^(@+)?(\+|#+)?[rs]?$/g,z=/(\*)(0+)|(#+)(0+)|(0+)/g,D=/^(0+)$/;function F(e){var n={};return"r"===e[e.length-1]?n.roundingPriority="morePrecision":"s"===e[e.length-1]&&(n.roundingPriority="lessPrecision"),e.replace(H,(function(e,t,r){return"string"!=typeof r?(n.minimumSignificantDigits=t.length,n.maximumSignificantDigits=t.length):"+"===r?n.minimumSignificantDigits=t.length:"#"===t[0]?n.maximumSignificantDigits=t.length:(n.minimumSignificantDigits=t.length,n.maximumSignificantDigits=t.length+("string"==typeof r?r.length:0)),""})),n}function U(e){switch(e){case"sign-auto":return{signDisplay:"auto"};case"sign-accounting":case"()":return{currencySign:"accounting"};case"sign-always":case"+!":return{signDisplay:"always"};case"sign-accounting-always":case"()!":return{signDisplay:"always",currencySign:"accounting"};case"sign-except-zero":case"+?":return{signDisplay:"exceptZero"};case"sign-accounting-except-zero":case"()?":return{signDisplay:"exceptZero",currencySign:"accounting"};case"sign-never":case"+_":return{signDisplay:"never"}}}function j(e){var n;if("E"===e[0]&&"E"===e[1]?(n={notation:"engineering"},e=e.slice(2)):"E"===e[0]&&(n={notation:"scientific"},e=e.slice(1)),n){var t=e.slice(0,2);if("+!"===t?(n.signDisplay="always",e=e.slice(2)):"+?"===t&&(n.signDisplay="exceptZero",e=e.slice(2)),!D.test(e))throw new Error("Malformed concise eng/scientific notation");n.minimumIntegerDigits=e.length}return n}function G(e){return U(e)||{}}function V(e){for(var n={},t=0,r=e;t<r.length;t++){var l=r[t];switch(l.stem){case"percent":case"%":n.style="percent";continue;case"%x100":n.style="percent",n.scale=100;continue;case"currency":n.style="currency",n.currency=l.options[0];continue;case"group-off":case",_":n.useGrouping=!1;continue;case"precision-integer":case".":n.maximumFractionDigits=0;continue;case"measure-unit":case"unit":n.style="unit",n.unit=l.options[0].replace(/^(.*?)-/,"");continue;case"compact-short":case"K":n.notation="compact",n.compactDisplay="short";continue;case"compact-long":case"KK":n.notation="compact",n.compactDisplay="long";continue;case"scientific":n=a(a(a({},n),{notation:"scientific"}),l.options.reduce((function(e,n){return a(a({},e),G(n))}),{}));continue;case"engineering":n=a(a(a({},n),{notation:"engineering"}),l.options.reduce((function(e,n){return a(a({},e),G(n))}),{}));continue;case"notation-simple":n.notation="standard";continue;case"unit-width-narrow":n.currencyDisplay="narrowSymbol",n.unitDisplay="narrow";continue;case"unit-width-short":n.currencyDisplay="code",n.unitDisplay="short";continue;case"unit-width-full-name":n.currencyDisplay="name",n.unitDisplay="long";continue;case"unit-width-iso-code":n.currencyDisplay="symbol";continue;case"scale":n.scale=parseFloat(l.options[0]);continue;case"rounding-mode-floor":n.roundingMode="floor";continue;case"rounding-mode-ceiling":n.roundingMode="ceil";continue;case"rounding-mode-down":n.roundingMode="trunc";continue;case"rounding-mode-up":n.roundingMode="expand";continue;case"rounding-mode-half-even":n.roundingMode="halfEven";continue;case"rounding-mode-half-down":n.roundingMode="halfTrunc";continue;case"rounding-mode-half-up":n.roundingMode="halfExpand";continue;case"integer-width":if(l.options.length>1)throw new RangeError("integer-width stems only accept a single optional option");l.options[0].replace(z,(function(e,t,r,a,l,o){if(t)n.minimumIntegerDigits=r.length;else{if(a&&l)throw new Error("We currently do not support maximum integer digits");if(o)throw new Error("We currently do not support exact integer digits")}return""}));continue}if(D.test(l.stem))n.minimumIntegerDigits=l.stem.length;else if(O.test(l.stem)){if(l.options.length>1)throw new RangeError("Fraction-precision stems only accept a single optional option");l.stem.replace(O,(function(e,t,r,a,l,o){return"*"===r?n.minimumFractionDigits=t.length:a&&"#"===a[0]?n.maximumFractionDigits=a.length:l&&o?(n.minimumFractionDigits=l.length,n.maximumFractionDigits=l.length+o.length):(n.minimumFractionDigits=t.length,n.maximumFractionDigits=t.length),""}));var o=l.options[0];"w"===o?n=a(a({},n),{trailingZeroDisplay:"stripIfInteger"}):o&&(n=a(a({},n),F(o)))}else if(H.test(l.stem))n=a(a({},n),F(l.stem));else{var i=U(l.stem);i&&(n=a(a({},n),i));var s=j(l.stem);s&&(n=a(a({},n),s))}}return n}var W,$={"001":["H","h"],419:["h","H","hB","hb"],AC:["H","h","hb","hB"],AD:["H","hB"],AE:["h","hB","hb","H"],AF:["H","hb","hB","h"],AG:["h","hb","H","hB"],AI:["H","h","hb","hB"],AL:["h","H","hB"],AM:["H","hB"],AO:["H","hB"],AR:["h","H","hB","hb"],AS:["h","H"],AT:["H","hB"],AU:["h","hb","H","hB"],AW:["H","hB"],AX:["H"],AZ:["H","hB","h"],BA:["H","hB","h"],BB:["h","hb","H","hB"],BD:["h","hB","H"],BE:["H","hB"],BF:["H","hB"],BG:["H","hB","h"],BH:["h","hB","hb","H"],BI:["H","h"],BJ:["H","hB"],BL:["H","hB"],BM:["h","hb","H","hB"],BN:["hb","hB","h","H"],BO:["h","H","hB","hb"],BQ:["H"],BR:["H","hB"],BS:["h","hb","H","hB"],BT:["h","H"],BW:["H","h","hb","hB"],BY:["H","h"],BZ:["H","h","hb","hB"],CA:["h","hb","H","hB"],CC:["H","h","hb","hB"],CD:["hB","H"],CF:["H","h","hB"],CG:["H","hB"],CH:["H","hB","h"],CI:["H","hB"],CK:["H","h","hb","hB"],CL:["h","H","hB","hb"],CM:["H","h","hB"],CN:["H","hB","hb","h"],CO:["h","H","hB","hb"],CP:["H"],CR:["h","H","hB","hb"],CU:["h","H","hB","hb"],CV:["H","hB"],CW:["H","hB"],CX:["H","h","hb","hB"],CY:["h","H","hb","hB"],CZ:["H"],DE:["H","hB"],DG:["H","h","hb","hB"],DJ:["h","H"],DK:["H"],DM:["h","hb","H","hB"],DO:["h","H","hB","hb"],DZ:["h","hB","hb","H"],EA:["H","h","hB","hb"],EC:["h","H","hB","hb"],EE:["H","hB"],EG:["h","hB","hb","H"],EH:["h","hB","hb","H"],ER:["h","H"],ES:["H","hB","h","hb"],ET:["hB","hb","h","H"],FI:["H"],FJ:["h","hb","H","hB"],FK:["H","h","hb","hB"],FM:["h","hb","H","hB"],FO:["H","h"],FR:["H","hB"],GA:["H","hB"],GB:["H","h","hb","hB"],GD:["h","hb","H","hB"],GE:["H","hB","h"],GF:["H","hB"],GG:["H","h","hb","hB"],GH:["h","H"],GI:["H","h","hb","hB"],GL:["H","h"],GM:["h","hb","H","hB"],GN:["H","hB"],GP:["H","hB"],GQ:["H","hB","h","hb"],GR:["h","H","hb","hB"],GT:["h","H","hB","hb"],GU:["h","hb","H","hB"],GW:["H","hB"],GY:["h","hb","H","hB"],HK:["h","hB","hb","H"],HN:["h","H","hB","hb"],HR:["H","hB"],HU:["H","h"],IC:["H","h","hB","hb"],ID:["H"],IE:["H","h","hb","hB"],IL:["H","hB"],IM:["H","h","hb","hB"],IN:["h","H"],IO:["H","h","hb","hB"],IQ:["h","hB","hb","H"],IR:["hB","H"],IS:["H"],IT:["H","hB"],JE:["H","h","hb","hB"],JM:["h","hb","H","hB"],JO:["h","hB","hb","H"],JP:["H","K","h"],KE:["hB","hb","H","h"],KG:["H","h","hB","hb"],KH:["hB","h","H","hb"],KI:["h","hb","H","hB"],KM:["H","h","hB","hb"],KN:["h","hb","H","hB"],KP:["h","H","hB","hb"],KR:["h","H","hB","hb"],KW:["h","hB","hb","H"],KY:["h","hb","H","hB"],KZ:["H","hB"],LA:["H","hb","hB","h"],LB:["h","hB","hb","H"],LC:["h","hb","H","hB"],LI:["H","hB","h"],LK:["H","h","hB","hb"],LR:["h","hb","H","hB"],LS:["h","H"],LT:["H","h","hb","hB"],LU:["H","h","hB"],LV:["H","hB","hb","h"],LY:["h","hB","hb","H"],MA:["H","h","hB","hb"],MC:["H","hB"],MD:["H","hB"],ME:["H","hB","h"],MF:["H","hB"],MG:["H","h"],MH:["h","hb","H","hB"],MK:["H","h","hb","hB"],ML:["H"],MM:["hB","hb","H","h"],MN:["H","h","hb","hB"],MO:["h","hB","hb","H"],MP:["h","hb","H","hB"],MQ:["H","hB"],MR:["h","hB","hb","H"],MS:["H","h","hb","hB"],MT:["H","h"],MU:["H","h"],MV:["H","h"],MW:["h","hb","H","hB"],MX:["h","H","hB","hb"],MY:["hb","hB","h","H"],MZ:["H","hB"],NA:["h","H","hB","hb"],NC:["H","hB"],NE:["H"],NF:["H","h","hb","hB"],NG:["H","h","hb","hB"],NI:["h","H","hB","hb"],NL:["H","hB"],NO:["H","h"],NP:["H","h","hB"],NR:["H","h","hb","hB"],NU:["H","h","hb","hB"],NZ:["h","hb","H","hB"],OM:["h","hB","hb","H"],PA:["h","H","hB","hb"],PE:["h","H","hB","hb"],PF:["H","h","hB"],PG:["h","H"],PH:["h","hB","hb","H"],PK:["h","hB","H"],PL:["H","h"],PM:["H","hB"],PN:["H","h","hb","hB"],PR:["h","H","hB","hb"],PS:["h","hB","hb","H"],PT:["H","hB"],PW:["h","H"],PY:["h","H","hB","hb"],QA:["h","hB","hb","H"],RE:["H","hB"],RO:["H","hB"],RS:["H","hB","h"],RU:["H"],RW:["H","h"],SA:["h","hB","hb","H"],SB:["h","hb","H","hB"],SC:["H","h","hB"],SD:["h","hB","hb","H"],SE:["H"],SG:["h","hb","H","hB"],SH:["H","h","hb","hB"],SI:["H","hB"],SJ:["H"],SK:["H"],SL:["h","hb","H","hB"],SM:["H","h","hB"],SN:["H","h","hB"],SO:["h","H"],SR:["H","hB"],SS:["h","hb","H","hB"],ST:["H","hB"],SV:["h","H","hB","hb"],SX:["H","h","hb","hB"],SY:["h","hB","hb","H"],SZ:["h","hb","H","hB"],TA:["H","h","hb","hB"],TC:["h","hb","H","hB"],TD:["h","H","hB"],TF:["H","h","hB"],TG:["H","hB"],TH:["H","h"],TJ:["H","h"],TL:["H","hB","hb","h"],TM:["H","h"],TN:["h","hB","hb","H"],TO:["h","H"],TR:["H","hB"],TT:["h","hb","H","hB"],TW:["hB","hb","h","H"],TZ:["hB","hb","H","h"],UA:["H","hB","h"],UG:["hB","hb","H","h"],UM:["h","hb","H","hB"],US:["h","hb","H","hB"],UY:["h","H","hB","hb"],UZ:["H","hB","h"],VA:["H","h","hB"],VC:["h","hb","H","hB"],VE:["h","H","hB","hb"],VG:["h","hb","H","hB"],VI:["h","hb","H","hB"],VN:["H","h"],VU:["h","H"],WF:["H","hB"],WS:["h","H"],XK:["H","hB","h"],YE:["h","hB","hb","H"],YT:["H","hB"],ZA:["H","h","hb","hB"],ZM:["h","hb","H","hB"],ZW:["H","h"],"af-ZA":["H","h","hB","hb"],"ar-001":["h","hB","hb","H"],"ca-ES":["H","h","hB"],"en-001":["h","hb","H","hB"],"en-HK":["h","hb","H","hB"],"en-IL":["H","h","hb","hB"],"en-MY":["h","hb","H","hB"],"es-BR":["H","h","hB","hb"],"es-ES":["H","h","hB","hb"],"es-GQ":["H","h","hB","hb"],"fr-CA":["H","h","hB"],"gl-ES":["H","h","hB"],"gu-IN":["hB","hb","h","H"],"hi-IN":["hB","h","H"],"it-CH":["H","h","hB"],"it-IT":["H","h","hB"],"kn-IN":["hB","h","H"],"ml-IN":["hB","h","H"],"mr-IN":["hB","hb","h","H"],"pa-IN":["hB","hb","h","H"],"ta-IN":["hB","h","hb","H"],"te-IN":["hB","h","H"],"zu-ZA":["H","hB","hb","h"]};function Y(e){var n=e.hourCycle;if(void 0===n&&e.hourCycles&&e.hourCycles.length&&(n=e.hourCycles[0]),n)switch(n){case"h24":return"k";case"h23":return"H";case"h12":return"h";case"h11":return"K";default:throw new Error("Invalid hourCycle")}var t,r=e.language;return"root"!==r&&(t=e.maximize().region),($[t||""]||$[r||""]||$["".concat(r,"-001")]||$["001"])[0]}var Q=new RegExp("^".concat(P.source,"*")),X=new RegExp("".concat(P.source,"*$"));function K(e,n){return{start:e,end:n}}var Z=!!String.prototype.startsWith&&"_a".startsWith("a",1),q=!!String.fromCodePoint,J=!!Object.fromEntries,ee=!!String.prototype.codePointAt,ne=!!String.prototype.trimStart,te=!!String.prototype.trimEnd,re=Number.isSafeInteger?Number.isSafeInteger:function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e&&Math.abs(e)<=9007199254740991},ae=!0;try{ae="a"===(null===(W=de("([^\\p{White_Space}\\p{Pattern_Syntax}]*)","yu").exec("a"))||void 0===W?void 0:W[0])}catch(e){ae=!1}var le,oe=Z?function(e,n,t){return e.startsWith(n,t)}:function(e,n,t){return e.slice(t,t+n.length)===n},ie=q?String.fromCodePoint:function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];for(var t,r="",a=e.length,l=0;a>l;){if((t=e[l++])>1114111)throw RangeError(t+" is not a valid code point");r+=t<65536?String.fromCharCode(t):String.fromCharCode(55296+((t-=65536)>>10),t%1024+56320)}return r},se=J?Object.fromEntries:function(e){for(var n={},t=0,r=e;t<r.length;t++){var a=r[t],l=a[0],o=a[1];n[l]=o}return n},ue=ee?function(e,n){return e.codePointAt(n)}:function(e,n){var t=e.length;if(!(n<0||n>=t)){var r,a=e.charCodeAt(n);return a<55296||a>56319||n+1===t||(r=e.charCodeAt(n+1))<56320||r>57343?a:r-56320+(a-55296<<10)+65536}},ce=ne?function(e){return e.trimStart()}:function(e){return e.replace(Q,"")},fe=te?function(e){return e.trimEnd()}:function(e){return e.replace(X,"")};function de(e,n){return new RegExp(e,n)}if(ae){var pe=de("([^\\p{White_Space}\\p{Pattern_Syntax}]*)","yu");le=function(e,n){var t;return pe.lastIndex=n,null!==(t=pe.exec(e)[1])&&void 0!==t?t:""}}else le=function(e,n){for(var t=[];;){var r=ue(e,n);if(void 0===r||ye(r)||ve(r))break;t.push(r),n+=r>=65536?2:1}return ie.apply(void 0,t)};var he,me=function(){function e(e,n){void 0===n&&(n={}),this.message=e,this.position={offset:0,line:1,column:1},this.ignoreTag=!!n.ignoreTag,this.locale=n.locale,this.requiresOtherClause=!!n.requiresOtherClause,this.shouldParseSkeletons=!!n.shouldParseSkeletons}return e.prototype.parse=function(){if(0!==this.offset())throw Error("parser can only be used once");return this.parseMessage(0,"",!1)},e.prototype.parseMessage=function(e,n,t){for(var r=[];!this.isEOF();){var a=this.char();if(123===a){if((l=this.parseArgument(e,t)).err)return l;r.push(l.val)}else{if(125===a&&e>0)break;if(35!==a||"plural"!==n&&"selectordinal"!==n){if(60===a&&!this.ignoreTag&&47===this.peek()){if(t)break;return this.error(m.UNMATCHED_CLOSING_TAG,K(this.clonePosition(),this.clonePosition()))}if(60===a&&!this.ignoreTag&&ge(this.peek()||0)){if((l=this.parseTag(e,n)).err)return l;r.push(l.val)}else{var l;if((l=this.parseLiteral(e,n)).err)return l;r.push(l.val)}}else{var o=this.clonePosition();this.bump(),r.push({type:g.pound,location:K(o,this.clonePosition())})}}}return{val:r,err:null}},e.prototype.parseTag=function(e,n){var t=this.clonePosition();this.bump();var r=this.parseTagName();if(this.bumpSpace(),this.bumpIf("/>"))return{val:{type:g.literal,value:"<".concat(r,"/>"),location:K(t,this.clonePosition())},err:null};if(this.bumpIf(">")){var a=this.parseMessage(e+1,n,!0);if(a.err)return a;var l=a.val,o=this.clonePosition();if(this.bumpIf("</")){if(this.isEOF()||!ge(this.char()))return this.error(m.INVALID_TAG,K(o,this.clonePosition()));var i=this.clonePosition();return r!==this.parseTagName()?this.error(m.UNMATCHED_CLOSING_TAG,K(i,this.clonePosition())):(this.bumpSpace(),this.bumpIf(">")?{val:{type:g.tag,value:r,children:l,location:K(t,this.clonePosition())},err:null}:this.error(m.INVALID_TAG,K(o,this.clonePosition())))}return this.error(m.UNCLOSED_TAG,K(t,this.clonePosition()))}return this.error(m.INVALID_TAG,K(t,this.clonePosition()))},e.prototype.parseTagName=function(){var e,n=this.offset();for(this.bump();!this.isEOF()&&(45===(e=this.char())||46===e||e>=48&&e<=57||95===e||e>=97&&e<=122||e>=65&&e<=90||183==e||e>=192&&e<=214||e>=216&&e<=246||e>=248&&e<=893||e>=895&&e<=8191||e>=8204&&e<=8205||e>=8255&&e<=8256||e>=8304&&e<=8591||e>=11264&&e<=12271||e>=12289&&e<=55295||e>=63744&&e<=64975||e>=65008&&e<=65533||e>=65536&&e<=983039);)this.bump();return this.message.slice(n,this.offset())},e.prototype.parseLiteral=function(e,n){for(var t=this.clonePosition(),r="";;){var a=this.tryParseQuote(n);if(a)r+=a;else{var l=this.tryParseUnquoted(e,n);if(l)r+=l;else{var o=this.tryParseLeftAngleBracket();if(!o)break;r+=o}}}var i=K(t,this.clonePosition());return{val:{type:g.literal,value:r,location:i},err:null}},e.prototype.tryParseLeftAngleBracket=function(){return this.isEOF()||60!==this.char()||!this.ignoreTag&&(ge(e=this.peek()||0)||47===e)?null:(this.bump(),"<");var e},e.prototype.tryParseQuote=function(e){if(this.isEOF()||39!==this.char())return null;switch(this.peek()){case 39:return this.bump(),this.bump(),"'";case 123:case 60:case 62:case 125:break;case 35:if("plural"===e||"selectordinal"===e)break;return null;default:return null}this.bump();var n=[this.char()];for(this.bump();!this.isEOF();){var t=this.char();if(39===t){if(39!==this.peek()){this.bump();break}n.push(39),this.bump()}else n.push(t);this.bump()}return ie.apply(void 0,n)},e.prototype.tryParseUnquoted=function(e,n){if(this.isEOF())return null;var t=this.char();return 60===t||123===t||35===t&&("plural"===n||"selectordinal"===n)||125===t&&e>0?null:(this.bump(),ie(t))},e.prototype.parseArgument=function(e,n){var t=this.clonePosition();if(this.bump(),this.bumpSpace(),this.isEOF())return this.error(m.EXPECT_ARGUMENT_CLOSING_BRACE,K(t,this.clonePosition()));if(125===this.char())return this.bump(),this.error(m.EMPTY_ARGUMENT,K(t,this.clonePosition()));var r=this.parseIdentifierIfPossible().value;if(!r)return this.error(m.MALFORMED_ARGUMENT,K(t,this.clonePosition()));if(this.bumpSpace(),this.isEOF())return this.error(m.EXPECT_ARGUMENT_CLOSING_BRACE,K(t,this.clonePosition()));switch(this.char()){case 125:return this.bump(),{val:{type:g.argument,value:r,location:K(t,this.clonePosition())},err:null};case 44:return this.bump(),this.bumpSpace(),this.isEOF()?this.error(m.EXPECT_ARGUMENT_CLOSING_BRACE,K(t,this.clonePosition())):this.parseArgumentOptions(e,n,r,t);default:return this.error(m.MALFORMED_ARGUMENT,K(t,this.clonePosition()))}},e.prototype.parseIdentifierIfPossible=function(){var e=this.clonePosition(),n=this.offset(),t=le(this.message,n),r=n+t.length;return this.bumpTo(r),{value:t,location:K(e,this.clonePosition())}},e.prototype.parseArgumentOptions=function(e,n,t,r){var l,o=this.clonePosition(),i=this.parseIdentifierIfPossible().value,s=this.clonePosition();switch(i){case"":return this.error(m.EXPECT_ARGUMENT_TYPE,K(o,s));case"number":case"date":case"time":this.bumpSpace();var u=null;if(this.bumpIf(",")){this.bumpSpace();var c=this.clonePosition();if((_=this.parseSimpleArgStyleIfPossible()).err)return _;if(0===(h=fe(_.val)).length)return this.error(m.EXPECT_ARGUMENT_STYLE,K(this.clonePosition(),this.clonePosition()));u={style:h,styleLocation:K(c,this.clonePosition())}}if((E=this.tryParseArgumentClose(r)).err)return E;var f=K(r,this.clonePosition());if(u&&oe(null==u?void 0:u.style,"::",0)){var d=ce(u.style.slice(2));if("number"===i)return(_=this.parseNumberSkeletonFromString(d,u.styleLocation)).err?_:{val:{type:g.number,value:t,location:f,style:_.val},err:null};if(0===d.length)return this.error(m.EXPECT_DATE_TIME_SKELETON,f);var p=d;this.locale&&(p=function(e,n){for(var t="",r=0;r<e.length;r++){var a=e.charAt(r);if("j"===a){for(var l=0;r+1<e.length&&e.charAt(r+1)===a;)l++,r++;var o=1+(1&l),i=l<2?1:3+(l>>1),s=Y(n);for("H"!=s&&"k"!=s||(i=0);i-- >0;)t+="a";for(;o-- >0;)t=s+t}else t+="J"===a?"H":a}return t}(d,this.locale));var h={type:y.dateTime,pattern:p,location:u.styleLocation,parsedOptions:this.shouldParseSkeletons?M(p):{}};return{val:{type:"date"===i?g.date:g.time,value:t,location:f,style:h},err:null}}return{val:{type:"number"===i?g.number:"date"===i?g.date:g.time,value:t,location:f,style:null!==(l=null==u?void 0:u.style)&&void 0!==l?l:null},err:null};case"plural":case"selectordinal":case"select":var v=this.clonePosition();if(this.bumpSpace(),!this.bumpIf(","))return this.error(m.EXPECT_SELECT_ARGUMENT_OPTIONS,K(v,a({},v)));this.bumpSpace();var b=this.parseIdentifierIfPossible(),A=0;if("select"!==i&&"offset"===b.value){if(!this.bumpIf(":"))return this.error(m.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE,K(this.clonePosition(),this.clonePosition()));var _;if(this.bumpSpace(),(_=this.tryParseDecimalInteger(m.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE,m.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE)).err)return _;this.bumpSpace(),b=this.parseIdentifierIfPossible(),A=_.val}var E,C=this.tryParsePluralOrSelectOptions(e,i,n,b);if(C.err)return C;if((E=this.tryParseArgumentClose(r)).err)return E;var w=K(r,this.clonePosition());return"select"===i?{val:{type:g.select,value:t,options:se(C.val),location:w},err:null}:{val:{type:g.plural,value:t,options:se(C.val),offset:A,pluralType:"plural"===i?"cardinal":"ordinal",location:w},err:null};default:return this.error(m.INVALID_ARGUMENT_TYPE,K(o,s))}},e.prototype.tryParseArgumentClose=function(e){return this.isEOF()||125!==this.char()?this.error(m.EXPECT_ARGUMENT_CLOSING_BRACE,K(e,this.clonePosition())):(this.bump(),{val:!0,err:null})},e.prototype.parseSimpleArgStyleIfPossible=function(){for(var e=0,n=this.clonePosition();!this.isEOF();)switch(this.char()){case 39:this.bump();var t=this.clonePosition();if(!this.bumpUntil("'"))return this.error(m.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE,K(t,this.clonePosition()));this.bump();break;case 123:e+=1,this.bump();break;case 125:if(!(e>0))return{val:this.message.slice(n.offset,this.offset()),err:null};e-=1;break;default:this.bump()}return{val:this.message.slice(n.offset,this.offset()),err:null}},e.prototype.parseNumberSkeletonFromString=function(e,n){var t=[];try{t=function(e){if(0===e.length)throw new Error("Number skeleton cannot be empty");for(var n=[],t=0,r=e.split(R).filter((function(e){return e.length>0}));t<r.length;t++){var a=r[t].split("/");if(0===a.length)throw new Error("Invalid number skeleton");for(var l=a[0],o=a.slice(1),i=0,s=o;i<s.length;i++)if(0===s[i].length)throw new Error("Invalid number skeleton");n.push({stem:l,options:o})}return n}(e)}catch(e){return this.error(m.INVALID_NUMBER_SKELETON,n)}return{val:{type:y.number,tokens:t,location:n,parsedOptions:this.shouldParseSkeletons?V(t):{}},err:null}},e.prototype.tryParsePluralOrSelectOptions=function(e,n,t,r){for(var a,l=!1,o=[],i=new Set,s=r.value,u=r.location;;){if(0===s.length){var c=this.clonePosition();if("select"===n||!this.bumpIf("="))break;var f=this.tryParseDecimalInteger(m.EXPECT_PLURAL_ARGUMENT_SELECTOR,m.INVALID_PLURAL_ARGUMENT_SELECTOR);if(f.err)return f;u=K(c,this.clonePosition()),s=this.message.slice(c.offset,this.offset())}if(i.has(s))return this.error("select"===n?m.DUPLICATE_SELECT_ARGUMENT_SELECTOR:m.DUPLICATE_PLURAL_ARGUMENT_SELECTOR,u);"other"===s&&(l=!0),this.bumpSpace();var d=this.clonePosition();if(!this.bumpIf("{"))return this.error("select"===n?m.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT:m.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT,K(this.clonePosition(),this.clonePosition()));var p=this.parseMessage(e+1,n,t);if(p.err)return p;var h=this.tryParseArgumentClose(d);if(h.err)return h;o.push([s,{value:p.val,location:K(d,this.clonePosition())}]),i.add(s),this.bumpSpace(),s=(a=this.parseIdentifierIfPossible()).value,u=a.location}return 0===o.length?this.error("select"===n?m.EXPECT_SELECT_ARGUMENT_SELECTOR:m.EXPECT_PLURAL_ARGUMENT_SELECTOR,K(this.clonePosition(),this.clonePosition())):this.requiresOtherClause&&!l?this.error(m.MISSING_OTHER_CLAUSE,K(this.clonePosition(),this.clonePosition())):{val:o,err:null}},e.prototype.tryParseDecimalInteger=function(e,n){var t=1,r=this.clonePosition();this.bumpIf("+")||this.bumpIf("-")&&(t=-1);for(var a=!1,l=0;!this.isEOF();){var o=this.char();if(!(o>=48&&o<=57))break;a=!0,l=10*l+(o-48),this.bump()}var i=K(r,this.clonePosition());return a?re(l*=t)?{val:l,err:null}:this.error(n,i):this.error(e,i)},e.prototype.offset=function(){return this.position.offset},e.prototype.isEOF=function(){return this.offset()===this.message.length},e.prototype.clonePosition=function(){return{offset:this.position.offset,line:this.position.line,column:this.position.column}},e.prototype.char=function(){var e=this.position.offset;if(e>=this.message.length)throw Error("out of bound");var n=ue(this.message,e);if(void 0===n)throw Error("Offset ".concat(e," is at invalid UTF-16 code unit boundary"));return n},e.prototype.error=function(e,n){return{val:null,err:{kind:e,message:this.message,location:n}}},e.prototype.bump=function(){if(!this.isEOF()){var e=this.char();10===e?(this.position.line+=1,this.position.column=1,this.position.offset+=1):(this.position.column+=1,this.position.offset+=e<65536?1:2)}},e.prototype.bumpIf=function(e){if(oe(this.message,e,this.offset())){for(var n=0;n<e.length;n++)this.bump();return!0}return!1},e.prototype.bumpUntil=function(e){var n=this.offset(),t=this.message.indexOf(e,n);return t>=0?(this.bumpTo(t),!0):(this.bumpTo(this.message.length),!1)},e.prototype.bumpTo=function(e){if(this.offset()>e)throw Error("targetOffset ".concat(e," must be greater than or equal to the current offset ").concat(this.offset()));for(e=Math.min(e,this.message.length);;){var n=this.offset();if(n===e)break;if(n>e)throw Error("targetOffset ".concat(e," is at invalid UTF-16 code unit boundary"));if(this.bump(),this.isEOF())break}},e.prototype.bumpSpace=function(){for(;!this.isEOF()&&ye(this.char());)this.bump()},e.prototype.peek=function(){if(this.isEOF())return null;var e=this.char(),n=this.offset(),t=this.message.charCodeAt(n+(e>=65536?2:1));return null!=t?t:null},e}();function ge(e){return e>=97&&e<=122||e>=65&&e<=90}function ye(e){return e>=9&&e<=13||32===e||133===e||e>=8206&&e<=8207||8232===e||8233===e}function ve(e){return e>=33&&e<=35||36===e||e>=37&&e<=39||40===e||41===e||42===e||43===e||44===e||45===e||e>=46&&e<=47||e>=58&&e<=59||e>=60&&e<=62||e>=63&&e<=64||91===e||92===e||93===e||94===e||96===e||123===e||124===e||125===e||126===e||161===e||e>=162&&e<=165||166===e||167===e||169===e||171===e||172===e||174===e||176===e||177===e||182===e||187===e||191===e||215===e||247===e||e>=8208&&e<=8213||e>=8214&&e<=8215||8216===e||8217===e||8218===e||e>=8219&&e<=8220||8221===e||8222===e||8223===e||e>=8224&&e<=8231||e>=8240&&e<=8248||8249===e||8250===e||e>=8251&&e<=8254||e>=8257&&e<=8259||8260===e||8261===e||8262===e||e>=8263&&e<=8273||8274===e||8275===e||e>=8277&&e<=8286||e>=8592&&e<=8596||e>=8597&&e<=8601||e>=8602&&e<=8603||e>=8604&&e<=8607||8608===e||e>=8609&&e<=8610||8611===e||e>=8612&&e<=8613||8614===e||e>=8615&&e<=8621||8622===e||e>=8623&&e<=8653||e>=8654&&e<=8655||e>=8656&&e<=8657||8658===e||8659===e||8660===e||e>=8661&&e<=8691||e>=8692&&e<=8959||e>=8960&&e<=8967||8968===e||8969===e||8970===e||8971===e||e>=8972&&e<=8991||e>=8992&&e<=8993||e>=8994&&e<=9e3||9001===e||9002===e||e>=9003&&e<=9083||9084===e||e>=9085&&e<=9114||e>=9115&&e<=9139||e>=9140&&e<=9179||e>=9180&&e<=9185||e>=9186&&e<=9254||e>=9255&&e<=9279||e>=9280&&e<=9290||e>=9291&&e<=9311||e>=9472&&e<=9654||9655===e||e>=9656&&e<=9664||9665===e||e>=9666&&e<=9719||e>=9720&&e<=9727||e>=9728&&e<=9838||9839===e||e>=9840&&e<=10087||10088===e||10089===e||10090===e||10091===e||10092===e||10093===e||10094===e||10095===e||10096===e||10097===e||10098===e||10099===e||10100===e||10101===e||e>=10132&&e<=10175||e>=10176&&e<=10180||10181===e||10182===e||e>=10183&&e<=10213||10214===e||10215===e||10216===e||10217===e||10218===e||10219===e||10220===e||10221===e||10222===e||10223===e||e>=10224&&e<=10239||e>=10240&&e<=10495||e>=10496&&e<=10626||10627===e||10628===e||10629===e||10630===e||10631===e||10632===e||10633===e||10634===e||10635===e||10636===e||10637===e||10638===e||10639===e||10640===e||10641===e||10642===e||10643===e||10644===e||10645===e||10646===e||10647===e||10648===e||e>=10649&&e<=10711||10712===e||10713===e||10714===e||10715===e||e>=10716&&e<=10747||10748===e||10749===e||e>=10750&&e<=11007||e>=11008&&e<=11055||e>=11056&&e<=11076||e>=11077&&e<=11078||e>=11079&&e<=11084||e>=11085&&e<=11123||e>=11124&&e<=11125||e>=11126&&e<=11157||11158===e||e>=11159&&e<=11263||e>=11776&&e<=11777||11778===e||11779===e||11780===e||11781===e||e>=11782&&e<=11784||11785===e||11786===e||11787===e||11788===e||11789===e||e>=11790&&e<=11798||11799===e||e>=11800&&e<=11801||11802===e||11803===e||11804===e||11805===e||e>=11806&&e<=11807||11808===e||11809===e||11810===e||11811===e||11812===e||11813===e||11814===e||11815===e||11816===e||11817===e||e>=11818&&e<=11822||11823===e||e>=11824&&e<=11833||e>=11834&&e<=11835||e>=11836&&e<=11839||11840===e||11841===e||11842===e||e>=11843&&e<=11855||e>=11856&&e<=11857||11858===e||e>=11859&&e<=11903||e>=12289&&e<=12291||12296===e||12297===e||12298===e||12299===e||12300===e||12301===e||12302===e||12303===e||12304===e||12305===e||e>=12306&&e<=12307||12308===e||12309===e||12310===e||12311===e||12312===e||12313===e||12314===e||12315===e||12316===e||12317===e||e>=12318&&e<=12319||12320===e||12336===e||64830===e||64831===e||e>=65093&&e<=65094}function be(e){e.forEach((function(e){if(delete e.location,k(e)||I(e))for(var n in e.options)delete e.options[n].location,be(e.options[n].value);else C(e)&&x(e.style)||(w(e)||S(e))&&N(e.style)?delete e.style.location:B(e)&&be(e.children)}))}function Ae(e,n){void 0===n&&(n={}),n=a({shouldParseSkeletons:!0,requiresOtherClause:!0},n);var t=new me(e,n).parse();if(t.err){var r=SyntaxError(m[t.err.kind]);throw r.location=t.err.location,r.originalMessage=t.err.message,r}return(null==n?void 0:n.captureLocation)||be(t.val),t.val}!function(e){e.MISSING_VALUE="MISSING_VALUE",e.INVALID_VALUE="INVALID_VALUE",e.MISSING_INTL_API="MISSING_INTL_API"}(he||(he={}));var _e,Ee=function(e){function n(n,t,r){var a=e.call(this,n)||this;return a.code=t,a.originalMessage=r,a}return r(n,e),n.prototype.toString=function(){return"[formatjs Error: ".concat(this.code,"] ").concat(this.message)},n}(Error),Ce=function(e){function n(n,t,r,a){return e.call(this,'Invalid values for "'.concat(n,'": "').concat(t,'". Options are "').concat(Object.keys(r).join('", "'),'"'),he.INVALID_VALUE,a)||this}return r(n,e),n}(Ee),we=function(e){function n(n,t,r){return e.call(this,'Value for "'.concat(n,'" must be of type ').concat(t),he.INVALID_VALUE,r)||this}return r(n,e),n}(Ee),Se=function(e){function n(n,t){return e.call(this,'The intl string context variable "'.concat(n,'" was not provided to the string "').concat(t,'"'),he.MISSING_VALUE,t)||this}return r(n,e),n}(Ee);function ke(e){return"function"==typeof e}function Ie(e,n,t,r,a,l,o){if(1===e.length&&_(e[0]))return[{type:_e.literal,value:e[0].value}];for(var i=[],s=0,u=e;s<u.length;s++){var c=u[s];if(_(c))i.push({type:_e.literal,value:c.value});else if(T(c))"number"==typeof l&&i.push({type:_e.literal,value:t.getNumberFormat(n).format(l)});else{var f=c.value;if(!a||!(f in a))throw new Se(f,o);var d=a[f];if(E(c))d&&"string"!=typeof d&&"number"!=typeof d||(d="string"==typeof d||"number"==typeof d?String(d):""),i.push({type:"string"==typeof d?_e.literal:_e.object,value:d});else if(w(c)){var p="string"==typeof c.style?r.date[c.style]:N(c.style)?c.style.parsedOptions:void 0;i.push({type:_e.literal,value:t.getDateTimeFormat(n,p).format(d)})}else if(S(c))p="string"==typeof c.style?r.time[c.style]:N(c.style)?c.style.parsedOptions:r.time.medium,i.push({type:_e.literal,value:t.getDateTimeFormat(n,p).format(d)});else if(C(c))(p="string"==typeof c.style?r.number[c.style]:x(c.style)?c.style.parsedOptions:void 0)&&p.scale&&(d*=p.scale||1),i.push({type:_e.literal,value:t.getNumberFormat(n,p).format(d)});else{if(B(c)){var h=c.children,m=c.value,g=a[m];if(!ke(g))throw new we(m,"function",o);var y=g(Ie(h,n,t,r,a,l).map((function(e){return e.value})));Array.isArray(y)||(y=[y]),i.push.apply(i,y.map((function(e){return{type:"string"==typeof e?_e.literal:_e.object,value:e}})))}if(k(c)){if(!(v=c.options[d]||c.options.other))throw new Ce(c.value,d,Object.keys(c.options),o);i.push.apply(i,Ie(v.value,n,t,r,a))}else if(I(c)){var v;if(!(v=c.options["=".concat(d)])){if(!Intl.PluralRules)throw new Ee('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n',he.MISSING_INTL_API,o);var b=t.getPluralRules(n,{type:c.pluralType}).select(d-(c.offset||0));v=c.options[b]||c.options.other}if(!v)throw new Ce(c.value,d,Object.keys(c.options),o);i.push.apply(i,Ie(v.value,n,t,r,a,d-(c.offset||0)))}}}}return(A=i).length<2?A:A.reduce((function(e,n){var t=e[e.length-1];return t&&t.type===_e.literal&&n.type===_e.literal?t.value+=n.value:e.push(n),e}),[]);var A}function Te(e){return{create:function(){return{get:function(n){return e[n]},set:function(n,t){e[n]=t}}}}}!function(e){e[e.literal=0]="literal",e[e.object=1]="object"}(_e||(_e={}));var Be,xe=function(){function e(n,t,r,o){void 0===t&&(t=e.defaultLocale);var u,c,f,d=this;if(this.formatterCache={number:{},dateTime:{},pluralRules:{}},this.format=function(e){var n=d.formatToParts(e);if(1===n.length)return n[0].value;var t=n.reduce((function(e,n){return e.length&&n.type===_e.literal&&"string"==typeof e[e.length-1]?e[e.length-1]+=n.value:e.push(n.value),e}),[]);return t.length<=1?t[0]||"":t},this.formatToParts=function(e){return Ie(d.ast,d.locales,d.formatters,d.formats,e,void 0,d.message)},this.resolvedOptions=function(){var e;return{locale:(null===(e=d.resolvedLocale)||void 0===e?void 0:e.toString())||Intl.NumberFormat.supportedLocalesOf(d.locales)[0]}},this.getAst=function(){return d.ast},this.locales=t,this.resolvedLocale=e.resolveLocale(t),"string"==typeof n){if(this.message=n,!e.__parse)throw new TypeError("IntlMessageFormat.__parse must be set to process `message` of type `string`");var p=o||{},h=(p.formatters,l(p,["formatters"]));this.ast=e.__parse(n,a(a({},h),{locale:this.resolvedLocale}))}else this.ast=n;if(!Array.isArray(this.ast))throw new TypeError("A message must be provided as a String or AST.");this.formats=(c=e.formats,(f=r)?Object.keys(c).reduce((function(e,n){var t,r;return e[n]=(t=c[n],(r=f[n])?a(a(a({},t||{}),r||{}),Object.keys(t).reduce((function(e,n){return e[n]=a(a({},t[n]),r[n]||{}),e}),{})):t),e}),a({},c)):c),this.formatters=o&&o.formatters||(void 0===(u=this.formatterCache)&&(u={number:{},dateTime:{},pluralRules:{}}),{getNumberFormat:s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.NumberFormat).bind.apply(e,i([void 0],n,!1)))}),{cache:Te(u.number),strategy:b.variadic}),getDateTimeFormat:s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.DateTimeFormat).bind.apply(e,i([void 0],n,!1)))}),{cache:Te(u.dateTime),strategy:b.variadic}),getPluralRules:s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.PluralRules).bind.apply(e,i([void 0],n,!1)))}),{cache:Te(u.pluralRules),strategy:b.variadic})})}return Object.defineProperty(e,"defaultLocale",{get:function(){return e.memoizedDefaultLocale||(e.memoizedDefaultLocale=(new Intl.NumberFormat).resolvedOptions().locale),e.memoizedDefaultLocale},enumerable:!1,configurable:!0}),e.memoizedDefaultLocale=null,e.resolveLocale=function(e){if(void 0!==Intl.Locale){var n=Intl.NumberFormat.supportedLocalesOf(e);return n.length>0?new Intl.Locale(n[0]):new Intl.Locale("string"==typeof e?e:e[0])}},e.__parse=Ae,e.formats={number:{integer:{maximumFractionDigits:0},currency:{style:"currency"},percent:{style:"percent"}},date:{short:{month:"numeric",day:"numeric",year:"2-digit"},medium:{month:"short",day:"numeric",year:"numeric"},long:{month:"long",day:"numeric",year:"numeric"},full:{weekday:"long",month:"long",day:"numeric",year:"numeric"}},time:{short:{hour:"numeric",minute:"numeric"},medium:{hour:"numeric",minute:"numeric",second:"numeric"},long:{hour:"numeric",minute:"numeric",second:"numeric",timeZoneName:"short"},full:{hour:"numeric",minute:"numeric",second:"numeric",timeZoneName:"short"}}},e}();!function(e){e.FORMAT_ERROR="FORMAT_ERROR",e.UNSUPPORTED_FORMATTER="UNSUPPORTED_FORMATTER",e.INVALID_CONFIG="INVALID_CONFIG",e.MISSING_DATA="MISSING_DATA",e.MISSING_TRANSLATION="MISSING_TRANSLATION"}(Be||(Be={}));var Ne=function(e){function n(t,r,a){var l=this,o=a?a instanceof Error?a:new Error(String(a)):void 0;return(l=e.call(this,"[@formatjs/intl Error ".concat(t,"] ").concat(r,"\n").concat(o?"\n".concat(o.message,"\n").concat(o.stack):""))||this).code=t,"function"==typeof Error.captureStackTrace&&Error.captureStackTrace(l,n),l}return r(n,e),n}(Error),Pe=function(e){function n(n,t){return e.call(this,Be.UNSUPPORTED_FORMATTER,n,t)||this}return r(n,e),n}(Ne),Le=function(e){function n(n,t){return e.call(this,Be.INVALID_CONFIG,n,t)||this}return r(n,e),n}(Ne),Me=function(e){function n(n,t){return e.call(this,Be.MISSING_DATA,n,t)||this}return r(n,e),n}(Ne),Re=function(e){function n(n,t,r){var a=e.call(this,Be.FORMAT_ERROR,"".concat(n,"\nLocale: ").concat(t,"\n"),r)||this;return a.locale=t,a}return r(n,e),n}(Ne),Oe=function(e){function n(n,t,r,a){var l=e.call(this,"".concat(n,"\nMessageID: ").concat(null==r?void 0:r.id,"\nDefault Message: ").concat(null==r?void 0:r.defaultMessage,"\nDescription: ").concat(null==r?void 0:r.description,"\n"),t,a)||this;return l.descriptor=r,l.locale=t,l}return r(n,e),n}(Re),He=function(e){function n(n,t){var r=e.call(this,Be.MISSING_TRANSLATION,'Missing message: "'.concat(n.id,'" for locale "').concat(t,'", using ').concat(n.defaultMessage?"default message (".concat("string"==typeof n.defaultMessage?n.defaultMessage:n.defaultMessage.map((function(e){var n;return null!==(n=e.value)&&void 0!==n?n:JSON.stringify(e)})).join(),")"):"id"," as fallback."))||this;return r.descriptor=n,r}return r(n,e),n}(Ne);function ze(e,n,t){return void 0===t&&(t={}),n.reduce((function(n,r){return r in e?n[r]=e[r]:r in t&&(n[r]=t[r]),n}),{})}var De={formats:{},messages:{},timeZone:void 0,defaultLocale:"en",defaultFormats:{},fallbackOnEmptyString:!0,onError:function(e){},onWarn:function(e){}};function Fe(e){return{create:function(){return{get:function(n){return e[n]},set:function(n,t){e[n]=t}}}}}function Ue(e,n,t,r){var a,l=e&&e[n];if(l&&(a=l[t]),a)return a;r(new Pe("No ".concat(n," format named: ").concat(t)))}function je(e){A(e,"[React Intl] Could not find required `intl` object. <IntlProvider> needs to exist in the component ancestry.")}var Ge=a(a({},De),{textComponent:e.Fragment});function Ve(e,n){if(e===n)return!0;if(!e||!n)return!1;var t=Object.keys(e),r=Object.keys(n),a=t.length;if(r.length!==a)return!1;for(var l=0;l<a;l++){var o=t[l];if(e[o]!==n[o]||!Object.prototype.hasOwnProperty.call(n,o))return!1}return!0}o(146);var We="undefined"==typeof window||window.__REACT_INTL_BYPASS_GLOBAL_CONTEXT__?e.createContext(null):window.__REACT_INTL_CONTEXT__||(window.__REACT_INTL_CONTEXT__=e.createContext(null)),$e=(We.Consumer,We.Provider),Ye=We;function Qe(){var n=e.useContext(Ye);return je(n),n}function Xe(n){var t=Qe(),r=t.formatMessage,a=t.textComponent,l=void 0===a?e.Fragment:a,o=n.id,i=n.description,s=n.defaultMessage,u=n.values,c=n.children,f=n.tagName,d=void 0===f?l:f,p=r({id:o,description:i,defaultMessage:s},u,{ignoreTag:n.ignoreTag});return"function"==typeof c?c(Array.isArray(p)?p:[p]):d?e.createElement(d,null,e.Children.toArray(p)):e.createElement(e.Fragment,null,p)}Xe.displayName="FormattedMessage";var Ke=e.memo(Xe,(function(e,n){var t=e.values,r=l(e,["values"]),a=n.values,o=l(n,["values"]);return Ve(a,t)&&Ve(r,o)}));Ke.displayName="MemoizedFormattedMessage";const Ze=Ke;function qe(e,n){return Object.keys(e).reduce((function(t,r){return t[r]=a({timeZone:n},e[r]),t}),{})}function Je(e,n){return Object.keys(a(a({},e),n)).reduce((function(t,r){return t[r]=a(a({},e[r]||{}),n[r]||{}),t}),{})}function en(e,n){if(!n)return e;var t=xe.formats;return a(a(a({},t),e),{date:Je(qe(t.date,n),qe(e.date||{},n)),time:Je(qe(t.time,n),qe(e.time||{},n))})}var nn=function(e,n,t,r,l){var o=e.locale,i=e.formats,s=e.messages,u=e.defaultLocale,c=e.defaultFormats,f=e.fallbackOnEmptyString,d=e.onError,p=e.timeZone,h=e.defaultRichTextElements;void 0===t&&(t={id:""});var m=t.id,y=t.defaultMessage;A(!!m,"[@formatjs/intl] An `id` must be provided to format a message. You can either:\n1. Configure your build toolchain with [babel-plugin-formatjs](https://formatjs.io/docs/tooling/babel-plugin)\nor [@formatjs/ts-transformer](https://formatjs.io/docs/tooling/ts-transformer) OR\n2. Configure your `eslint` config to include [eslint-plugin-formatjs](https://formatjs.io/docs/tooling/linter#enforce-id)\nto autofix this issue");var v=String(m),b=s&&Object.prototype.hasOwnProperty.call(s,v)&&s[v];if(Array.isArray(b)&&1===b.length&&b[0].type===g.literal)return b[0].value;if(!r&&b&&"string"==typeof b&&!h)return b.replace(/'\{(.*?)\}'/gi,"{$1}");if(r=a(a({},h),r||{}),i=en(i,p),c=en(c,p),!b){if(!1===f&&""===b)return b;if((!y||o&&o.toLowerCase()!==u.toLowerCase())&&d(new He(t,o)),y)try{return n.getMessageFormat(y,u,c,l).format(r)}catch(e){return d(new Oe('Error formatting default message for: "'.concat(v,'", rendering default message verbatim'),o,t,e)),"string"==typeof y?y:v}return v}try{return n.getMessageFormat(b,o,i,a({formatters:n},l||{})).format(r)}catch(e){d(new Oe('Error formatting message: "'.concat(v,'", using ').concat(y?"default message":"id"," as fallback."),o,t,e))}if(y)try{return n.getMessageFormat(y,u,c,l).format(r)}catch(e){d(new Oe('Error formatting the default message for: "'.concat(v,'", rendering message verbatim'),o,t,e))}return"string"==typeof b?b:"string"==typeof y?y:v},tn=["style","currency","unit","unitDisplay","useGrouping","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits","compactDisplay","currencyDisplay","currencySign","notation","signDisplay","unit","unitDisplay","numberingSystem","trailingZeroDisplay","roundingPriority","roundingIncrement","roundingMode"];function rn(e,n,t){var r=e.locale,a=e.formats,l=e.onError;void 0===t&&(t={});var o=t.format,i=o&&Ue(a,"number",o,l)||{};return n(r,ze(t,tn,i))}function an(e,n,t,r){void 0===r&&(r={});try{return rn(e,n,r).format(t)}catch(n){e.onError(new Re("Error formatting number.",e.locale,n))}return String(t)}function ln(e,n,t,r){void 0===r&&(r={});try{return rn(e,n,r).formatToParts(t)}catch(n){e.onError(new Re("Error formatting number.",e.locale,n))}return[]}var on=["numeric","style"];function sn(e,n,t,r,a){void 0===a&&(a={}),r||(r="second"),Intl.RelativeTimeFormat||e.onError(new Ee('Intl.RelativeTimeFormat is not available in this environment.\nTry polyfilling it using "@formatjs/intl-relativetimeformat"\n',he.MISSING_INTL_API));try{return function(e,n,t){var r=e.locale,a=e.formats,l=e.onError;void 0===t&&(t={});var o=t.format,i=!!o&&Ue(a,"relative",o,l)||{};return n(r,ze(t,on,i))}(e,n,a).format(t,r)}catch(n){e.onError(new Re("Error formatting relative time.",e.locale,n))}return String(t)}var un=["formatMatcher","timeZone","hour12","weekday","era","year","month","day","hour","minute","second","timeZoneName","hourCycle","dateStyle","timeStyle","calendar","numberingSystem","fractionalSecondDigits"];function cn(e,n,t,r){var l=e.locale,o=e.formats,i=e.onError,s=e.timeZone;void 0===r&&(r={});var u=r.format,c=a(a({},s&&{timeZone:s}),u&&Ue(o,n,u,i)),f=ze(r,un,c);return"time"!==n||f.hour||f.minute||f.second||f.timeStyle||f.dateStyle||(f=a(a({},f),{hour:"numeric",minute:"numeric"})),t(l,f)}function fn(e,n){for(var t=[],r=2;r<arguments.length;r++)t[r-2]=arguments[r];var a=t[0],l=t[1],o=void 0===l?{}:l,i="string"==typeof a?new Date(a||0):a;try{return cn(e,"date",n,o).format(i)}catch(n){e.onError(new Re("Error formatting date.",e.locale,n))}return String(i)}function dn(e,n){for(var t=[],r=2;r<arguments.length;r++)t[r-2]=arguments[r];var a=t[0],l=t[1],o=void 0===l?{}:l,i="string"==typeof a?new Date(a||0):a;try{return cn(e,"time",n,o).format(i)}catch(n){e.onError(new Re("Error formatting time.",e.locale,n))}return String(i)}function pn(e,n){for(var t=[],r=2;r<arguments.length;r++)t[r-2]=arguments[r];var a=t[0],l=t[1],o=t[2],i=void 0===o?{}:o,s=e.timeZone,u=e.locale,c=e.onError,f=ze(i,un,s?{timeZone:s}:{});try{return n(u,f).formatRange(a,l)}catch(n){c(new Re("Error formatting date time range.",e.locale,n))}return String(a)}function hn(e,n){for(var t=[],r=2;r<arguments.length;r++)t[r-2]=arguments[r];var a=t[0],l=t[1],o=void 0===l?{}:l,i="string"==typeof a?new Date(a||0):a;try{return cn(e,"date",n,o).formatToParts(i)}catch(n){e.onError(new Re("Error formatting date.",e.locale,n))}return[]}function mn(e,n){for(var t=[],r=2;r<arguments.length;r++)t[r-2]=arguments[r];var a=t[0],l=t[1],o=void 0===l?{}:l,i="string"==typeof a?new Date(a||0):a;try{return cn(e,"time",n,o).formatToParts(i)}catch(n){e.onError(new Re("Error formatting time.",e.locale,n))}return[]}var gn=["type"];function yn(e,n,t,r){var a=e.locale,l=e.onError;void 0===r&&(r={}),Intl.PluralRules||l(new Ee('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n',he.MISSING_INTL_API));var o=ze(r,gn);try{return n(a,o).select(t)}catch(e){l(new Re("Error formatting plural.",a,e))}return"other"}var vn=["type","style"],bn=Date.now();function An(e,n,t,r){void 0===r&&(r={});var a=_n(e,n,t,r).reduce((function(e,n){var t=n.value;return"string"!=typeof t?e.push(t):"string"==typeof e[e.length-1]?e[e.length-1]+=t:e.push(t),e}),[]);return 1===a.length?a[0]:0===a.length?"":a}function _n(e,n,t,r){var l=e.locale,o=e.onError;void 0===r&&(r={}),Intl.ListFormat||o(new Ee('Intl.ListFormat is not available in this environment.\nTry polyfilling it using "@formatjs/intl-listformat"\n',he.MISSING_INTL_API));var i=ze(r,vn);try{var s={},u=t.map((function(e,n){if("object"==typeof e){var t=function(e){return"".concat(bn,"_").concat(e,"_").concat(bn)}(n);return s[t]=e,t}return String(e)}));return n(l,i).formatToParts(u).map((function(e){return"literal"===e.type?e:a(a({},e),{value:s[e.value]||e.value})}))}catch(e){o(new Re("Error formatting list.",l,e))}return t}var En=["style","type","fallback","languageDisplay"];function Cn(e,n,t,r){var a=e.locale,l=e.onError;Intl.DisplayNames||l(new Ee('Intl.DisplayNames is not available in this environment.\nTry polyfilling it using "@formatjs/intl-displaynames"\n',he.MISSING_INTL_API));var o=ze(r,En);try{return n(a,o).of(t)}catch(e){l(new Re("Error formatting display name.",a,e))}}function wn(e,n){var t=function(e){void 0===e&&(e={dateTime:{},number:{},message:{},relativeTime:{},pluralRules:{},list:{},displayNames:{}});var n=Intl.RelativeTimeFormat,t=Intl.ListFormat,r=Intl.DisplayNames,l=s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.DateTimeFormat).bind.apply(e,i([void 0],n,!1)))}),{cache:Fe(e.dateTime),strategy:b.variadic}),o=s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.NumberFormat).bind.apply(e,i([void 0],n,!1)))}),{cache:Fe(e.number),strategy:b.variadic}),u=s((function(){for(var e,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];return new((e=Intl.PluralRules).bind.apply(e,i([void 0],n,!1)))}),{cache:Fe(e.pluralRules),strategy:b.variadic});return{getDateTimeFormat:l,getNumberFormat:o,getMessageFormat:s((function(e,n,t,r){return new xe(e,n,t,a({formatters:{getNumberFormat:o,getDateTimeFormat:l,getPluralRules:u}},r||{}))}),{cache:Fe(e.message),strategy:b.variadic}),getRelativeTimeFormat:s((function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return new(n.bind.apply(n,i([void 0],e,!1)))}),{cache:Fe(e.relativeTime),strategy:b.variadic}),getPluralRules:u,getListFormat:s((function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return new(t.bind.apply(t,i([void 0],e,!1)))}),{cache:Fe(e.list),strategy:b.variadic}),getDisplayNames:s((function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return new(r.bind.apply(r,i([void 0],e,!1)))}),{cache:Fe(e.displayNames),strategy:b.variadic})}}(n),r=a(a({},De),e),l=r.locale,o=r.defaultLocale,u=r.onError;return l?!Intl.NumberFormat.supportedLocalesOf(l).length&&u?u(new Me('Missing locale data for locale: "'.concat(l,'" in Intl.NumberFormat. Using default locale: "').concat(o,'" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details'))):!Intl.DateTimeFormat.supportedLocalesOf(l).length&&u&&u(new Me('Missing locale data for locale: "'.concat(l,'" in Intl.DateTimeFormat. Using default locale: "').concat(o,'" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details'))):(u&&u(new Le('"locale" was not configured, using "'.concat(o,'" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details'))),r.locale=r.defaultLocale||"en"),function(e){var n;e.onWarn&&e.defaultRichTextElements&&"string"==typeof((n=e.messages||{})?n[Object.keys(n)[0]]:void 0)&&e.onWarn('[@formatjs/intl] "defaultRichTextElements" was specified but "message" was not pre-compiled. \nPlease consider using "@formatjs/cli" to pre-compile your messages for performance.\nFor more details see https://formatjs.io/docs/getting-started/message-distribution')}(r),a(a({},r),{formatters:t,formatNumber:an.bind(null,r,t.getNumberFormat),formatNumberToParts:ln.bind(null,r,t.getNumberFormat),formatRelativeTime:sn.bind(null,r,t.getRelativeTimeFormat),formatDate:fn.bind(null,r,t.getDateTimeFormat),formatDateToParts:hn.bind(null,r,t.getDateTimeFormat),formatTime:dn.bind(null,r,t.getDateTimeFormat),formatDateTimeRange:pn.bind(null,r,t.getDateTimeFormat),formatTimeToParts:mn.bind(null,r,t.getDateTimeFormat),formatPlural:yn.bind(null,r,t.getPluralRules),formatMessage:nn.bind(null,r,t),$t:nn.bind(null,r,t),formatList:An.bind(null,r,t.getListFormat),formatListToParts:_n.bind(null,r,t.getListFormat),formatDisplayName:Cn.bind(null,r,t.getDisplayNames)})}function Sn(n){return n?Object.keys(n).reduce((function(t,r){var a,l=n[r];return t[r]=ke(l)?(a=l,function(n){return a(e.Children.toArray(n))}):l,t}),{}):n}var kn=function(n,t,r,a){for(var l=[],o=4;o<arguments.length;o++)l[o-4]=arguments[o];var s=Sn(a),u=nn.apply(void 0,i([n,t,r,s],l,!1));return Array.isArray(u)?e.Children.toArray(u):u},In=function(e,n){var t=e.defaultRichTextElements,r=l(e,["defaultRichTextElements"]),o=Sn(t),i=wn(a(a(a({},Ge),r),{defaultRichTextElements:o}),n),s={locale:i.locale,timeZone:i.timeZone,fallbackOnEmptyString:i.fallbackOnEmptyString,formats:i.formats,defaultLocale:i.defaultLocale,defaultFormats:i.defaultFormats,messages:i.messages,onError:i.onError,defaultRichTextElements:o};return a(a({},i),{formatMessage:kn.bind(null,s,i.formatters),$t:kn.bind(null,s,i.formatters)})};function Tn(e){return{locale:e.locale,timeZone:e.timeZone,fallbackOnEmptyString:e.fallbackOnEmptyString,formats:e.formats,textComponent:e.textComponent,messages:e.messages,defaultLocale:e.defaultLocale,defaultFormats:e.defaultFormats,onError:e.onError,onWarn:e.onWarn,wrapRichTextChunksInFragment:e.wrapRichTextChunksInFragment,defaultRichTextElements:e.defaultRichTextElements}}var Bn=function(n){function t(){var e=null!==n&&n.apply(this,arguments)||this;return e.cache={dateTime:{},number:{},message:{},relativeTime:{},pluralRules:{},list:{},displayNames:{}},e.state={cache:e.cache,intl:In(Tn(e.props),e.cache),prevConfig:Tn(e.props)},e}return r(t,n),t.getDerivedStateFromProps=function(e,n){var t=n.prevConfig,r=n.cache,a=Tn(e);return Ve(t,a)?null:{intl:In(a,r),prevConfig:a}},t.prototype.render=function(){return je(this.state.intl),e.createElement($e,{value:this.state.intl},this.props.children)},t.displayName="IntlProvider",t.defaultProps=Ge,t}(e.PureComponent);const xn=Bn;var Nn,Pn,Ln,Mn,Rn=o(942),On=o.n(Rn);!function(e){e.NobleGas="noble gas",e.DiatomicNonmetal="diatomic nonmetal",e.PolyatomicNonmetal="polyatomic nonmetal",e.TransitionMetal="transition metal",e.PostTransitionMetal="post-transition metal",e.Metalloid="metalloid",e.AlkaliMetal="alkali metal",e.AlkalineEarthMetal="alkaline earth metal",e.UnknownTransitionMetal="unknown, probably transition metal",e.UnknownPostTransitionMetal="unknown, probably post-transition metal",e.UnknownMetalloid="unknown, probably metalloid",e.UnknownNobleGas="unknown, predicted to be noble gas",e.UnknownAlkaliMetal="unknown, but predicted to be an alkali metal",e.Actinide="actinide",e.Lanthanide="lanthanide"}(Nn||(Nn={})),function(e){e.NobleGases="Noble gases",e.ReactiveNonMetals="Reactive non-metals",e.TransitionMetals="Transition metals",e.PostTransitionMetals="Post-transition metals",e.Metalloids="Metalloids",e.AlkaliMetals="Alkali metals",e.AlkalineEarthMetals="Alkaline earth metals",e.UnknownProperties="Unknown properties",e.Actinides="Actinides",e.Lanthanides="Lanthanides"}(Pn||(Pn={})),function(e){e.English="en",e.Russian="ru"}(Ln||(Ln={})),function(e){e.long="Длинная",e.superLong="Сверхдлинная"}(Mn||(Mn={}));const Hn={en:Ln.English,"en-US":Ln.English,ru:Ln.Russian,"ru-RU":Ln.Russian},zn={tableType:Mn.long,language:function(){const e=navigator.language;return Hn[e]}()||Ln.Russian,messages:{},isLoading:!0,periodicElements:[],selectedElement:void 0,selectedCategory:void 0,onSelectTableType:()=>()=>{},onSelectLanguage:()=>()=>{},onSelectElement:()=>()=>{},onSelectCategory:()=>()=>{}},Dn=(0,e.createContext)(zn),Fn=({children:n})=>{const[t,r]=(0,e.useState)(zn.tableType),[a,l]=(0,e.useState)(zn.language),[i,s]=(0,e.useState)(zn.messages),[u,c]=(0,e.useState)(zn.isLoading),[f,d]=(0,e.useState)(zn.periodicElements),[p,h]=(0,e.useState)(zn.selectedElement),[m,g]=(0,e.useState)(zn.selectedCategory),y=(0,e.useCallback)((e=>()=>{r(e)}),[]),v=(0,e.useCallback)((e=>()=>{l(e)}),[]),b=(0,e.useCallback)((e=>()=>{e&&e?.symbol!==p?.symbol?document.body.classList.add("hide"):document.body.classList.remove("hide"),g(void 0),h(e?.symbol===p?.symbol?void 0:e)}),[p]),A=(0,e.useCallback)((e=>()=>{g(e===m?void 0:e),h(void 0)}),[m]);(0,e.useEffect)((()=>{!async function(){try{const[n,t]=await Promise.all((e=a,e===Ln.Russian?[o.e(687).then(o.t.bind(o,687,19)),o.e(741).then(o.t.bind(o,741,19))]:[o.e(853).then(o.t.bind(o,853,19)),o.e(283).then(o.t.bind(o,283,19))]));s(n),d(t),c(!1)}catch(e){console.error(e)}var e}()}),[a]);const _={tableType:t,language:a,messages:i,isLoading:u,periodicElements:f,selectedElement:p,selectedCategory:m,onSelectTableType:y,onSelectLanguage:v,onSelectElement:b,onSelectCategory:A};return e.createElement(Dn.Provider,{value:_},n)},Un=()=>(0,e.useContext)(Dn);function jn(e,n){const t=[];for(let r=e;r<=n;r++)t.push(r);return t}const Gn=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],[3,4,0,0,0,0,0,0,0,0,0,0,5,6,7,8,9,10],[11,12,0,0,0,0,0,0,0,0,0,0,13,14,15,16,17,18],jn(19,36),jn(37,54),[55,56,0,...jn(72,86)],[87,88,0,...jn(104,118)],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,...jn(57,71)],[0,0,0,...jn(89,103)]],Vn=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],[3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,6,7,8,9,10],[11,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,14,15,16,17,18],[19,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,...jn(21,36)],[37,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,...jn(39,54)],jn(55,86),jn(87,118)],Wn={[Mn.long]:Gn,[Mn.superLong]:Vn},$n={[Mn.long]:["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18"],[Mn.superLong]:["1","2","","","","","","","","","","","","","","","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18"]},Yn={[Mn.long]:["","1","2","3","4","5","6","7",""],[Mn.superLong]:["","1","2","3","4","5","6","7"]},Qn=[Pn.AlkaliMetals,Pn.AlkalineEarthMetals,Pn.TransitionMetals,Pn.PostTransitionMetals,Pn.Metalloids,Pn.ReactiveNonMetals,Pn.NobleGases,Pn.Lanthanides,Pn.Actinides,Pn.UnknownProperties],Xn={[Pn.AlkaliMetals]:[Nn.AlkaliMetal],[Pn.AlkalineEarthMetals]:[Nn.AlkalineEarthMetal],[Pn.TransitionMetals]:[Nn.TransitionMetal],[Pn.PostTransitionMetals]:[Nn.PostTransitionMetal],[Pn.Metalloids]:[Nn.Metalloid],[Pn.ReactiveNonMetals]:[Nn.DiatomicNonmetal,Nn.PolyatomicNonmetal],[Pn.NobleGases]:[Nn.NobleGas],[Pn.Lanthanides]:[Nn.Lanthanide],[Pn.Actinides]:[Nn.Actinide],[Pn.UnknownProperties]:[Nn.UnknownAlkaliMetal,Nn.UnknownMetalloid,Nn.UnknownNobleGas,Nn.UnknownPostTransitionMetal,Nn.UnknownTransitionMetal]};var Kn=o(72),Zn=o.n(Kn),qn=o(825),Jn=o.n(qn),et=o(659),nt=o.n(et),tt=o(56),rt=o.n(tt),at=o(159),lt=o.n(at),ot=o(113),it=o.n(ot),st=o(809),ut={};ut.styleTagTransform=it(),ut.setAttributes=rt(),ut.insert=nt().bind(null,"head"),ut.domAPI=Jn(),ut.insertStyleElement=lt(),Zn()(st.A,ut);const ct=st.A&&st.A.locals?st.A.locals:void 0;var ft=o(638),dt={};dt.styleTagTransform=it(),dt.setAttributes=rt(),dt.insert=nt().bind(null,"head"),dt.domAPI=Jn(),dt.insertStyleElement=lt(),Zn()(ft.A,dt);const pt=ft.A&&ft.A.locals?ft.A.locals:void 0,ht=function(){const n=Qe(),{tableType:t}=Un(),r=(0,e.useMemo)((()=>t===Mn.superLong?Yn[t]:[...Yn[t],n.formatMessage({id:"Lanthanides"}),n.formatMessage({id:"Actinides"})]),[n,t]);return e.createElement("div",{className:pt.container},e.createElement("h4",null,e.createElement(Ze,{id:"PeriodsTitle"})),e.createElement("ul",{className:pt.list},r.map(((n,t)=>e.createElement("li",{key:`${n}-${t}`,className:On()(ct.periodItem,pt.item)},n)))))};var mt=o(924),gt={};gt.styleTagTransform=it(),gt.setAttributes=rt(),gt.insert=nt().bind(null,"head"),gt.domAPI=Jn(),gt.insertStyleElement=lt(),Zn()(mt.A,gt);const yt=mt.A&&mt.A.locals?mt.A.locals:void 0,vt=function(){const{tableType:n}=Un(),t=$n[n];return e.createElement("div",{className:yt.container},e.createElement("h4",null,e.createElement(Ze,{id:"GroupsTitle"})),e.createElement("ul",{className:On()(ct.groups,yt.list)},t.map(((n,t)=>e.createElement("li",{key:`${n}-${t}`,className:ct.groupItem},n)))))},bt=e=>{switch(!0){case e===Nn.NobleGas:return"nobleGas";case e===Nn.DiatomicNonmetal||e===Nn.PolyatomicNonmetal:return"diatomicNonMetals";case e===Nn.TransitionMetal:return"transitionMetal";case e===Nn.PostTransitionMetal:return"postTransitionMetal";case e===Nn.Metalloid:return"metalloid";case e===Nn.AlkaliMetal:return"alkaliMetal";case e===Nn.AlkalineEarthMetal:return"alkalineEarthMetal";case e===Nn.UnknownTransitionMetal||e===Nn.UnknownPostTransitionMetal||e===Nn.UnknownMetalloid||e===Nn.UnknownNobleGas||e===Nn.UnknownAlkaliMetal:return"unknownProperties";case e===Nn.Actinide:return"actinide";case e===Nn.Lanthanide:return"lanthanide";default:return""}};var At=o(916),_t={};_t.styleTagTransform=it(),_t.setAttributes=rt(),_t.insert=nt().bind(null,"head"),_t.domAPI=Jn(),_t.insertStyleElement=lt(),Zn()(At.A,_t);const Et=At.A&&At.A.locals?At.A.locals:void 0,Ct=function({cell:n}){const{periodicElements:t,selectedElement:r,selectedCategory:a,onSelectElement:l}=Un();if(0===n)return e.createElement("li",{className:ct.emptyCell});const o=t[n-1];return e.createElement("li",{key:o.symbol,className:On()(ct.cell,Et.cell,{[ct[bt(o.category)]]:!0,[Et.selectedCell]:a&&Xn[a].includes(o.category)||r?.symbol===o.symbol})},e.createElement("button",{className:Et.cellButton,onClick:l(o)},e.createElement("div",{className:Et.top},e.createElement("span",null,o.number),e.createElement("span",null,(i=o.atomic_mass,Math.round(1e4*i)/1e4))),e.createElement("strong",{className:Et.symbol},o.symbol),e.createElement("span",{className:Et.elementName},o.name)));var i};var wt=o(413),St={};St.styleTagTransform=it(),St.setAttributes=rt(),St.insert=nt().bind(null,"head"),St.domAPI=Jn(),St.insertStyleElement=lt(),Zn()(wt.A,St);const kt=wt.A&&wt.A.locals?wt.A.locals:void 0,It=function(){const{tableType:n}=Un(),t=Wn[n];return e.createElement("ul",{className:kt.list},t.map(((n,t)=>e.createElement("li",{key:t,className:On()(ct.row,kt.row)},e.createElement("ul",null,n.map(((n,t)=>e.createElement(Ct,{key:t,cell:n}))))))))};var Tt=o(19),Bt={};Bt.styleTagTransform=it(),Bt.setAttributes=rt(),Bt.insert=nt().bind(null,"head"),Bt.domAPI=Jn(),Bt.insertStyleElement=lt(),Zn()(Tt.A,Bt);const xt=Tt.A&&Tt.A.locals?Tt.A.locals:void 0,Nt=function(){return e.createElement("div",{className:xt.container},e.createElement(ht,null),e.createElement("div",null,e.createElement(vt,null),e.createElement(It,null)))},Pt=e=>{switch(!0){case e===Pn.NobleGases:return"nobleGas";case e===Pn.ReactiveNonMetals:return"diatomicNonMetals";case e===Pn.TransitionMetals:return"transitionMetal";case e===Pn.PostTransitionMetals:return"postTransitionMetal";case e===Pn.Metalloids:return"metalloid";case e===Pn.AlkaliMetals:return"alkaliMetal";case e===Pn.AlkalineEarthMetals:return"alkalineEarthMetal";case e===Pn.UnknownProperties:return"unknownProperties";case e===Pn.Actinides:return"actinide";case e===Pn.Lanthanides:return"lanthanide";default:return""}};var Lt=o(292),Mt={};Mt.styleTagTransform=it(),Mt.setAttributes=rt(),Mt.insert=nt().bind(null,"head"),Mt.domAPI=Jn(),Mt.insertStyleElement=lt(),Zn()(Lt.A,Mt);const Rt=Lt.A&&Lt.A.locals?Lt.A.locals:void 0,Ot=function(){const{selectedCategory:n,onSelectCategory:t}=Un();return e.createElement("div",{className:Rt.container},e.createElement("ul",{className:Rt.categories},Qn.map((r=>e.createElement("li",{key:r,className:On()(Rt.category,{[Rt.selectedCategory]:n===r})},e.createElement("button",{onClick:t(r)},e.createElement("span",{className:On()(Rt.categoryIcon,ct[Pt(r)])}),e.createElement(Ze,{id:r})))))))};var Ht=o(961);const zt=function({href:n,className:t,content:r}){return e.createElement("a",{href:n,className:On()(t),target:"_blank",rel:"nofollow noopener"},r)};var Dt=o(346),Ft={};Ft.styleTagTransform=it(),Ft.setAttributes=rt(),Ft.insert=nt().bind(null,"head"),Ft.domAPI=Jn(),Ft.insertStyleElement=lt(),Zn()(Dt.A,Ft);const Ut=Dt.A&&Dt.A.locals?Dt.A.locals:void 0,jt=(n,{dimension:t,returnEmpty:r=!1,hasBrackets:a=!1}={})=>{const l=t?` ${t}`:"",o=r?"":" —";return"string"==typeof n&&n||"number"==typeof n?e.createElement("span",null,`${a?"(":""}${n}${l}${a?")":""}`):o},Gt=n=>{const t=n.replace(/[a-zA-Z]([0-9]+)(\s|$)/g,((e,n,t)=>`${e[0]}<sup>${n}</sup>${t}`));return e.createElement("span",{dangerouslySetInnerHTML:{__html:t}})},Vt=e=>{var n;if("number"==typeof e)return n=e-273.15,Math.round(100*n)/100},Wt=function(){const n=Qe(),{selectedElement:t,onSelectElement:r}=Un(),a=function(n){const t=(0,e.useRef)(null);function r(e){t.current&&!t.current.contains(e.target)&&n()}return(0,e.useEffect)((()=>(document.addEventListener("mousedown",r),()=>{document.removeEventListener("mousedown",r)})),[]),t}(r(void 0));return l=r(void 0),(0,e.useEffect)((()=>{function e(e){"Escape"===e.key&&(e.preventDefault(),l())}return document.addEventListener("keydown",e),()=>{document.removeEventListener("keydown",e)}}),[]),t?(0,Ht.createPortal)(e.createElement("div",{className:Ut.backOverlay},e.createElement("div",{ref:a,className:Ut.container},e.createElement("button",{title:n.formatMessage({id:"ClosePopupButtonTitle"}),className:Ut.closeButton,onClick:r(void 0)}),e.createElement("div",{className:Ut.scrollContainer},e.createElement("div",{className:Ut.contentContainer},e.createElement("model-viewer",{alt:t.summary,src:t.bohr_model_3d,ar:!0,"shadow-intensity":"0","camera-controls":!0,"touch-action":"pan-y"}),e.createElement("h2",null,`${t.name} (${t.symbol})`),e.createElement("p",null,t.summary," ",e.createElement(zt,{href:t.source,className:Ut.linkToSource,content:e.createElement(Ze,{id:"LinkToSource"})})),e.createElement("ul",null,e.createElement("li",null,e.createElement(Ze,{id:"Appearance"}),jt(t.appearance)),e.createElement("li",null,e.createElement(Ze,{id:"StandardAtomicWeight"}),jt(t.atomic_mass))),e.createElement("h3",null,e.createElement(Ze,{id:"NameInPeriodicTable",values:{name:t.name}})),e.createElement("ul",null,e.createElement("li",null,e.createElement(Ze,{id:"AtomicNumber"}),jt(t.number)),e.createElement("li",null,e.createElement(Ze,{id:"Group"}),jt(t.group)),e.createElement("li",null,e.createElement(Ze,{id:"Period"}),jt(t.period)),e.createElement("li",null,e.createElement(Ze,{id:"Block"}),jt(t.block))),e.createElement("h3",null,e.createElement(Ze,{id:"PhysicalProperties"})),e.createElement("ul",null,e.createElement("li",null,e.createElement(Ze,{id:"PhaseAtSTP"}),jt(t.phase)),e.createElement("li",null,e.createElement(Ze,{id:"MeltingPoint"}),e.createElement("span",{className:Ut.temperature},jt(t.melt,{dimension:"K"}),jt(Vt(t.melt),{dimension:"°C",returnEmpty:!0,hasBrackets:!0}))),e.createElement("li",null,e.createElement(Ze,{id:"BoilingPoint"}),e.createElement("span",{className:Ut.temperature},jt(t.boil,{dimension:"K"}),jt(Vt(t.boil),{dimension:"°C",returnEmpty:!0,hasBrackets:!0}))),e.createElement("li",null,e.createElement(Ze,{id:"Density"}),jt(t.density,{dimension:"g/L"})),e.createElement("li",null,e.createElement(Ze,{id:"MolarHeatCapacity"}),jt(t.molar_heat,{dimension:"J/(mol·K)"}))),e.createElement("h3",null,e.createElement(Ze,{id:"AtomicProperties"})),e.createElement("ul",null,e.createElement("li",null,e.createElement(Ze,{id:"ElectronConfiguration"}),e.createElement("span",{className:Ut.electronConfiguration},Gt(t.electron_configuration),Gt(t.electron_configuration_semantic))),e.createElement("li",null,e.createElement(Ze,{id:"ElectronsPerShell"}),jt(t.shells.join(", "))),e.createElement("li",null,e.createElement(Ze,{id:"ElectronegativityPaulingScale"}),jt(t.electronegativity_pauling)),e.createElement("li",null,e.createElement(Ze,{id:"IonizationEnergies"}),jt(t.ionization_energies.join(", ")))),e.createElement("h3",null,e.createElement(Ze,{id:"History"})),e.createElement("ul",null,e.createElement("li",null,e.createElement(Ze,{id:"Naming"}),t.naming_link?e.createElement(zt,{href:t.naming_link,content:jt(t.naming)}):jt(t.naming)),e.createElement("li",null,e.createElement(Ze,{id:"DiscoveredBy"}),t.discovered_by_link?e.createElement(zt,{href:t.discovered_by_link,content:jt(t.discovered_by)}):jt(t.discovered_by))),e.createElement("img",{src:t.image.url,alt:t.image.title,className:Ut.image}),e.createElement("small",null,t.image.title),e.createElement("small",{className:Ut.attribution},t.image.attribution))))),document.body):null;var l};var $t=o(959),Yt={};Yt.styleTagTransform=it(),Yt.setAttributes=rt(),Yt.insert=nt().bind(null,"head"),Yt.domAPI=Jn(),Yt.insertStyleElement=lt(),Zn()($t.A,Yt);const Qt=$t.A&&$t.A.locals?$t.A.locals:void 0,Xt=function({options:n,currentValue:t,onSelectOption:r}){return e.createElement("ul",{className:Qt.container},n.map(((n,a)=>e.createElement("li",{key:`${n.value}-${a}`,className:On()({[Qt.active]:n.value===t})},e.createElement("button",{onClick:r(n.value)},n.label)))))};var Kt=o(765),Zt={};Zt.styleTagTransform=it(),Zt.setAttributes=rt(),Zt.insert=nt().bind(null,"head"),Zt.domAPI=Jn(),Zt.insertStyleElement=lt(),Zn()(Kt.A,Zt);const qt=Kt.A&&Kt.A.locals?Kt.A.locals:void 0,Jt=[{label:"Рус",value:Ln.Russian},{label:"Eng",value:Ln.English}],er=function(){const{language:n,onSelectLanguage:t}=Un();return e.createElement("header",{className:qt.header},e.createElement("h1",null,e.createElement(Ze,{id:"MainTitle"})),e.createElement(Xt,{options:Jt,currentValue:n,onSelectOption:t}))};var nr=o(559),tr={};tr.styleTagTransform=it(),tr.setAttributes=rt(),tr.insert=nt().bind(null,"head"),tr.domAPI=Jn(),tr.insertStyleElement=lt(),Zn()(nr.A,tr);const rr=nr.A&&nr.A.locals?nr.A.locals:void 0,ar=()=>e.createElement("footer",{className:rr.footer},e.createElement("span",null,"2024"),e.createElement("a",{href:"https://github.com/alexeyvax/periodic-table",target:"_blank",rel:"nofollow noopener"},"alexeyvax"));var lr=o(219),or={};or.styleTagTransform=it(),or.setAttributes=rt(),or.insert=nt().bind(null,"head"),or.domAPI=Jn(),or.insertStyleElement=lt(),Zn()(lr.A,or);const ir=lr.A&&lr.A.locals?lr.A.locals:void 0,sr=[{label:e.createElement(Ze,{id:"LongTableTypeLabel"}),value:Mn.long},{label:e.createElement(Ze,{id:"SuperLongTableTypeLabel"}),value:Mn.superLong}],ur=()=>{const{tableType:n,messages:t,language:r,isLoading:a,selectedElement:l,onSelectTableType:o}=Un();return e.createElement(xn,{locale:r,messages:t},e.createElement("div",{className:ir.container},a?e.createElement("div",{className:ir.loader},"..."):e.createElement(e.Fragment,null,e.createElement("div",null,e.createElement("div",{className:ct.centerContainer},e.createElement(er,null),e.createElement(Xt,{options:sr,currentValue:n,onSelectOption:o})),e.createElement("div",{className:On()(ct.centerContainer,{[ct.superLongCenterContainer]:n===Mn.superLong})},e.createElement(Nt,null)),e.createElement("div",{className:ct.centerContainer},e.createElement(Ot,null))),e.createElement("div",{className:ir.wideContainer},e.createElement("div",{className:ct.centerContainer},e.createElement(ar,null))),l&&e.createElement(Wt,null))))};var cr=o(478),fr={};fr.styleTagTransform=it(),fr.setAttributes=rt(),fr.insert=nt().bind(null,"head"),fr.domAPI=Jn(),fr.insertStyleElement=lt(),Zn()(cr.A,fr),cr.A&&cr.A.locals&&cr.A.locals,(async()=>{const t=document.getElementById("root");(0,n.H)(t).render(e.createElement(Fn,null,e.createElement(ur,null)))})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,